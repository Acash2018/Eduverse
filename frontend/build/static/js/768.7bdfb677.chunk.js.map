{"version":3,"file":"static/js/768.7bdfb677.chunk.js","mappings":"kKAGA,MAgHA,EAhHsBA,KACpB,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,CACjDC,OAAO,EACPC,KAAK,EACLC,OAAO,EACPC,UAAU,EACVC,SAAS,KAEJC,EAAUC,IAAeP,EAAAA,EAAAA,UAAS,KAGzCQ,EAAAA,EAAAA,YAAU,KAC0BC,WAChC,IACE,MAAMC,EAAQC,aAAaC,QAAQ,SAC7BC,QAAiBC,EAAAA,EAAMC,IAAI,+CAAgD,CAC/EC,QAAS,CAAEC,cAAe,UAAUP,OAEtCX,EAAiBc,EAASK,KAAKpB,cACjC,CAAE,MAAOqB,GACPC,QAAQD,MAAM,wCAAyCA,GACvDZ,EAAY,wCACd,GAEFc,EAA2B,GAC1B,IAGH,MAcMC,EAAwBC,IAC5B,MAAM,KAAEC,EAAI,QAAEC,GAAYF,EAAEG,OAC5B3B,GAAkB4B,IAAS,IACtBA,EACH,CAACH,GAAOC,KACP,EAGL,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BAEJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,0BACPC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLR,KAAK,QACLC,QAAS3B,EAAcG,MACvBgC,SAAUX,QAIdM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,wBACPC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLR,KAAK,MACLC,QAAS3B,EAAcI,IACvB+B,SAAUX,QAIdM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,0BACPC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLR,KAAK,QACLC,QAAS3B,EAAcK,MACvB8B,SAAUX,QAIdM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,6BACPC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLR,KAAK,WACLC,QAAS3B,EAAcM,SACvB6B,SAAUX,QAIdM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,4BACPC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLR,KAAK,UACLC,QAAS3B,EAAcO,QACvB4B,SAAUX,QAIdS,EAAAA,EAAAA,KAAA,UAAQF,UAAU,cAAcK,QA5EJzB,UAC9B,IACE,MAAMC,EAAQC,aAAaC,QAAQ,eAC7BE,EAAAA,EAAMqB,IAAI,+CAAgD,CAAErC,iBAAiB,CACjFkB,QAAS,CAAEC,cAAe,UAAUP,OAEtCH,EAAY,iDACd,CAAE,MAAOY,GACPC,QAAQD,MAAM,wCAAyCA,GACvDZ,EAAY,6CACd,GAkEmEuB,SAAC,+BAGjExB,IAAYyB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAExB,MAClC,C","sources":["Settings/Notifications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Notifications = () => {\n  const [notifications, setNotifications] = useState({\n    email: true,\n    sms: false,\n    likes: true,\n    comments: true,\n    follows: true,\n  });\n  const [feedback, setFeedback] = useState('');\n\n  // Fetch current notification preferences from the backend\n  useEffect(() => {\n    const fetchNotificationSettings = async () => {\n      try {\n        const token = localStorage.getItem('token');  // Assuming JWT authentication\n        const response = await axios.get('http://localhost:5002/api/user/notifications', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setNotifications(response.data.notifications);\n      } catch (error) {\n        console.error('Error fetching notification settings:', error);\n        setFeedback('Failed to load notification settings.');\n      }\n    };\n    fetchNotificationSettings();\n  }, []);\n\n  // Handle saving updated notification preferences\n  const handleSaveNotifications = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put('http://localhost:5000/api/user/notifications', { notifications }, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setFeedback('Notification preferences updated successfully!');\n    } catch (error) {\n      console.error('Error updating notification settings:', error);\n      setFeedback('Failed to update notification preferences.');\n    }\n  };\n\n  // Handle checkbox changes\n  const handleCheckboxChange = (e) => {\n    const { name, checked } = e.target;\n    setNotifications((prevState) => ({\n      ...prevState,\n      [name]: checked,\n    }));\n  };\n\n  return (\n    <div className=\"settings-section\">\n      <h3>Notification Preferences</h3>\n\n      <div className=\"input-group\">\n        <label>Email Notifications:</label>\n        <input\n          type=\"checkbox\"\n          name=\"email\"\n          checked={notifications.email}\n          onChange={handleCheckboxChange}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>SMS Notifications:</label>\n        <input\n          type=\"checkbox\"\n          name=\"sms\"\n          checked={notifications.sms}\n          onChange={handleCheckboxChange}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Likes Notifications:</label>\n        <input\n          type=\"checkbox\"\n          name=\"likes\"\n          checked={notifications.likes}\n          onChange={handleCheckboxChange}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Comments Notifications:</label>\n        <input\n          type=\"checkbox\"\n          name=\"comments\"\n          checked={notifications.comments}\n          onChange={handleCheckboxChange}\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Follows Notifications:</label>\n        <input\n          type=\"checkbox\"\n          name=\"follows\"\n          checked={notifications.follows}\n          onChange={handleCheckboxChange}\n        />\n      </div>\n\n      <button className=\"save-button\" onClick={handleSaveNotifications}>\n        Save Notification Settings\n      </button>\n      {feedback && <p className=\"feedback\">{feedback}</p>}\n    </div>\n  );\n};\n\nexport default Notifications;\n"],"names":["Notifications","notifications","setNotifications","useState","email","sms","likes","comments","follows","feedback","setFeedback","useEffect","async","token","localStorage","getItem","response","axios","get","headers","Authorization","data","error","console","fetchNotificationSettings","handleCheckboxChange","e","name","checked","target","prevState","_jsxs","className","children","_jsx","type","onChange","onClick","put"],"sourceRoot":""}