{"version":3,"file":"static/js/50.8c9f1492.chunk.js","mappings":"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","sources":["enter/login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nimport { FaRocket, FaEye, FaEyeSlash, FaCheckCircle, FaTimesCircle } from 'react-icons/fa';\nimport ParticlesBg from 'particles-bg';\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [passwordStrength, setPasswordStrength] = useState(0);\n  const [isEmailValid, setIsEmailValid] = useState(null);\n  const navigate = useNavigate();\n\n  const validateEmail = (email) => {\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    setIsEmailValid(emailRegex.test(email));\n  };\n\n  const calculatePasswordStrength = (password) => {\n    let strength = 0;\n    if (password.length >= 8) strength += 1;\n    if (/[A-Z]/.test(password)) strength += 1;\n    if (/[0-9]/.test(password)) strength += 1;\n    if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n    setPasswordStrength(strength);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    if (name === 'email') {\n      validateEmail(value);\n    }\n    if (name === 'password') {\n      calculatePasswordStrength(value);\n    }\n  };\n\n  const validateForm = () => {\n    let newErrors = {};\n    if (!formData.email) newErrors.email = 'Email is required';\n    else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) newErrors.email = 'Email address is invalid';\n    if (!formData.password) newErrors.password = 'Password is required';\n    else if (formData.password.length < 8) newErrors.password = 'Password must be at least 8 characters';\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch('http://127.0.0.1:5002/api/auth/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(formData),\n        });\n\n        const data = await response.json();\n\n        if (response.ok && data.access_token) {\n          localStorage.setItem('access_token', data.access_token);\n          setIsSuccess(true);\n          setErrorMessage('');\n          \n          setTimeout(() => {\n            navigate('/profile');\n          }, 2000);\n        } else {\n          setErrorMessage(data.error || 'Invalid credentials');\n        }\n      } catch (error) {\n        setErrorMessage('Network error. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <ParticlesBg type=\"cobweb\" bg={true} color=\"#4a90e2\" />\n      \n      <motion.div \n        className=\"holographic-panel\"\n        initial={{ opacity: 0, y: -50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 1, ease: \"easeOut\" }}\n      >\n        <motion.img \n          src=\"/eduverse-logo.png\"\n          alt=\"EduVerse\"\n          className=\"login-logo\"\n          whileHover={{ rotate: 360, scale: 1.1 }}\n          transition={{ duration: 0.8 }}\n        />\n\n        <AnimatePresence>\n          {isSuccess ? (\n            <motion.div \n              className=\"success-container\"\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              exit={{ scale: 0 }}\n            >\n              <FaRocket className=\"rocket-icon\" />\n              <p className=\"success-text\">Launching into EduVerse...</p>\n            </motion.div>\n          ) : (\n            <motion.form \n              onSubmit={handleSubmit}\n              className=\"login-form\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n            >\n              <div className=\"input-group\">\n                <motion.input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  whileFocus={{ scale: 1.02 }}\n                  className={`neon-input ${isEmailValid === true ? 'valid' : isEmailValid === false ? 'invalid' : ''}`}\n                />\n                {isEmailValid !== null && (\n                  <motion.div \n                    initial={{ scale: 0 }}\n                    animate={{ scale: 1 }}\n                    className=\"validation-icon\"\n                  >\n                    {isEmailValid ? <FaCheckCircle className=\"valid-icon\" /> : <FaTimesCircle className=\"invalid-icon\" />}\n                  </motion.div>\n                )}\n              </div>\n\n              <div className=\"input-group\">\n                <motion.input\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  whileFocus={{ scale: 1.02 }}\n                  className=\"neon-input\"\n                />\n                <motion.div \n                  className=\"password-toggle\"\n                  whileHover={{ scale: 1.1 }}\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? <FaEyeSlash /> : <FaEye />}\n                </motion.div>\n                <div className=\"strength-meter\">\n                  {[...Array(4)].map((_, i) => (\n                    <motion.div\n                      key={i}\n                      className={`strength-segment ${i < passwordStrength ? 'active' : ''}`}\n                      initial={{ width: 0 }}\n                      animate={{ width: '100%' }}\n                    />\n                  ))}\n                </div>\n              </div>\n\n              <motion.button\n                type=\"submit\"\n                className=\"submit-button\"\n                disabled={isLoading}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                {isLoading ? (\n                  <motion.div \n                    className=\"loading-spinner\"\n                    animate={{ rotate: 360 }}\n                    transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n                  />\n                ) : 'Enter EduVerse'}\n              </motion.button>\n            </motion.form>\n          )}\n        </AnimatePresence>\n\n        {errorMessage && (\n          <motion.div \n            className=\"error-message\"\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: 20 }}\n          >\n            {errorMessage}\n          </motion.div>\n        )}\n\n        <motion.button\n          onClick={() => navigate('/register')}\n          className=\"register-link\"\n          whileHover={{ scale: 1.05, textShadow: \"0 0 8px rgb(255,255,255)\" }}\n        >\n          New to EduVerse? Join the future\n        </motion.button>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["Login","formData","setFormData","useState","email","password","errors","setErrors","isLoading","setIsLoading","isSuccess","setIsSuccess","errorMessage","setErrorMessage","showPassword","setShowPassword","passwordStrength","setPasswordStrength","isEmailValid","setIsEmailValid","navigate","useNavigate","handleChange","e","name","value","target","prev","test","strength","length","calculatePasswordStrength","_jsxs","className","children","_jsx","ParticlesBg","type","bg","color","motion","div","initial","opacity","y","animate","transition","duration","ease","img","src","alt","whileHover","rotate","scale","AnimatePresence","exit","FaRocket","form","onSubmit","async","preventDefault","validateForm","newErrors","Object","keys","response","fetch","method","headers","body","JSON","stringify","data","json","ok","access_token","localStorage","setItem","setTimeout","error","input","placeholder","onChange","whileFocus","FaCheckCircle","FaTimesCircle","onClick","FaEyeSlash","FaEye","Array","map","_","i","width","button","disabled","whileTap","repeat","Infinity","x","textShadow"],"sourceRoot":""}