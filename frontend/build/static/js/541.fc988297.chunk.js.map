{"version":3,"file":"static/js/541.fc988297.chunk.js","mappings":"kKAGA,MAwDA,EAxDuBA,KACrB,MAAOC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,WAC9CC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAGzCG,EAAAA,EAAAA,YAAU,KACqBC,WAC3B,IACE,MAAMC,EAAQC,aAAaC,QAAQ,SAC7BC,QAAiBC,EAAAA,EAAMC,IAAI,iDAAkD,CACjFC,QAAS,CAAEC,cAAe,UAAUP,OAEtCN,EAAkBS,EAASK,KAAKf,eAClC,CAAE,MAAOgB,GACPC,QAAQD,MAAM,mCAAoCA,GAClDZ,EAAY,mCACd,GAEFc,EAAsB,GACrB,IAgBH,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,yBACPF,EAAAA,EAAAA,MAAA,UACEI,MAAOvB,EACPwB,SAAWC,GAAMxB,EAAkBwB,EAAEC,OAAOH,OAAOF,SAAA,EAEnDC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,SAAQF,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQC,MAAM,UAASF,SAAC,mBAG5BC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,cAAcO,QA1BVrB,UACxB,IACE,MAAMC,EAAQC,aAAaC,QAAQ,eAC7BE,EAAAA,EAAMiB,IAAI,iDAAkD,CAAE5B,kBAAkB,CACpFa,QAAS,CAAEC,cAAe,UAAUP,OAEtCH,EAAY,yCACd,CAAE,MAAOY,GACPC,QAAQD,MAAM,mCAAoCA,GAClDZ,EAAY,qCACd,GAgB6DiB,SAAC,0BAG3DlB,IAAYmB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAElB,MAClC,C","sources":["Settings/ProfilePrivacy.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ProfilePrivacy = () => {\n  const [profilePrivacy, setProfilePrivacy] = useState('public'); // public or private\n  const [feedback, setFeedback] = useState('');\n\n  // Fetch current profile privacy setting from the backend\n  useEffect(() => {\n    const fetchPrivacySettings = async () => {\n      try {\n        const token = localStorage.getItem('token');  // Assuming you use JWT authentication\n        const response = await axios.get('http://localhost:5002/api/user/profile-privacy', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setProfilePrivacy(response.data.profilePrivacy);\n      } catch (error) {\n        console.error('Error fetching privacy settings:', error);\n        setFeedback('Failed to load privacy settings.');\n      }\n    };\n    fetchPrivacySettings();\n  }, []);\n\n  // Handle saving the updated privacy settings\n  const handleSavePrivacy = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put('http://localhost:5000/api/user/profile-privacy', { profilePrivacy }, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setFeedback('Privacy settings updated successfully!');\n    } catch (error) {\n      console.error('Error updating privacy settings:', error);\n      setFeedback('Failed to update privacy settings.');\n    }\n  };\n\n  return (\n    <div className=\"settings-section\">\n      <h3>Profile Privacy</h3>\n      <div className=\"input-group\">\n        <label>Profile visibility:</label>\n        <select\n          value={profilePrivacy}\n          onChange={(e) => setProfilePrivacy(e.target.value)}\n        >\n          <option value=\"public\">Public</option>\n          <option value=\"private\">Private</option>\n        </select>\n      </div>\n      <button className=\"save-button\" onClick={handleSavePrivacy}>\n        Save Privacy Settings\n      </button>\n      {feedback && <p className=\"feedback\">{feedback}</p>}\n    </div>\n  );\n};\n\nexport default ProfilePrivacy;\n"],"names":["ProfilePrivacy","profilePrivacy","setProfilePrivacy","useState","feedback","setFeedback","useEffect","async","token","localStorage","getItem","response","axios","get","headers","Authorization","data","error","console","fetchPrivacySettings","_jsxs","className","children","_jsx","value","onChange","e","target","onClick","put"],"sourceRoot":""}