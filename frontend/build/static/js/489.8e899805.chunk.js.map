{"version":3,"file":"static/js/489.8e899805.chunk.js","mappings":"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","sources":["../../../node_modules/particles-bg/src/utils/Rand.js","../../../node_modules/particles-bg/src/particles/Canvas.jsx","../../../node_modules/particles-bg/src/utils/Color.js","../../../node_modules/particles-bg/src/particles/Ball.jsx","../../../node_modules/particles-bg/src/particles/Color.jsx","../../../node_modules/particles-bg/src/particles/Custom.jsx","../../../node_modules/particles-bg/src/particles/Lines.jsx","../../../node_modules/particles-bg/src/particles/Thick.jsx","../../../node_modules/particles-bg/src/particles/Square.jsx","../../../node_modules/particles-bg/src/particles/Cobweb.jsx","../../../node_modules/particles-bg/src/particles/Circle.jsx","../../../node_modules/particles-bg/src/particles/Tadpole.jsx","../../../node_modules/particles-bg/src/particles/Polygon.jsx","../../../node_modules/particles-bg/src/particles/Fountain.jsx","../../../node_modules/particles-bg/src/index.js","../../../node_modules/proton-engine/src/math/MathUtil.js","../../../node_modules/proton-engine/src/math/Span.js","../../../node_modules/proton-engine/src/utils/WebGLUtil.js","../../../node_modules/proton-engine/src/utils/DomUtil.js","../../../node_modules/proton-engine/src/utils/ImgUtil.js","../../../node_modules/proton-engine/src/utils/Util.js","../../../node_modules/proton-engine/src/utils/Puid.js","../../../node_modules/proton-engine/src/core/Pool.js","../../../node_modules/proton-engine/src/debug/Stats.js","../../../node_modules/proton-engine/src/events/EventDispatcher.js","../../../node_modules/proton-engine/src/math/Integration.js","../../../node_modules/proton-engine/src/core/Proton.js","../../../node_modules/proton-engine/src/utils/Rgb.js","../../../node_modules/proton-engine/src/math/ease.js","../../../node_modules/proton-engine/src/math/Vector2D.js","../../../node_modules/proton-engine/src/core/Particle.js","../../../node_modules/proton-engine/src/utils/ColorUtil.js","../../../node_modules/proton-engine/src/math/Polar2D.js","../../../node_modules/proton-engine/src/math/Mat3.js","../../../node_modules/proton-engine/src/math/ArraySpan.js","../../../node_modules/proton-engine/src/math/Rectangle.js","../../../node_modules/proton-engine/src/initialize/Rate.js","../../../node_modules/proton-engine/src/initialize/Initialize.js","../../../node_modules/proton-engine/src/initialize/Life.js","../../../node_modules/proton-engine/src/zone/Zone.js","../../../node_modules/proton-engine/src/zone/PointZone.js","../../../node_modules/proton-engine/src/initialize/Position.js","../../../node_modules/proton-engine/src/initialize/Velocity.js","../../../node_modules/proton-engine/src/initialize/Mass.js","../../../node_modules/proton-engine/src/initialize/Radius.js","../../../node_modules/proton-engine/src/initialize/Body.js","../../../node_modules/proton-engine/src/behaviour/Behaviour.js","../../../node_modules/proton-engine/src/behaviour/Force.js","../../../node_modules/proton-engine/src/behaviour/Attraction.js","../../../node_modules/proton-engine/src/behaviour/RandomDrift.js","../../../node_modules/proton-engine/src/behaviour/Gravity.js","../../../node_modules/proton-engine/src/behaviour/Collision.js","../../../node_modules/proton-engine/src/behaviour/CrossZone.js","../../../node_modules/proton-engine/src/behaviour/Alpha.js","../../../node_modules/proton-engine/src/behaviour/Scale.js","../../../node_modules/proton-engine/src/behaviour/Rotate.js","../../../node_modules/proton-engine/src/behaviour/Color.js","../../../node_modules/proton-engine/src/behaviour/Cyclone.js","../../../node_modules/proton-engine/src/behaviour/Repulsion.js","../../../node_modules/proton-engine/src/behaviour/GravityWell.js","../../../node_modules/proton-engine/src/initialize/InitializeUtil.js","../../../node_modules/proton-engine/src/emitter/Emitter.js","../../../node_modules/proton-engine/src/emitter/BehaviourEmitter.js","../../../node_modules/proton-engine/src/emitter/FollowEmitter.js","../../../node_modules/proton-engine/src/render/BaseRenderer.js","../../../node_modules/proton-engine/src/render/CanvasRenderer.js","../../../node_modules/proton-engine/src/render/DomRenderer.js","../../../node_modules/proton-engine/src/render/EaselRenderer.js","../../../node_modules/proton-engine/src/render/PixelRenderer.js","../../../node_modules/proton-engine/src/render/PixiRenderer.js","../../../node_modules/proton-engine/src/utils/MStack.js","../../../node_modules/proton-engine/src/render/WebGLRenderer.js","../../../node_modules/proton-engine/src/render/CustomRenderer.js","../../../node_modules/proton-engine/src/zone/LineZone.js","../../../node_modules/proton-engine/src/zone/CircleZone.js","../../../node_modules/proton-engine/src/zone/RectZone.js","../../../node_modules/proton-engine/src/zone/ImageZone.js","../../../node_modules/proton-engine/src/debug/Debug.js","../../../node_modules/proton-engine/src/index.js","../../../node_modules/raf-manager/src/RAFManager.js","../../../node_modules/react/cjs/react.production.js","../../../node_modules/react/index.js"],"sourcesContent":["// Code source from here, thanks author\n// https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\nclass Rand {\n\n  constructor() {\n      this.list = [];\n  }\n\n  set(probability, target) {\n      this.list.push({\n          probability,\n          target,\n          a: 0,\n          b: 1\n      });\n\n      this.calculation();\n  }\n\n  calculation() {\n      let total = 0;\n      for (let i = 0; i < this.list.length; i++) {\n          total += this.list[i].probability;\n      }\n\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n          const val = obj.probability / total;\n\n          obj.a = i === 0 ? 0 : this.list[i - 1].b;\n          obj.b = obj.a + val;\n      }\n  }\n\n  getResult() {\n      const val = Math.random();\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n\n          if (val <= obj.b && val > obj.a) {\n              return obj.target;\n          }\n      }\n\n      return this.list[0].target;\n  }\n};\n\nexport default Rand;\n","import React from \"react\";\nimport RAFManager from \"raf-manager\";\nexport default class Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._iid = 0;\n    this._oid = 0;\n    this.size = { width: 0, height: 0 };\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this._oid = setTimeout(() => {\n      this.initCanvas();\n      this.resize = this.resize.bind(this);\n      window.addEventListener(\"resize\", this.resize);\n    }, 100);\n\n    const canvas = this.getCanvas();\n    this.props.onCanvasDidMount && this.props.onCanvasDidMount(canvas);\n  }\n\n  initCanvas() {\n    const canvas = this.getCanvas();\n\n    if (this.props.globalCompositeOperation) {\n      const context = canvas.getContext(\"2d\");\n      context.globalCompositeOperation = this.props.globalCompositeOperation;\n    }\n\n    const { width, height } = this.setCanvasSize(canvas);\n    this.heartbeatDetectionCanvasSize(canvas);\n    this.props.onCanvasInited(canvas, width, height);\n  }\n\n  getCanvas(){\n    const canvas = this.canvasRef.current;\n    return canvas;\n  }\n\n  heartbeatDetectionCanvasSize(canvas) {\n    this._iid = setInterval(() => {\n      if(this.canvasRef.current){\n        const newHeight = this.canvasRef.current.clientHeight;\n        if (newHeight !== this.size.height) {\n          const { width, height } = this.setCanvasSize(canvas);\n          this.props.onResize && this.props.onResize(width, height);\n        }\n      }\n    }, 1000 / 10);\n  }\n\n  componentWillUnmount() {\n    try{\n      window.removeEventListener(\"resize\", this.resize);\n      clearInterval(this._iid);\n      clearTimeout(this._oid);\n    }catch(e){\n    }\n  }\n\n  resize() {\n    const canvas = this.getCanvas();\n    const { width, height } = this.setCanvasSize(canvas);\n    this.props.onResize && this.props.onResize(width, height);\n  }\n\n  setCanvasSize(canvas) {\n    const width = this.canvasRef.current.clientWidth;\n    const height = this.canvasRef.current.clientHeight;\n\n    this.size.width = width;\n    this.size.height = height;\n    canvas.width = width;\n    canvas.height = height;\n    return { width, height };\n  }\n\n  handleWaypointEnter() {\n    RAFManager.start();\n  }\n\n  handleWaypointLeave() {\n    RAFManager.stop();\n  }\n\n  getStyle() {\n    const { bg } = this.props;\n    let style = { width: \"100%\", height: \"100%\" };\n\n    if (bg === true) {\n      style = Object.assign(style, {\n        position: \"absolute\",\n        zIndex: -1,\n        top: 0,\n        left: 0\n      });\n    } else if(bg && typeof bg === \"object\") {\n      style = Object.assign(style, bg);\n    }\n\n    return style;\n  }\n\n  handleMouseDown(e) {\n    this.props.onMouseDown && this.props.onMouseDown(e);\n  }\n\n  render() {\n    return (\n      <canvas className=\"particles-bg-canvas-self\"\n        ref={this.canvasRef}\n        onMouseDown={this.handleMouseDown.bind(this)}\n        style={this.getStyle()}\n      />\n    );\n  }\n}\n","\nfunction hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : {};\n}\n\nfunction getColor(color, a) {\n    let c;\n    if (color) {\n        c = hexToRgb(color);\n        return `rgba(${c.r},${c.g},${c.b}, ${a})`;\n    } else {\n        return null;\n    }\n}\n\n\nexport { hexToRgb, getColor };","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\nimport { getColor } from \"../utils/Color\";\n\nexport default class Ball extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    this.createMiniEmitter(canvas);\n    RAFManager.add(this.renderProton);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) { }\n  }\n\n  onResize() { }\n\n  createProton(canvas, width, height) {\n    const context = canvas.getContext(\"2d\");\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 9),\n      new Proton.Span(0.8, 1.3)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(1, 50));\n    emitter.addInitialize(new Proton.Life(5, 6));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(5, 8),\n        new Proton.Span(30, 70),\n        \"polar\"\n      )\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(1, 0));\n    emitter.addBehaviour(\n      new Proton.Color([\"#36aaf3\", \"#fd769c\", \"#94ff22\", \"#ffa545\", \"#ffffff\"])\n    );\n    emitter.addBehaviour(new Proton.Scale(0.7, 1));\n    emitter.addBehaviour(new Proton.Gravity(3));\n    emitter.addBehaviour(new Proton.Collision(emitter));\n    emitter.addBehaviour(this.customDeadBehaviour(canvas));\n    emitter.addBehaviour(\n      new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      )\n    );\n\n    emitter.p.x = Math.min(500, Math.max(canvas.width / 2 - 400, 50));\n    emitter.p.y = canvas.height / 2 + 50;\n    emitter.emit();\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    renderer.onProtonUpdate =  ()=> {\n      context.fillStyle = getColor(this.props.color, 0.2) || \"rgba(255, 255, 255, 0.2)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    };\n    this.proton.addRenderer(renderer);\n  }\n\n  customDeadBehaviour(canvas) {\n    return {\n      initialize: function (particle) { },\n      applyBehaviour: particle => {\n        if (particle.p.y + particle.radius >= canvas.height) {\n          if (particle.radius > 9) {\n            this.miniEmitteing(particle);\n            particle.dead = true;\n          }\n        }\n      }\n    };\n  }\n\n  createMiniEmitter(canvas) {\n    const miniEmitter = new Proton.Emitter();\n    miniEmitter.rate = new Proton.Rate(\n      new Proton.Span(3, 6),\n      new Proton.Span(1, 2)\n    );\n\n    miniEmitter.addInitialize(new Proton.Mass(1));\n    miniEmitter.radiusInitialize = new Proton.Radius();\n    miniEmitter.addInitialize(miniEmitter.radiusInitialize);\n    miniEmitter.addInitialize(new Proton.Life(0.5, 1));\n    miniEmitter.addInitialize(\n      new Proton.V(\n        new Proton.Span(1.5, 3),\n        new Proton.Span(0, 70, true),\n        \"polar\"\n      )\n    );\n\n    miniEmitter.colorBehaviour = new Proton.Color(\"#ffffff\");\n    miniEmitter.addBehaviour(new Proton.Alpha(1, 0));\n    miniEmitter.addBehaviour(miniEmitter.colorBehaviour);\n    miniEmitter.addBehaviour(new Proton.Gravity(4));\n    miniEmitter.addBehaviour(new Proton.Collision(miniEmitter));\n    miniEmitter.addBehaviour(\n      new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      )\n    );\n    this.proton.addEmitter(miniEmitter);\n\n    this.miniEmitter = miniEmitter;\n  }\n\n  miniEmitteing(particle) {\n    const miniEmitter = this.miniEmitter;\n    miniEmitter.radiusInitialize.reset(\n      particle.radius * 0.05,\n      particle.radius * 0.2\n    );\n    miniEmitter.colorBehaviour.reset(particle.color);\n    miniEmitter.p.x = particle.p.x;\n    miniEmitter.p.y = particle.p.y;\n    miniEmitter.emit(\"once\");\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Color extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#529B88\",\n      \"#CDD180\",\n      \"#FFFA32\",\n      \"#FB6255\",\n      \"#FB4A53\",\n      \"#FF4E50\",\n      \"#F9D423\"\n    ];\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize() {}\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(5, 8),\n      new Proton.Span(0.1, 0.25)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(20, 200));\n    emitter.addInitialize(new Proton.Life(2, 4));\n    emitter.addInitialize(\n      new Proton.Position(new Proton.RectZone(0, 0, width, height))\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(0, 1, Infinity, Proton.easeOutCubic));\n    emitter.addBehaviour(new Proton.Scale(1, 0, Infinity, Proton.easeOutCubic));\n    emitter.addBehaviour(new Proton.Color(this.colors, \"random\"));\n\n    emitter.emit();\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    this.proton.addRenderer(renderer);\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Color extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.colors = [\n            \"#529B88\",\n            \"#CDD180\",\n            \"#FFFA32\",\n            \"#FB6255\",\n            \"#FB4A53\",\n            \"#FF4E50\",\n            \"#F9D423\"\n        ];\n        this.renderProton = this.renderProton.bind(this);\n    }\n\n    componentWillUnmount() {\n        try {\n            RAFManager.remove(this.renderProton);\n            this.proton.destroy();\n        } catch (e) { }\n    }\n\n    onCanvasInited(canvas, width, height) {\n        this.createProton(canvas, width, height);\n        RAFManager.add(this.renderProton);\n    }\n\n    onResize(width, height) {\n        this.crossZoneBehaviour.zone.width = width;\n        this.crossZoneBehaviour.zone.height = height;\n        this.proton.renderers[0].resize(width, height);;\n    }\n\n    getProp(key, defaultVal) {\n        const config = this.props.config || {};\n        const val = config[key] || defaultVal;\n        if (Array.isArray(val)) {\n            return new Proton.Span(val[0], val[1]);\n        } else {\n            return val;\n        }\n    }\n\n    getArrProp(key, defaultVal) {\n        const config = this.props.config || {};\n        const val = config[key] || defaultVal;\n        if (!val) return null;\n\n        if (Array.isArray(val)) {\n            return val;\n        } else {\n            return [val, val];\n        }\n    }\n\n    createProton(canvas, width, height) {\n        const num = this.getProp(\"num\", [5, 8]);\n        const rps = this.getProp(\"rps\", [0.1, 0.2]);\n        const mass = this.getProp(\"mass\", 1);\n        const radius = this.getProp(\"radius\", [10, 30]);\n        const life = this.getProp(\"life\", [2, 3]);\n        const body = this.getProp(\"body\");\n        const position = this.getProp(\"position\");\n        const v = this.getProp(\"v\", [2, 3]);\n        const tha = this.getProp(\"tha\", [-15, 15]);\n        const alpha = this.getArrProp(\"alpha\");\n        const scale = this.getArrProp(\"scale\");\n        const color = this.getArrProp(\"color\");\n        const cross = this.getProp(\"cross\", \"dead\");\n        const random = this.getProp(\"random\");\n        const rotate = this.getArrProp(\"rotate\");\n        const g = this.getProp(\"g\");\n        const f = this.getArrProp(\"f\");\n        const emitterV = this.getProp(\"emitter\");\n\n        this.proton = new Proton();\n        let emitter;\n        if (emitterV === \"follow\") {\n            emitter = new Proton.FollowEmitter();\n        } else {\n            emitter = new Proton.Emitter();\n        }\n        emitter.rate = new Proton.Rate(num, rps);\n\n        emitter.addInitialize(new Proton.Mass(mass));\n        emitter.addInitialize(new Proton.Radius(radius));\n        emitter.addInitialize(new Proton.Life(life));\n        emitter.addInitialize(new Proton.Velocity(v, tha, \"polar\"));\n        if (body) emitter.addInitialize(new Proton.Body(body));\n\n        let pos;\n        if (position === \"all\" || position === \"screen\") {\n            pos = new Proton.Position(new Proton.RectZone(0, 0, canvas.width, canvas.height))\n        } else if (typeof position === \"object\") {\n            pos = new Proton.Position(new Proton.RectZone(position.x, position.y, position.width, position.height))\n        } else {\n            emitter.p.x = canvas.width / 2;\n            emitter.p.y = canvas.height / 2;\n        }\n\n        emitter.addInitialize(pos);\n\n        /// behaviour\n        const alphaB = alpha ? new Proton.Alpha(alpha[0], alpha[1]) : new Proton.Alpha(0, 1);\n        const scaleB = scale ? new Proton.Scale(scale[0], scale[1]) : new Proton.Scale(1, 0.2);\n        const colorB = color ? new Proton.Color(color[0], color[1]) : new Proton.Color(this.colors);\n\n        emitter.addBehaviour(alphaB);\n        emitter.addBehaviour(scaleB);\n        if(!body) emitter.addBehaviour(colorB);\n\n        if(rotate){\n            if(rotate[0]===true||rotate[0]===\"rotate\"){\n                emitter.addBehaviour(new Proton.Rotate());\n            }else{\n                emitter.addBehaviour(new Proton.Rotate(rotate[0], rotate[1]));\n            }\n        }\n\n        const zone = new Proton.RectZone(0, 0, canvas.width, canvas.height)\n        const crossZoneBehaviour = new Proton.CrossZone(zone, cross);\n        emitter.addBehaviour(crossZoneBehaviour);\n\n        random && emitter.addBehaviour(new Proton.RandomDrift(random, random, 0.05));\n        g && emitter.addBehaviour(new Proton.G(g));\n        f && emitter.addBehaviour(new Proton.F(f[0], f[1]));\n\n        emitter.emit();\n        this.proton.addEmitter(emitter);\n\n        const renderer = this.createRenderer(canvas);\n        this.proton.addRenderer(renderer);\n\n        this.emitter = emitter;\n        this.crossZoneBehaviour = crossZoneBehaviour;\n    }\n\n    createRenderer(canvas) {\n        const width = canvas.width;\n        const height = canvas.height;\n        const context = canvas.getContext(\"2d\");\n        const renderer = new Proton.CanvasRenderer(canvas);\n\n        const onUpdate = this.getProp(\"onUpdate\");\n        if (onUpdate) {\n            renderer.onProtonUpdate = () => {\n                onUpdate(context, width, height);\n            };\n        }\n\n        const onParticleCreated = this.getProp(\"onParticleCreated\");\n        if (onParticleCreated) {\n            renderer.onParticleCreated = (particle) => {\n                onParticleCreated(context, particle);\n            };\n        }\n\n        const onParticleUpdate = this.getProp(\"onParticleUpdate\");\n        if (onParticleUpdate) {\n            renderer.onParticleUpdate = (particle) => {\n                onParticleUpdate(context, particle);\n            };\n        }\n\n        return renderer;\n    }\n\n    renderProton() {\n        this.proton && this.proton.update();\n    }\n\n    handleMouseDown(e) {\n        const onMouseDown = this.getProp(\"onMouseDown\");\n        if (onMouseDown) {\n            onMouseDown(e);\n        }\n    }\n\n    render() {\n        const globalCompositeOperation = this.props.globalCompositeOperation || this.props.operation || \"source-over\";\n\n        return (\n            <Canvas\n                bg={this.props.bg}\n                onMouseDown={this.handleMouseDown.bind(this)}\n                globalCompositeOperation={globalCompositeOperation}\n                onCanvasInited={this.onCanvasInited.bind(this)}\n                onResize={this.onResize.bind(this)}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\nimport { getColor } from \"../utils/Color\";\n\nexport default class Lines extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasDidMount(canvas){\n    if(this.props.color){\n      canvas.style.backgroundColor = this.props.color;\n    }\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) { }\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.damping = 0.008;\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 250);\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(4));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(1.5),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    const mouseObj = {\n      x: width / 2,\n      y: height / 2\n    };\n\n    const attractionBehaviour = new Proton.Attraction(mouseObj, 0, 0);\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"cross\"\n    );\n    emitter.addBehaviour(new Proton.Color(\"random\"));\n    emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.RandomDrift(10, 10, 0.05));\n    emitter.p.x = canvas.width / 2;\n    emitter.p.y = canvas.height / 2;\n    emitter.emit(\"once\");\n\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas));\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n    renderer.onProtonUpdate = () => {\n      context.fillStyle = getColor(this.props.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleUpdate = function (particle) {\n      context.beginPath();\n      context.strokeStyle = particle.color;\n      context.lineWidth = 1;\n      context.moveTo(particle.old.p.x, particle.old.p.y);\n      context.lineTo(particle.p.x, particle.p.y);\n      context.closePath();\n      context.stroke();\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\nimport { getColor } from \"../utils/Color\";\n\nexport default class Thick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.hue = 0;\n    this.index = 0;\n    this.colorTemplate = `hsla(hue,80%,50%, 0.75)`;\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasDidMount(canvas){\n    if(this.props.color){\n      canvas.style.backgroundColor = this.props.color;\n    }\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.canvas = canvas;\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.damping = 0.008;\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 150);\n\n    // Initialize\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(8));\n    emitter.addInitialize(\n      new Proton.V(new Proton.Span(0.1, 0.5), new Proton.Span(0, 360), \"polar\")\n    );\n    emitter.addInitialize(\n      new Proton.Position(\n        new Proton.CircleZone(canvas.width / 2, canvas.height / 2, 100)\n      )\n    );\n\n    // Behaviour\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"cross\"\n    );\n    emitter.addBehaviour(crossZoneBehaviour);\n    this.repulsion = new Proton.Repulsion(\n      {\n        x: canvas.width / 2,\n        y: canvas.height / 2 - 100\n      },\n      3,\n      300\n    );\n\n    this.attraction = new Proton.Attraction(\n      {\n        x: canvas.width / 2,\n        y: canvas.height / 2\n      },\n      3,\n      200\n    );\n    emitter.addBehaviour(this.attraction, this.repulsion);\n    emitter.addBehaviour(new Proton.Color(\"random\"));\n    emitter.addBehaviour(new Proton.RandomDrift(20, 15, 0.15));\n\n    emitter.emit(\"once\");\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas));\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n\n    renderer.onProtonUpdate = () => {\n      this.hue += 1;\n      context.fillStyle = getColor(this.props.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      particle.data.begin = Proton.MathUtil.randomAToB(1, 120);\n      particle.data.tha = Proton.MathUtil.randomAToB(0, Math.PI * 2);\n    };\n\n    renderer.onParticleUpdate = particle => {\n      const hue = particle.data.begin + this.hue;\n      particle.color = this.colorTemplate.replace(\"hue\", hue % 360);\n\n      const ratio = 3 / 4;\n      const radius =\n        particle.radius * (1 - ratio) * Math.cos((particle.data.tha += 0.01)) +\n        particle.radius * ratio;\n\n      context.beginPath();\n      context.fillStyle = particle.color;\n      context.arc(particle.p.x, particle.p.y, radius, 0, Math.PI * 2, true);\n      context.closePath();\n      context.fill();\n    };\n\n    return renderer;\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  renderProton() {\n    const canvas = this.canvas;\n    this.proton.update();\n    if (this.index % 200 === 0) {\n      this.attraction.targetPosition.x = Math.random() * canvas.width;\n      this.attraction.targetPosition.y = Math.random() * canvas.height;\n\n      this.repulsion.targetPosition.x = Math.random() * canvas.width;\n      this.repulsion.targetPosition.y = Math.random() * canvas.height;\n    }\n\n    this.index++;\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#fad390\",\n      \"#81ecec\",\n      \"#ffffff\",\n      \"#badc58\",\n      \"#f9ca24\",\n      \"#FEA47F\"\n    ];\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasDidMount(canvas) {\n    \n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    const dis = 150;\n    this.crossZoneBehaviour.zone.width = width + 2 * dis;\n    this.crossZoneBehaviour.zone.height = height + 2 * dis;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 50);\n    emitter.damping = 0;\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(4, 70));\n    emitter.addInitialize(\n      new Proton.Velocity(new Proton.Span(2, 10), new Proton.Span(0), \"polar\")\n    );\n    emitter.addInitialize(\n      new Proton.Position(\n        new Proton.LineZone(0, canvas.height, canvas.width, canvas.height)\n      )\n    );\n\n    const dis = 150;\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(\n        0 - dis,\n        0 - dis,\n        canvas.width + 2 * dis,\n        canvas.height + 2 * dis\n      ),\n      \"cross\"\n    );\n    emitter.addBehaviour(crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.1, 0.55)));\n    emitter.addBehaviour(new Proton.Color(this.colors));\n\n    emitter.emit(\"once\");\n    this.proton.addEmitter(emitter);\n    const renderer = this.createRenderer(canvas);\n    this.proton.addRenderer(renderer);\n\n    this.crossZoneBehaviour = crossZoneBehaviour;\n    emitter.preEmit(2);\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CustomRenderer();\n\n    renderer.onProtonUpdate = () => {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      const w = particle.radius || 60;\n      const h = Proton.MathUtil.randomAToB(100, 200, \"int\");\n      particle.data.w = w;\n      particle.data.h = h;\n    };\n\n    renderer.onParticleUpdate = particle => {\n      const w = particle.data.w;\n      const h = particle.data.h;\n      context.save();\n      context.globalAlpha = particle.alpha;\n      context.fillStyle = particle.color;\n\n      context.translate(particle.p.x, particle.p.y);\n      context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n      context.translate(-particle.p.x, -particle.p.y);\n\n      context.beginPath();\n      context.rect(particle.p.x - w / 2, particle.p.y - h / 2, w, h);\n\n      context.closePath();\n      context.fill();\n      context.globalAlpha = 1;\n      context.restore();\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"lighter\"\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\nimport { getColor } from \"../utils/Color\";\n\nexport default class Cobweb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(100),\n      new Proton.Span(0.05, 0.2)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(1, 4));\n    emitter.addInitialize(new Proton.Life(Infinity));\n\n    const pointZone = new Proton.Position(\n      new Proton.RectZone(0, 0, width, height)\n    );\n    emitter.addInitialize(pointZone);\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(0.3, 0.6),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.2, 0.9)));\n    emitter.addBehaviour(new Proton.Color(this.props.color || \"#333\"));\n    this.crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, width, height),\n      \"cross\"\n    );\n    emitter.addBehaviour(this.crossZoneBehaviour);\n\n    emitter.emit(\"once\");\n    emitter.damping = 0;\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas, emitter));\n  }\n\n  createRenderer(canvas, emitter) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n    const R = 140;\n\n    renderer.onProtonUpdateAfter = ()=> {\n      let particles = emitter.particles;\n\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          let pA = particles[i];\n          let pB = particles[j];\n          let dis = pA.p.distanceTo(pB.p);\n\n          if (dis < R) {\n            let alpha = (1 - dis / R) * 0.5;\n            context.strokeStyle = getColor(this.props.color, alpha) || `rgba(3, 3, 3, ${alpha})`;\n            context.beginPath();\n            context.moveTo(pA.p.x, pA.p.y);\n            context.lineTo(pB.p.x, pB.p.y);\n            context.closePath();\n            context.stroke();\n          }\n        }\n      }\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Circle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#74b9ff\",\n      \"#e84393\",\n      \"#6c5ce7\",\n      \"#00b894\",\n      \"#fdcb6e\",\n      \"#006266\",\n      \"#1B1464\"\n    ];\n\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) { }\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(this.props.num || 20);\n    emitter.damping = 0.008;\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(30, 600));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(0.5),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    emitter.addInitialize(\n      new Proton.Position(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height)\n      )\n    );\n\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"cross\"\n    );\n    emitter.addBehaviour(crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.35, 0.55)));\n    emitter.addBehaviour(new Proton.Color(this.getColor()));\n    emitter.addBehaviour(new Proton.RandomDrift(50, 50, 0.5));\n\n    emitter.emit(\"once\");\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    this.proton.addRenderer(renderer);\n\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  getColor() {\n    let c = this.colors;\n    if (this.props.color) {\n      if(Array.isArray(this.props.color)){\n        c = this.props.color;\n      }else{\n        c = [this.props.color];\n      }\n    }\n\n    return c;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darken\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Tadpole extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasDidMount(canvas) {\n\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    this.renderProton();\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.damping = 0.008;\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 50);\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(5, 9));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(1.5),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    emitter.addInitialize(\n      new Proton.Position(new Proton.RectZone(0, 0, width, height))\n    );\n\n    const mouseInfo = {\n      x: width / 2,\n      y: height / 2\n    };\n\n    const attractionBehaviour = new Proton.Attraction(mouseInfo, 0, 0);\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"bound\"\n    );\n    emitter.addBehaviour(new Proton.Color(this.props.color || \"#bbb\"));\n    //emitter.addBehaviour(new Proton.Alpha(new Proton.Span(0.5, 1)));\n    emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.RandomDrift(15, 15, 0.05));\n    emitter.emit(\"once\");\n\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas));\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  createRenderer(canvas) {\n    const jointCount = 10;\n    const delayTime = 8;\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n\n    renderer.onProtonUpdate = function () {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      particle.data.points = [];\n      particle.data.index = 0;\n    };\n\n    renderer.onParticleUpdate = function (particle) {\n      drawTadpoleTail(particle);\n      if (particle.data.index % delayTime === 0) fillPointsData(particle);\n      drawTadpoleHead(particle);\n      particle.data.index++;\n    };\n\n    const fillPointsData = particle => {\n      particle.data.points.unshift(particle.p.y);\n      particle.data.points.unshift(particle.p.x);\n\n      if (particle.data.points.length > jointCount) {\n        particle.data.points.pop();\n        particle.data.points.pop();\n      }\n    };\n\n    const drawTadpoleHead = particle => {\n      context.fillStyle = particle.color;\n      context.beginPath();\n      context.arc(\n        particle.p.x,\n        particle.p.y,\n        particle.radius,\n        0,\n        Math.PI * 2,\n        true\n      );\n      context.closePath();\n      context.fill();\n    };\n\n    const drawTadpoleTail = particle => {\n      context.beginPath();\n      context.strokeStyle = particle.color;\n\n      context.moveTo(particle.p.x, particle.p.y);\n\n      const l = particle.data.points.length;\n      for (let i = 0; i < l; i += 2) {\n        const x = particle.data.points[i];\n        const y = particle.data.points[i + 1];\n\n        context.lineWidth = linearEvaluation(i, l);\n        context.lineTo(x, y);\n        context.stroke();\n      }\n    };\n\n    const linearEvaluation = (i, l) => {\n      if (l <= 2) return 1;\n\n      const max = 6;\n      const A = (max - 1) / (2 / l - 1);\n      const B = 1 - A;\n      const X = (i + 2) / l;\n      let val = A * X + B;\n      val = val >> 0;\n\n      return val;\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    RAFManager.add(() => {\n      this.proton.update();\n      //this.proton.stats.update();\n    });\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nconst COLOR = [\n  \"#f6b93b\",\n  \"#18dcff\",\n  \"#cd84f1\",\n  \"#ED4C67\",\n  \"#ffffff\",\n  \"#b71540\",\n  \"#32ff7e\",\n  \"#ff3838\"\n];\n\nexport default class Polygon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas);\n    this.createEmitter({\n      canvas,\n      x: width / 2,\n      y: height / 2,\n      mainEmitter: true,\n      zone: \"bound\"\n    });\n\n    RAFManager.add(this.renderProton);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onResize() {}\n\n  createProton(canvas) {\n    this.proton = new Proton();\n    const renderer = this.createRenderer(canvas);\n    this.proton.addRenderer(renderer);\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CustomRenderer();\n\n    renderer.onProtonUpdate = () => {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      particle.data.count = Proton.MathUtil.randomAToB(3, 10, true);\n    };\n\n    renderer.onParticleUpdate = particle => {\n      context.save();\n      context.globalAlpha = particle.alpha;\n      context.fillStyle = particle.color;\n\n      context.translate(particle.p.x, particle.p.y);\n      context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n      context.translate(-particle.p.x, -particle.p.y);\n\n      context.beginPath();\n      drawPolygon(particle, particle.data.count);\n\n      context.closePath();\n      context.fill();\n      context.globalAlpha = 1;\n      context.restore();\n    };\n\n    renderer.onParticleDead = particle => {};\n\n    const drawPolygon = (particle, count) => {\n      if (count >= 7) {\n        context.arc(\n          particle.p.x,\n          particle.p.y,\n          particle.radius,\n          0,\n          Math.PI * 2,\n          true\n        );\n      } else {\n        const radius = particle.radius;\n\n        for (let i = 0; i <= count; i++) {\n          let x =\n            particle.p.x +\n            radius * Math.cos((((Math.PI / 180) * 360) / count) * i);\n          let y =\n            particle.p.y +\n            radius * Math.sin((((Math.PI / 180) * 360) / count) * i);\n\n          if (i === 0) context.moveTo(x, y);\n          else context.lineTo(x, y);\n        }\n      }\n    };\n\n    return renderer;\n  }\n\n  createEmitter({\n    mainEmitter,\n    canvas,\n    x,\n    y,\n    radius,\n    color = COLOR,\n    zone = \"dead\",\n    once = \"all\",\n    alpha = 0.85,\n    gravity = 3.5\n  }) {\n    const emitter = this.proton.pool.get(Proton.Emitter);\n\n    if (!emitter.completed) {\n      emitter.rate = new Proton.Rate(\n        this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 9),\n        new Proton.Span(1.6, 2.2)\n      );\n\n      const radiusInit = mainEmitter\n        ? new Proton.Radius(10, 110)\n        : new Proton.Radius(3, radius);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(radiusInit);\n      emitter.addInitialize(new Proton.Life(3, 6));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(4, 6),\n          new Proton.Span(-90, 90),\n          \"polar\"\n        )\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(alpha, 0.2));\n      emitter.addBehaviour(new Proton.Color(color));\n      emitter.addBehaviour(new Proton.Scale(1, 0.3));\n      emitter.addBehaviour(new Proton.Rotate());\n      emitter.addBehaviour(new Proton.Gravity(gravity));\n\n      emitter.addBehaviour(this.customDeadBehaviour(canvas));\n      emitter.addBehaviour(\n        new Proton.CrossZone(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height),\n          zone\n        )\n      );\n    }\n\n    emitter.p.x = x;\n    emitter.p.y = y;\n    if (once === \"once\") emitter.emit(\"once\");\n    else emitter.emit();\n\n    this.proton.addEmitter(emitter);\n    //this.expireEmitter(emitter);\n  }\n\n  expireEmitter(emitter) {\n    setTimeout(() => {\n      emitter.completed = true;\n      this.proton.pool.expire(emitter);\n      this.proton.removeEmitter(emitter);\n    }, 500);\n  }\n\n  customDeadBehaviour(canvas) {\n    return {\n      initialize: particle => {\n        particle.data = particle.data || {};\n        particle.data.oldRadius = particle.radius;\n        particle.data.emitterCount = 0;\n      },\n      applyBehaviour: particle => {\n        if (particle.radius < 5) return;\n        if (particle.data.emitterCount >= 2) return;\n\n        if (particle.radius <= (1 / 3) * particle.data.oldRadius) {\n          particle.data.emitterCount++;\n          this.createEmitter({\n            canvas,\n            x: particle.p.x,\n            y: particle.p.y,\n            radius: particle.radius * (1 / 2),\n            alpha: 0.5,\n            gravity: 5,\n            color: particle.color,\n            once: \"once\"\n          });\n        }\n      }\n    };\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Fountain extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#529B88\",\n      \"#CDD180\",\n      \"#FFFA32\",\n      \"#FB6255\",\n      \"#FB4A53\",\n      \"#FF4E50\",\n      \"#F9D423\"\n    ];\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize() {}\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 8),\n      new Proton.Span(0.1, 0.25)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(20, 200));\n    emitter.addInitialize(new Proton.Life(2, 4));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(4, 7),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    emitter.addInitialize(\n      new Proton.Position(new Proton.CircleZone(width / 2, height / 2, 100))\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(1, 0));\n    emitter.addBehaviour(new Proton.Scale(0.2, 1));\n    emitter.addBehaviour(this.createCustomBehaviour());\n    emitter.addBehaviour(new Proton.Color(this.colors, \"random\"));\n    emitter.emit();\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    this.proton.addRenderer(renderer);\n  }\n\n  createCustomBehaviour() {\n    const f = 10 * 100;\n    return {\n      initialize: function(particle) {\n        particle.f = new Proton.Vector2D(0, 0);\n      },\n      applyBehaviour: particle => {\n        let length = particle.v.length() / 1000;\n        let gradient = particle.v.getGradient();\n        gradient += 3.14 / 2;\n\n        particle.f.x = f * length * Math.cos(gradient);\n        particle.f.y = f * length * Math.sin(gradient);\n        particle.a.add(particle.f);\n      }\n    };\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"xor\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Rand from \"./utils/Rand.js\";\nimport Ball from \"./particles/Ball.jsx\";\nimport Color from \"./particles/Color.jsx\";\nimport Custom from \"./particles/Custom.jsx\";\nimport Lines from \"./particles/Lines.jsx\";\nimport Thick from \"./particles/Thick.jsx\";\nimport Square from \"./particles/Square.jsx\";\nimport Cobweb from \"./particles/Cobweb.jsx\";\nimport Circle from \"./particles/Circle.jsx\";\nimport Tadpole from \"./particles/Tadpole.jsx\";\nimport Polygon from \"./particles/Polygon.jsx\";\nimport Fountain from \"./particles/Fountain.jsx\";\n\nexport default class ParticlesBg extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  getRandom() {\n    const { num, bg, color } = this.props;\n\n    // Code source from here, thanks author\n    // https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\n    if (!this.random) {\n      this.random = new Rand();\n      this.random.set(0.25, <Color num={num} bg={bg} color={color} />);\n      this.random.set(0.2, <Ball num={num} bg={bg} color={color} />);\n      this.random.set(0.2, <Lines num={num} bg={bg} color={color} />);\n      this.random.set(0.16, <Thick num={num} bg={bg} color={color} />);\n      this.random.set(0.18, <Circle num={num} bg={bg} color={color} />);\n      this.random.set(0.04, <Cobweb num={num} bg={bg} color={color} />);\n      this.random.set(0.1, <Polygon num={num} bg={bg} color={color} />);\n      this.random.set(0.08, <Square num={num} bg={bg} color={color} />);\n      this.random.set(0.18, <Tadpole num={num} bg={bg} color={color} />);\n      this.random.set(0.15, <Fountain num={num} bg={bg} color={color} />);\n    }\n    return this.random.getResult();\n  }\n\n  getBgParticles() {\n    const { type, num, bg, color, config } = this.props;\n\n    let particles;\n    switch (String(type).toLowerCase()) {\n      case \"color\":\n        particles = <Color num={num} bg={bg} color={color} />;\n        break;\n      case \"ball\":\n        particles = <Ball num={num} bg={bg} color={color} />;\n        break;\n      case \"lines\":\n        particles = <Lines num={num} bg={bg} color={color} />;\n        break;\n      case \"thick\":\n        particles = <Thick num={num} bg={bg} color={color} />;\n        break;\n      case \"circle\":\n        particles = <Circle num={num} bg={bg} color={color} />;\n        break;\n      case \"cobweb\":\n        particles = <Cobweb num={num} bg={bg} color={color} />;\n        break;\n      case \"polygon\":\n        particles = <Polygon num={num} bg={bg} color={color} />;\n        break;\n      case \"square\":\n        particles = <Square num={num} bg={bg} color={color} />;\n        break;\n      case \"tadpole\":\n        particles = <Tadpole num={num} bg={bg} color={color} />;\n        break;\n      case \"fountain\":\n        particles = <Fountain num={num} bg={bg} color={color} />;\n        break;\n      case \"custom\":\n        particles = <Custom bg={bg} config={config} />;\n        break;\n      case \"random\":\n        particles = this.getRandom(num);\n        break;\n\n      default:\n        particles = <Color num={num} bg={bg} color={color} />;\n        break;\n    }\n\n    return particles;\n  }\n\n  render() {\n    const particles = this.getBgParticles();\n    return <React.Fragment>{particles}</React.Fragment>;\n  }\n}\n","const PI = 3.1415926;\nconst INFINITY = Infinity;\n\nconst MathUtil = {\n  PI: PI,\n  PIx2: PI * 2,\n  PI_2: PI / 2,\n  PI_180: PI / 180,\n  N180_PI: 180 / PI,\n  Infinity: -999,\n\n  isInfinity(num) {\n    return num === this.Infinity || num === INFINITY;\n  },\n\n  randomAToB(a, b, isInt = false) {\n    if (!isInt) return a + Math.random() * (b - a);\n    else return Math.floor(Math.random() * (b - a)) + a;\n  },\n\n  randomFloating(center, f, isInt) {\n    return this.randomAToB(center - f, center + f, isInt);\n  },\n\n  randomColor() {\n    return (\n      \"#\" +\n      (\"00000\" + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6)\n    );\n  },\n\n  randomZone(display) {},\n\n  floor(num, k = 4) {\n    const digits = Math.pow(10, k);\n    return Math.floor(num * digits) / digits;\n  },\n\n  degreeTransform(a) {\n    return (a * PI) / 180;\n  },\n\n  toColor16(num) {\n    return `#${num.toString(16)}`;\n  }\n};\n\nexport default MathUtil;\n","import Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Span {\n  constructor(a, b, center) {\n    if (Util.isArray(a)) {\n      this.isArray = true;\n      this.a = a;\n    } else {\n      this.isArray = false;\n      this.a = Util.initValue(a, 1);\n      this.b = Util.initValue(b, this.a);\n      this.center = Util.initValue(center, false);\n    }\n  }\n\n  getValue(isInt = false) {\n    if (this.isArray) {\n      return Util.getRandFromArray(this.a);\n    } else {\n      if (!this.center) {\n        return MathUtil.randomAToB(this.a, this.b, isInt);\n      } else {\n        return MathUtil.randomFloating(this.a, this.b, isInt);\n      }\n    }\n  }\n\n  /**\n   * Returns a new Span object\n   *\n   * @memberof Proton#Proton.Util\n   * @method setSpanValue\n   *\n   * @todo a, b and c should be 'Mixed' or 'Number'?\n   *\n   * @param {Mixed | Span} a\n   * @param {Mixed}               b\n   * @param {Mixed}               c\n   *\n   * @return {Span}\n   */\n  static setSpanValue(a, b, c) {\n    if (a instanceof Span) {\n      return a;\n    } else {\n      if (b === undefined) {\n        return new Span(a);\n      } else {\n        if (c === undefined) return new Span(a, b);\n        else return new Span(a, b, c);\n      }\n    }\n  }\n\n  /**\n   * Returns the value from a Span, if the param is not a Span it will return the given parameter\n   *\n   * @memberof Proton#Proton.Util\n   * @method getValue\n   *\n   * @param {Mixed | Span} pan\n   *\n   * @return {Mixed} the value of Span OR the parameter if it is not a Span\n   */\n  static getSpanValue(pan) {\n    return pan instanceof Span ? pan.getValue() : pan;\n  }\n}\n","export default {\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method ipot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Boolean}\n   */\n  ipot(length) {\n    return (length & (length - 1)) === 0;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method nhpot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Number}\n   */\n  nhpot(length) {\n    --length;\n    for (let i = 1; i < 32; i <<= 1) {\n      length = length | (length >> i);\n    }\n\n    return length + 1;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeTranslation\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} tx either 0 or 1\n   * @param {Number} ty either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeTranslation(tx, ty) {\n    return [1, 0, 0, 0, 1, 0, tx, ty, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeRotation\n   *\n   * @todo add description\n   * @todo add return description\n   *\n   * @param {Number} angleInRadians\n   *\n   * @return {Object}\n   */\n  makeRotation(angleInRadians) {\n    let c = Math.cos(angleInRadians);\n    let s = Math.sin(angleInRadians);\n\n    return [c, -s, 0, s, c, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeScale\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} sx either 0 or 1\n   * @param {Number} sy either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeScale(sx, sy) {\n    return [sx, 0, 0, 0, sy, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method matrixMultiply\n   *\n   * @todo add description\n   * @todo add a, b description\n   * @todo add return description\n   *\n   * @param {Object} a\n   * @param {Object} b\n   *\n   * @return {Object}\n   */\n  matrixMultiply(a, b) {\n    let a00 = a[0 * 3 + 0];\n    let a01 = a[0 * 3 + 1];\n    let a02 = a[0 * 3 + 2];\n    let a10 = a[1 * 3 + 0];\n    let a11 = a[1 * 3 + 1];\n    let a12 = a[1 * 3 + 2];\n    let a20 = a[2 * 3 + 0];\n    let a21 = a[2 * 3 + 1];\n    let a22 = a[2 * 3 + 2];\n    let b00 = b[0 * 3 + 0];\n    let b01 = b[0 * 3 + 1];\n    let b02 = b[0 * 3 + 2];\n    let b10 = b[1 * 3 + 0];\n    let b11 = b[1 * 3 + 1];\n    let b12 = b[1 * 3 + 2];\n    let b20 = b[2 * 3 + 0];\n    let b21 = b[2 * 3 + 1];\n    let b22 = b[2 * 3 + 2];\n\n    return [\n      a00 * b00 + a01 * b10 + a02 * b20,\n      a00 * b01 + a01 * b11 + a02 * b21,\n      a00 * b02 + a01 * b12 + a02 * b22,\n      a10 * b00 + a11 * b10 + a12 * b20,\n      a10 * b01 + a11 * b11 + a12 * b21,\n      a10 * b02 + a11 * b12 + a12 * b22,\n      a20 * b00 + a21 * b10 + a22 * b20,\n      a20 * b01 + a21 * b11 + a22 * b21,\n      a20 * b02 + a21 * b12 + a22 * b22\n    ];\n  }\n};\n","export default {\n  /**\n   * Creates and returns a new canvas. The opacity is by default set to 0\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method createCanvas\n   *\n   * @param {String} $id the canvas' id\n   * @param {Number} $width the canvas' width\n   * @param {Number} $height the canvas' height\n   * @param {String} [$position=absolute] the canvas' position, default is 'absolute'\n   *\n   * @return {Object}\n   */\n  createCanvas(id, width, height, position = \"absolute\") {\n    const dom = document.createElement(\"canvas\");\n\n    dom.id = id;\n    dom.width = width;\n    dom.height = height;\n    dom.style.opacity = 0;\n    dom.style.position = position;\n    this.transform(dom, -500, -500, 0, 0);\n\n    return dom;\n  },\n\n  createDiv(id, width, height) {\n    const dom = document.createElement(\"div\");\n\n    dom.id = id;\n    dom.style.position = \"absolute\";\n    this.resize(dom, width, height);\n\n    return dom;\n  },\n\n  resize(dom, width, height) {\n    dom.style.width = width + \"px\";\n    dom.style.height = height + \"px\";\n    dom.style.marginLeft = -width / 2 + \"px\";\n    dom.style.marginTop = -height / 2 + \"px\";\n  },\n\n  /**\n   * Adds a transform: translate(), scale(), rotate() to a given div dom for all browsers\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method transform\n   *\n   * @param {HTMLDivElement} div\n   * @param {Number} $x\n   * @param {Number} $y\n   * @param {Number} $scale\n   * @param {Number} $rotate\n   */\n  transform(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate(${x}px, ${y}px) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"transform\", transform);\n  },\n\n  transform3d(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate3d(${x}px, ${y}px, 0) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"backfaceVisibility\", \"hidden\");\n    this.css3(div, \"transform\", transform);\n  },\n\n  css3(div, key, val) {\n    const bkey = key.charAt(0).toUpperCase() + key.substr(1);\n\n    div.style[`Webkit${bkey}`] = val;\n    div.style[`Moz${bkey}`] = val;\n    div.style[`O${bkey}`] = val;\n    div.style[`ms${bkey}`] = val;\n    div.style[`${key}`] = val;\n  }\n};\n","import WebGLUtil from \"./WebGLUtil\";\nimport DomUtil from \"./DomUtil\";\n\nconst imgsCache = {};\nconst canvasCache = {};\nlet canvasId = 0;\n\nexport default {\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    context.drawImage(image, rect.x, rect.y);\n    const imagedata = context.getImageData(\n      rect.x,\n      rect.y,\n      rect.width,\n      rect.height\n    );\n    context.clearRect(rect.x, rect.y, rect.width, rect.height);\n\n    return imagedata;\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method getImgFromCache\n   *\n   * @todo add description\n   * @todo describe func\n   *\n   * @param {Mixed}               img\n   * @param {Proton.Particle}     particle\n   * @param {Boolean}             drawCanvas  set to true if a canvas should be saved into particle.data.canvas\n   * @param {Boolean}             func\n   */\n  getImgFromCache(img, callback, param) {\n    const src = typeof img === \"string\" ? img : img.src;\n\n    if (imgsCache[src]) {\n      callback(imgsCache[src], param);\n    } else {\n      const image = new Image();\n      image.onload = e => {\n        imgsCache[src] = e.target;\n        callback(imgsCache[src], param);\n      };\n\n      image.src = src;\n    }\n  },\n\n  getCanvasFromCache(img, callback, param) {\n    const src = img.src;\n\n    if (!canvasCache[src]) {\n      const width = WebGLUtil.nhpot(img.width);\n      const height = WebGLUtil.nhpot(img.height);\n\n      const canvas = DomUtil.createCanvas(\n        `proton_canvas_cache_${++canvasId}`,\n        width,\n        height\n      );\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(img, 0, 0, img.width, img.height);\n\n      canvasCache[src] = canvas;\n    }\n\n    callback && callback(canvasCache[src], param);\n\n    return canvasCache[src];\n  }\n};\n","import Span from \"../math/Span\";\nimport ImgUtil from \"./ImgUtil\";\n\nexport default {\n  /**\n   * Returns the default if the value is null or undefined\n   *\n   * @memberof Proton#Proton.Util\n   * @method initValue\n   *\n   * @param {Mixed} value a specific value, could be everything but null or undefined\n   * @param {Mixed} defaults the default if the value is null or undefined\n   */\n  initValue(value, defaults) {\n    value = value !== null && value !== undefined ? value : defaults;\n    return value;\n  },\n\n  /**\n   * Checks if the value is a valid array\n   *\n   * @memberof Proton#Proton.Util\n   * @method isArray\n   *\n   * @param {Array} value Any array\n   *\n   * @returns {Boolean}\n   */\n  isArray(value) {\n    return Object.prototype.toString.call(value) === \"[object Array]\";\n  },\n\n  /**\n   * Destroyes the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyArray\n   *\n   * @param {Array} array Any array\n   */\n  emptyArray(arr) {\n    if (arr) arr.length = 0;\n  },\n\n  toArray(arr) {\n    return this.isArray(arr) ? arr : [arr];\n  },\n\n  getRandFromArray(arr) {\n    if (!arr) return null;\n    return arr[Math.floor(arr.length * Math.random())];\n  },\n\n  /**\n   * Destroyes the given object\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyObject\n   *\n   * @param {Object} obj Any object\n   */\n  emptyObject(obj, ignore = null) {\n    for (let key in obj) {\n      if (ignore && ignore.indexOf(key) > -1) continue;\n      delete obj[key];\n    }\n  },\n\n  /**\n   * Makes an instance of a class and binds the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method classApply\n   *\n   * @param {Function} constructor A class to make an instance from\n   * @param {Array} [args] Any array to bind it to the constructor\n   *\n   * @return {Object} The instance of constructor, optionally bind with args\n   */\n  classApply(constructor, args = null) {\n    if (!args) {\n      return new constructor();\n    } else {\n      const FactoryFunc = constructor.bind.apply(\n        constructor,\n        [null].concat(args)\n      );\n      return new FactoryFunc();\n    }\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method setVectorVal\n   *\n   * @todo add description for param `target`\n   * @todo add description for param `conf`\n   * @todo add description for function\n   *\n   * @param {Object} target\n   * @param {Object} conf\n   */\n  setVectorVal(particle, conf = null) {\n    if (!conf) return;\n\n    if (this.hasProp(conf, \"x\")) particle.p.x = conf[\"x\"];\n    if (this.hasProp(conf, \"y\")) particle.p.y = conf[\"y\"];\n\n    if (this.hasProp(conf, \"vx\")) particle.v.x = conf[\"vx\"];\n    if (this.hasProp(conf, \"vy\")) particle.v.y = conf[\"vy\"];\n\n    if (this.hasProp(conf, \"ax\")) particle.a.x = conf[\"ax\"];\n    if (this.hasProp(conf, \"ay\")) particle.a.y = conf[\"ay\"];\n\n    if (this.hasProp(conf, \"p\")) particle.p.copy(conf[\"p\"]);\n    if (this.hasProp(conf, \"v\")) particle.v.copy(conf[\"v\"]);\n    if (this.hasProp(conf, \"a\")) particle.a.copy(conf[\"a\"]);\n\n    if (this.hasProp(conf, \"position\")) particle.p.copy(conf[\"position\"]);\n    if (this.hasProp(conf, \"velocity\")) particle.v.copy(conf[\"velocity\"]);\n    if (this.hasProp(conf, \"accelerate\")) particle.a.copy(conf[\"accelerate\"]);\n  },\n\n  hasProp(target, key) {\n    if (!target) return false;\n    return target[key] !== undefined;\n    // return obj.hasOwnProperty(key);\n  },\n\n  /**\n   * set the prototype in a given prototypeObject\n   *\n   * @memberof Proton#Proton.Util\n   * @method setProp\n   *\n   * @todo add description for param `target`\n   * @todo translate desription from chinese to english\n   *\n   * @param {Object} target\n   * @param {Object} prototypeObject An object of single prototypes\n   *\n   * @return {Object} target\n   */\n  setProp(target, props) {\n    for (let prop in props) {\n      if (target.hasOwnProperty(prop)) {\n        target[prop] = Span.getSpanValue(props[prop]);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    return ImgUtil.getImageData(context, image, rect);\n  },\n\n  destroyAll(arr, param = null) {\n    let i = arr.length;\n\n    while (i--) {\n      try {\n        arr[i].destroy(param);\n      } catch (e) {}\n\n      delete arr[i];\n    }\n\n    arr.length = 0;\n  },\n\n  assign(target, source) {\n    if (typeof Object.assign !== \"function\") {\n      for (let key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n\n      return target;\n    } else {\n      return Object.assign(target, source);\n    }\n  }\n};\n","const idsMap = {};\n\nconst Puid = {\n  _index: 0,\n  _cache: {},\n\n  id(type) {\n    if (idsMap[type] === undefined || idsMap[type] === null) idsMap[type] = 0;\n    return `${type}_${idsMap[type]++}`;\n  },\n\n  getId(target) {\n    let uid = this.getIdFromCache(target);\n    if (uid) return uid;\n\n    uid = `PUID_${this._index++}`;\n    this._cache[uid] = target;\n\n    return uid;\n  },\n\n  getIdFromCache(target) {\n    let obj, id;\n\n    for (id in this._cache) {\n      obj = this._cache[id];\n\n      if (obj === target) return id;\n      if (this.isBody(obj, target) && obj.src === target.src) return id;\n    }\n\n    return null;\n  },\n\n  isBody(obj, target) {\n    return (\n      typeof obj === \"object\" &&\n      typeof target === \"object\" &&\n      obj.isInner &&\n      target.isInner\n    );\n  },\n\n  getTarget(uid) {\n    return this._cache[uid];\n  }\n};\n\nexport default Puid;\n","/**\n * Pool is the cache pool of the proton engine, it is very important.\n *\n * get(target, params, uid)\n *  Class\n *    uid = Puid.getId -> Puid save target cache\n *    target.__puid = uid\n *\n *  body\n *    uid = Puid.getId -> Puid save target cache\n *\n *\n * expire(target)\n *  cache[target.__puid] push target\n *\n */\nimport Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\n\nexport default class Pool {\n  /**\n   * @memberof! Proton#\n   * @constructor\n   * @alias Proton.Pool\n   *\n   * @todo add description\n   * @todo add description of properties\n   *\n   * @property {Number} total\n   * @property {Object} cache\n   */\n  constructor(num) {\n    this.total = 0;\n    this.cache = {};\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method get\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  get(target, params, uid) {\n    let p;\n    uid = uid || target.__puid || Puid.getId(target);\n\n    if (this.cache[uid] && this.cache[uid].length > 0) {\n      p = this.cache[uid].pop();\n    } else {\n      p = this.createOrClone(target, params);\n    }\n\n    p.__puid = target.__puid || uid;\n    return p;\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method set\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object} target\n   *\n   * @return {Object}\n   */\n  expire(target) {\n    return this.getCache(target.__puid).push(target);\n  }\n\n  /**\n   * Creates a new class instance\n   *\n   * @todo add more documentation\n   *\n   * @method create\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target any Object or Function\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  createOrClone(target, params) {\n    this.total++;\n\n    if (this.create) {\n      return this.create(target, params);\n    } else if (typeof target === \"function\") {\n      return Util.classApply(target, params);\n    } else {\n      return target.clone();\n    }\n  }\n\n  /**\n   * @todo add description - what is in the cache?\n   *\n   * @method getCount\n   * @memberof Proton#Proton.Pool\n   *\n   * @return {Number}\n   */\n  getCount() {\n    let count = 0;\n    for (let id in this.cache) count += this.cache[id].length;\n    return count++;\n  }\n\n  /**\n   * Destroyes all items from Pool.cache\n   *\n   * @method destroy\n   * @memberof Proton#Proton.Pool\n   */\n  destroy() {\n    for (let id in this.cache) {\n      this.cache[id].length = 0;\n      delete this.cache[id];\n    }\n  }\n\n  /**\n   * Returns Pool.cache\n   *\n   * @method getCache\n   * @memberof Proton#Proton.Pool\n   * @private\n   *\n   * @param {Number} uid the unique id\n   *\n   * @return {Object}\n   */\n  getCache(uid = \"default\") {\n    if (!this.cache[uid]) this.cache[uid] = [];\n    return this.cache[uid];\n  }\n}\n","export default class Stats {\n  constructor(proton) {\n    this.proton = proton;\n    this.container = null;\n    this.type = 1;\n\n    this.emitterIndex = 0;\n    this.rendererIndex = 0;\n  }\n\n  update(style, body) {\n    this.add(style, body);\n\n    const emitter = this.getEmitter();\n    const renderer = this.getRenderer();\n    let str = \"\";\n\n    switch (this.type) {\n      case 2:\n        str += \"emitter:\" + this.proton.emitters.length + \"<br>\";\n        if (emitter) str += \"em speed:\" + emitter.emitSpeed + \"<br>\";\n        if (emitter) str += \"pos:\" + this.getEmitterPos(emitter);\n        break;\n\n      case 3:\n        if (emitter)\n          str += \"initializes:\" + emitter.initializes.length + \"<br>\";\n        if (emitter)\n          str +=\n            '<span style=\"display:inline-block;\">' +\n            this.concatArr(emitter.initializes) +\n            \"</span><br>\";\n        if (emitter) str += \"behaviours:\" + emitter.behaviours.length + \"<br>\";\n        if (emitter)\n          str +=\n            '<span style=\"display:inline-block;\">' +\n            this.concatArr(emitter.behaviours) +\n            \"</span><br>\";\n        break;\n\n      case 4:\n        if (renderer) str += renderer.name + \"<br>\";\n        if (renderer) str += \"body:\" + this.getCreatedNumber(renderer) + \"<br>\";\n        break;\n\n      default:\n        str += \"particles:\" + this.proton.getCount() + \"<br>\";\n        str += \"pool:\" + this.proton.pool.getCount() + \"<br>\";\n        str += \"total:\" + this.proton.pool.total;\n    }\n\n    this.container.innerHTML = str;\n  }\n\n  add(style, body) {\n    if (!this.container) {\n      this.type = 1;\n\n      this.container = document.createElement(\"div\");\n      this.container.style.cssText = [\n        \"position:absolute;bottom:0px;left:0;cursor:pointer;\",\n        \"opacity:0.9;z-index:10000;padding:10px;font-size:12px;font-family:Helvetica,Arial,sans-serif;\",\n        \"width:120px;height:50px;background-color:#002;color:#0ff;\"\n      ].join(\"\");\n\n      this.container.addEventListener(\n        \"click\",\n        e => {\n          this.type++;\n          if (this.type > 4) this.type = 1;\n        },\n        false\n      );\n\n      let bg, color;\n      switch (style) {\n        case 2:\n          bg = \"#201\";\n          color = \"#f08\";\n          break;\n\n        case 3:\n          bg = \"#020\";\n          color = \"#0f0\";\n          break;\n\n        default:\n          bg = \"#002\";\n          color = \"#0ff\";\n      }\n\n      this.container.style[\"background-color\"] = bg;\n      this.container.style[\"color\"] = color;\n    }\n\n    if (!this.container.parentNode) {\n      body = body || this.body || document.body;\n      body.appendChild(this.container);\n    }\n  }\n\n  getEmitter() {\n    return this.proton.emitters[this.emitterIndex];\n  }\n\n  getRenderer() {\n    return this.proton.renderers[this.rendererIndex];\n  }\n\n  concatArr(arr) {\n    let result = \"\";\n    if (!arr || !arr.length) return result;\n\n    for (let i = 0; i < arr.length; i++) {\n      result += (arr[i].name || \"\").substr(0, 1) + \".\";\n    }\n\n    return result;\n  }\n\n  getCreatedNumber(renderer) {\n    return renderer.pool.total || (renderer.cpool && renderer.cpool.total) || 0;\n  }\n\n  getEmitterPos(e) {\n    return Math.round(e.p.x) + \",\" + Math.round(e.p.y);\n  }\n}\n","/*\n * EventDispatcher\n * This code reference since http://createjs.com/.\n *\n **/\n\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = null;\n  }\n\n  static bind(target) {\n    target.prototype.dispatchEvent = EventDispatcher.prototype.dispatchEvent;\n\n    target.prototype.hasEventListener =\n      EventDispatcher.prototype.hasEventListener;\n\n    target.prototype.addEventListener =\n      EventDispatcher.prototype.addEventListener;\n\n    target.prototype.removeEventListener =\n      EventDispatcher.prototype.removeEventListener;\n\n    target.prototype.removeAllEventListeners =\n      EventDispatcher.prototype.removeAllEventListeners;\n  }\n\n  addEventListener(type, listener) {\n    if (!this._listeners) {\n      this._listeners = {};\n    } else {\n      this.removeEventListener(type, listener);\n    }\n\n    if (!this._listeners[type]) this._listeners[type] = [];\n    this._listeners[type].push(listener);\n\n    return listener;\n  }\n\n  removeEventListener(type, listener) {\n    if (!this._listeners) return;\n    if (!this._listeners[type]) return;\n\n    const arr = this._listeners[type];\n    const length = arr.length;\n\n    for (let i = 0; i < length; i++) {\n      if (arr[i] === listener) {\n        if (length === 1) {\n          delete this._listeners[type];\n        }\n\n        // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n\n        break;\n      }\n    }\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) this._listeners = null;\n    else if (this._listeners) delete this._listeners[type];\n  }\n\n  dispatchEvent(type, args) {\n    let result = false;\n    const listeners = this._listeners;\n\n    if (type && listeners) {\n      let arr = listeners[type];\n      if (!arr) return result;\n\n      // arr = arr.slice();\n      // to avoid issues with items being removed or added during the dispatch\n\n      let handler;\n      let i = arr.length;\n      while (i--) {\n        handler = arr[i];\n        result = result || handler(args);\n      }\n    }\n\n    return !!result;\n  }\n\n  hasEventListener(type) {\n    const listeners = this._listeners;\n    return !!(listeners && listeners[type]);\n  }\n}\n","export default class Integration {\n  constructor(type) {\n    this.type = type;\n  }\n\n  calculate(particles, time, damping) {\n    this.eulerIntegrate(particles, time, damping);\n  }\n\n  // Euler Integrate\n  // https://rosettacode.org/wiki/Euler_method\n  eulerIntegrate(particle, time, damping) {\n    if (!particle.sleep) {\n      particle.old.p.copy(particle.p);\n      particle.old.v.copy(particle.v);\n\n      particle.a.multiplyScalar(1 / particle.mass);\n      particle.v.add(particle.a.multiplyScalar(time));\n      particle.p.add(particle.old.v.multiplyScalar(time));\n\n      if (damping) particle.v.multiplyScalar(damping);\n\n      particle.a.clear();\n    }\n  }\n}\n","import Pool from \"./Pool\";\nimport Util from \"../utils/Util\";\nimport Stats from \"../debug/Stats\";\nimport EventDispatcher from \"../events/EventDispatcher\";\nimport MathUtil from \"../math/MathUtil\";\nimport Integration from \"../math/Integration\";\n\nexport default class Proton {\n  static USE_CLOCK = false;\n\n  // measure 1:100\n  static MEASURE = 100;\n  static EULER = \"euler\";\n  static RK2 = \"runge-kutta2\";\n\n  // event name\n  static PARTICLE_CREATED = \"PARTICLE_CREATED\";\n  static PARTICLE_UPDATE = \"PARTICLE_UPDATE\";\n  static PARTICLE_SLEEP = \"PARTICLE_SLEEP\";\n  static PARTICLE_DEAD = \"PARTICLE_DEAD\";\n\n  static EMITTER_ADDED = \"EMITTER_ADDED\";\n  static EMITTER_REMOVED = \"EMITTER_REMOVED\";\n\n  static PROTON_UPDATE = \"PROTON_UPDATE\";\n  static PROTON_UPDATE_AFTER = \"PROTON_UPDATE_AFTER\";\n  static DEFAULT_INTERVAL = 0.0167;\n\n  static amendChangeTabsBug = true;\n\n  /**\n   * The constructor to add emitters\n   *\n   * @constructor Proton\n   *\n   * @todo proParticleCount is not in use\n   * @todo add more documentation of the single properties and parameters\n   *\n   * @param {Number} [proParticleCount] not in use?\n   * @param {Number} [integrationType=Proton.EULER]\n   *\n   * @property {String} [integrationType=Proton.EULER]\n   * @property {Array} emitters   All added emitter\n   * @property {Array} renderers  All added renderer\n   * @property {Number} time      The active time\n   * @property {Number} oldtime   The old time\n   */\n  constructor(integrationType) {\n    this.emitters = [];\n    this.renderers = [];\n\n    this.time = 0;\n    this.now = 0;\n    this.then = 0;\n    this.elapsed = 0;\n\n    this.stats = new Stats(this);\n    this.pool = new Pool(80);\n\n    this.integrationType = Util.initValue(integrationType, Proton.EULER);\n    this.integrator = new Integration(this.integrationType);\n\n    this._fps = \"auto\";\n    this._interval = Proton.DEFAULT_INTERVAL;\n  }\n\n  set fps(fps) {\n    this._fps = fps;\n    this._interval =\n      fps === \"auto\" ? Proton.DEFAULT_INTERVAL : MathUtil.floor(1 / fps, 7);\n  }\n\n  get fps() {\n    return this._fps;\n  }\n\n  /**\n   * add a type of Renderer\n   *\n   * @method addRenderer\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Renderer} render\n   */\n  addRenderer(render) {\n    render.init(this);\n    this.renderers.push(render);\n  }\n\n  /**\n   * @name add a type of Renderer\n   *\n   * @method addRenderer\n   * @param {Renderer} render\n   */\n  removeRenderer(render) {\n    const index = this.renderers.indexOf(render);\n    this.renderers.splice(index, 1);\n    render.remove(this);\n  }\n\n  /**\n   * add the Emitter\n   *\n   * @method addEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Emitter} emitter\n   */\n  addEmitter(emitter) {\n    this.emitters.push(emitter);\n    emitter.parent = this;\n\n    this.dispatchEvent(Proton.EMITTER_ADDED, emitter);\n  }\n\n  /**\n   * Removes an Emitter\n   *\n   * @method removeEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Proton.Emitter} emitter\n   */\n  removeEmitter(emitter) {\n    const index = this.emitters.indexOf(emitter);\n    this.emitters.splice(index, 1);\n    emitter.parent = null;\n\n    this.dispatchEvent(Proton.EMITTER_REMOVED, emitter);\n  }\n\n  /**\n   * Updates all added emitters\n   *\n   * @method update\n   * @memberof Proton\n   * @instance\n   */\n  update() {\n    // 'auto' is the default browser refresh rate, the vast majority is 60fps\n    if (this._fps === \"auto\") {\n      this.dispatchEvent(Proton.PROTON_UPDATE);\n\n      if (Proton.USE_CLOCK) {\n        if (!this.then) this.then = new Date().getTime();\n        this.now = new Date().getTime();\n        this.elapsed = (this.now - this.then) * 0.001;\n        // Fix bugs such as chrome browser switching tabs causing excessive time difference\n        this.amendChangeTabsBug();\n\n        if (this.elapsed > 0) this.emittersUpdate(this.elapsed);\n        this.then = this.now;\n      } else {\n        this.emittersUpdate(Proton.DEFAULT_INTERVAL);\n      }\n\n      this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n    }\n\n    // If the fps frame rate is set\n    else {\n      if (!this.then) this.then = new Date().getTime();\n      this.now = new Date().getTime();\n      this.elapsed = (this.now - this.then) * 0.001;\n\n      if (this.elapsed > this._interval) {\n        this.dispatchEvent(Proton.PROTON_UPDATE);\n        this.emittersUpdate(this._interval);\n        // https://stackoverflow.com/questions/19764018/controlling-fps-with-requestanimationframe\n        this.then = this.now - (this.elapsed % this._interval) * 1000;\n        this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n      }\n    }\n  }\n\n  emittersUpdate(elapsed) {\n    let i = this.emitters.length;\n    while (i--) this.emitters[i].update(elapsed);\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method amendChangeTabsBug\n   * @memberof Proton\n   * @instance\n   */\n  amendChangeTabsBug() {\n    if (!Proton.amendChangeTabsBug) return;\n    if (this.elapsed > 0.5) {\n      this.then = new Date().getTime();\n      this.elapsed = 0;\n    }\n  }\n\n  /**\n   * Counts all particles from all emitters\n   *\n   * @method getCount\n   * @memberof Proton\n   * @instance\n   */\n  getCount() {\n    let total = 0;\n    let i = this.emitters.length;\n\n    while (i--) total += this.emitters[i].particles.length;\n    return total;\n  }\n\n  getAllParticles() {\n    let particles = [];\n    let i = this.emitters.length;\n\n    while (i--) particles = particles.concat(this.emitters[i].particles);\n    return particles;\n  }\n\n  destroyAllEmitters() {\n    Util.destroyAll(this.emitters);\n  }\n\n  /**\n   * Destroys everything related to this Proton instance. This includes all emitters, and all properties\n   *\n   * @method destroy\n   * @memberof Proton\n   * @instance\n   */\n  destroy(remove = false) {\n    const destroyOther = () => {\n      this.time = 0;\n      this.then = 0;\n      this.pool.destroy();\n\n      Util.destroyAll(this.emitters);\n      Util.destroyAll(this.renderers, this.getAllParticles());\n    };\n\n    if (remove) {\n      setTimeout(destroyOther, 200);\n    } else {\n      destroyOther();\n    }\n  }\n}\n\nEventDispatcher.bind(Proton);\n","export default class Rgb {\n  constructor(r = 255, g = 255, b = 255) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  reset() {\n    this.r = 255;\n    this.g = 255;\n    this.b = 255;\n  }\n}\n","import MathUtil from \"./MathUtil\";\n\nexport default {\n  easeLinear(value) {\n    return value;\n  },\n\n  easeInQuad(value) {\n    return Math.pow(value, 2);\n  },\n\n  easeOutQuad(value) {\n    return -(Math.pow(value - 1, 2) - 1);\n  },\n\n  easeInOutQuad(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 2);\n\n    return -0.5 * ((value -= 2) * value - 2);\n  },\n\n  easeInCubic(value) {\n    return Math.pow(value, 3);\n  },\n\n  easeOutCubic(value) {\n    return Math.pow(value - 1, 3) + 1;\n  },\n\n  easeInOutCubic(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 3);\n\n    return 0.5 * (Math.pow(value - 2, 3) + 2);\n  },\n\n  easeInQuart(value) {\n    return Math.pow(value, 4);\n  },\n\n  easeOutQuart(value) {\n    return -(Math.pow(value - 1, 4) - 1);\n  },\n\n  easeInOutQuart(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 4);\n\n    return -0.5 * ((value -= 2) * Math.pow(value, 3) - 2);\n  },\n\n  easeInSine(value) {\n    return -Math.cos(value * MathUtil.PI_2) + 1;\n  },\n\n  easeOutSine(value) {\n    return Math.sin(value * MathUtil.PI_2);\n  },\n\n  easeInOutSine(value) {\n    return -0.5 * (Math.cos(Math.PI * value) - 1);\n  },\n\n  easeInExpo(value) {\n    return value === 0 ? 0 : Math.pow(2, 10 * (value - 1));\n  },\n\n  easeOutExpo(value) {\n    return value === 1 ? 1 : -Math.pow(2, -10 * value) + 1;\n  },\n\n  easeInOutExpo(value) {\n    if (value === 0) return 0;\n\n    if (value === 1) return 1;\n\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (value - 1));\n\n    return 0.5 * (-Math.pow(2, -10 * --value) + 2);\n  },\n\n  easeInCirc(value) {\n    return -(Math.sqrt(1 - value * value) - 1);\n  },\n\n  easeOutCirc(value) {\n    return Math.sqrt(1 - Math.pow(value - 1, 2));\n  },\n\n  easeInOutCirc(value) {\n    if ((value /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - value * value) - 1);\n    return 0.5 * (Math.sqrt(1 - (value -= 2) * value) + 1);\n  },\n\n  easeInBack(value) {\n    let s = 1.70158;\n    return value * value * ((s + 1) * value - s);\n  },\n\n  easeOutBack(value) {\n    let s = 1.70158;\n    return (value = value - 1) * value * ((s + 1) * value + s) + 1;\n  },\n\n  easeInOutBack(value) {\n    let s = 1.70158;\n    if ((value /= 0.5) < 1)\n      return 0.5 * (value * value * (((s *= 1.525) + 1) * value - s));\n    return 0.5 * ((value -= 2) * value * (((s *= 1.525) + 1) * value + s) + 2);\n  },\n\n  getEasing(ease) {\n    if (typeof ease === \"function\") return ease;\n    else return this[ease] || this.easeLinear;\n  }\n};\n","import MathUtil from \"../math/MathUtil\";\n\nexport default class Vector2D {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  getGradient() {\n    if (this.x !== 0) return Math.atan2(this.y, this.x);\n    else if (this.y > 0) return MathUtil.PI_2;\n    else if (this.y < 0) return -MathUtil.PI_2;\n  }\n\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n  }\n\n  add(v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n\n    return this;\n  }\n\n  addXY(a, b) {\n    this.x += a;\n    this.y += b;\n\n    return this;\n  }\n\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n\n    return this;\n  }\n\n  sub(v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n\n    return this;\n  }\n\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n  }\n\n  divideScalar(s) {\n    if (s !== 0) {\n      this.x /= s;\n      this.y /= s;\n    } else {\n      this.set(0, 0);\n    }\n\n    return this;\n  }\n\n  multiplyScalar(s) {\n    this.x *= s;\n    this.y *= s;\n\n    return this;\n  }\n\n  negate() {\n    return this.multiplyScalar(-1);\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  normalize() {\n    return this.divideScalar(this.length());\n  }\n\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  rotate(tha) {\n    const x = this.x;\n    const y = this.y;\n\n    this.x = x * Math.cos(tha) + y * Math.sin(tha);\n    this.y = -x * Math.sin(tha) + y * Math.cos(tha);\n\n    return this;\n  }\n\n  distanceToSquared(v) {\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n\n    return this;\n  }\n\n  equals(v) {\n    return v.x === this.x && v.y === this.y;\n  }\n\n  clear() {\n    this.x = 0.0;\n    this.y = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n}\n","/** @typedef {import('../behaviour/Behaviour')} Behaviour */\n/** @typedef {import('../math/Vector2D')} Vector2D */\n/** @typedef {import('../utils/Rgb')} Rgb */\nimport Rgb from \"../utils/Rgb\";\nimport Puid from \"../utils/Puid\";\nimport Util from \"../utils/Util\";\nimport ease from \"../math/ease\";\nimport Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Particle {\n  /** @type string */\n  id = ''\n\n  /** @type {{p:Vector2D,v:Vector2D,a:Vector2D}} */\n  old = {}\n\n  /** @type {object} */\n  data = {}\n\n  /** @type {Behaviour[]} */\n  behaviours = []\n\n  /** @type {Vector2D} */\n  p = []\n\n  /** @type {Vector2D} */\n  v = []\n\n  /** @type {Vector2D} */\n  a = []\n\n  /** @type {Rgb} */\n  rgb = {}\n\n  /**\n   * the Particle class\n   *\n   * @class Proton.Particle\n   * @constructor\n   * @param {Object} pObj the parameters object;\n   * for example {life:3,dead:false}\n   */\n  constructor(conf) {\n    /**\n     * The particle's id;\n     * @property id\n     * @type {string}\n     */\n    this.name = \"Particle\";\n    this.id = Puid.id(this.name);\n    this.old = {};\n    this.data = {};\n    this.behaviours = [];\n\n    this.p = new Vector2D();\n    this.v = new Vector2D();\n    this.a = new Vector2D();\n    this.old.p = new Vector2D();\n    this.old.v = new Vector2D();\n    this.old.a = new Vector2D();\n\n    this.rgb = new Rgb();\n    this.reset();\n    conf && Util.setProp(this, conf);\n  }\n\n  getDirection() {\n    return Math.atan2(this.v.x, -this.v.y) * MathUtil.N180_PI;\n  }\n\n  reset() {\n    this.life = Infinity;\n    this.age = 0;\n\n    this.dead = false;\n    this.sleep = false;\n    this.body = null;\n    this.sprite = null;\n    this.parent = null;\n\n    this.energy = 1; // Energy Loss\n    this.mass = 1;\n    this.radius = 10;\n    this.alpha = 1;\n    this.scale = 1;\n    this.rotation = 0;\n    this.color = null;\n\n    this.p.set(0, 0);\n    this.v.set(0, 0);\n    this.a.set(0, 0);\n    this.old.p.set(0, 0);\n    this.old.v.set(0, 0);\n    this.old.a.set(0, 0);\n    this.easing = ease.easeLinear;\n\n    this.rgb.reset();\n    Util.emptyObject(this.data);\n    this.removeAllBehaviours();\n\n    return this;\n  }\n\n  update(time, index) {\n    if (!this.sleep) {\n      this.age += time;\n      this.applyBehaviours(time, index);\n    }\n\n    if (this.age < this.life) {\n      const scale = this.easing(this.age / this.life);\n      this.energy = Math.max(1 - scale, 0);\n    } else {\n      this.destroy();\n    }\n  }\n\n  applyBehaviours(time, index) {\n    const length = this.behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.behaviours[i] &&\n        this.behaviours[i].applyBehaviour(this, time, index);\n    }\n  }\n\n  /**\n   * @param {Behaviour} behaviour\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n\n    if (behaviour.hasOwnProperty(\"parents\")) behaviour.parents.push(this);\n    behaviour.initialize(this);\n  }\n\n  /**\n   * @param {Behaviour[]} behaviours\n   */\n  addBehaviours(behaviours) {\n    const length = behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.addBehaviour(behaviours[i]);\n    }\n  }\n\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      const behaviour = this.behaviours.splice(index, 1);\n      behaviour.parents = null;\n    }\n  }\n\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  /**\n   * Destory this particle\n   * @method destroy\n   */\n  destroy() {\n    this.removeAllBehaviours();\n    this.energy = 0;\n    this.dead = true;\n    this.parent = null;\n  }\n}\n","export default {\n  /**\n   * @typedef  {Object} rgbObject\n   * @property {Number} r red value\n   * @property {Number} g green value\n   * @property {Number} b blue value\n   */\n  /**\n   * converts a hex value to a rgb object\n   *\n   * @memberof Proton#Proton.Util\n   * @method hexToRgb\n   *\n   * @param {String} h any hex value, e.g. #000000 or 000000 for black\n   *\n   * @return {rgbObject}\n   */\n  hexToRgb(h) {\n    const hex16 = h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n    const r = parseInt(hex16.substring(0, 2), 16);\n    const g = parseInt(hex16.substring(2, 4), 16);\n    const b = parseInt(hex16.substring(4, 6), 16);\n\n    return { r, g, b };\n  },\n\n  /**\n   * converts a rgb value to a rgb string\n   *\n   * @memberof Proton#Proton.Util\n   * @method rgbToHex\n   *\n   * @param {Object | Proton.hexToRgb} rgb a rgb object like in {@link Proton#Proton.}\n   *\n   * @return {String} rgb()\n   */\n  rgbToHex(rbg) {\n    return `rgb(${rbg.r}, ${rbg.g}, ${rbg.b})`;\n  },\n\n  getHex16FromParticle(p) {\n    return Number(p.rgb.r) * 65536 + Number(p.rgb.g) * 256 + Number(p.rgb.b);\n  }\n};\n","import Vector2D from \"./Vector2D\";\n\nexport default class Polar2D {\n  constructor(r, tha) {\n    this.r = Math.abs(r) || 0;\n    this.tha = tha || 0;\n  }\n\n  set(r, tha) {\n    this.r = r;\n    this.tha = tha;\n    return this;\n  }\n\n  setR(r) {\n    this.r = r;\n    return this;\n  }\n\n  setTha(tha) {\n    this.tha = tha;\n    return this;\n  }\n\n  copy(p) {\n    this.r = p.r;\n    this.tha = p.tha;\n    return this;\n  }\n\n  toVector() {\n    return new Vector2D(this.getX(), this.getY());\n  }\n\n  getX() {\n    return this.r * Math.sin(this.tha);\n  }\n\n  getY() {\n    return -this.r * Math.cos(this.tha);\n  }\n\n  normalize() {\n    this.r = 1;\n    return this;\n  }\n\n  equals(v) {\n    return v.r === this.r && v.tha === this.tha;\n  }\n\n  clear() {\n    this.r = 0.0;\n    this.tha = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Polar2D(this.r, this.tha);\n  }\n}\n","const Mat3 = {\n  create(mat3) {\n    const mat = new Float32Array(9);\n    if (mat3) this.set(mat3, mat);\n\n    return mat;\n  },\n\n  set(mat1, mat2) {\n    for (let i = 0; i < 9; i++) mat2[i] = mat1[i];\n\n    return mat2;\n  },\n\n  multiply(mat, mat2, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a02 = mat[2],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b00 = mat2[0],\n      b01 = mat2[1],\n      b02 = mat2[2],\n      b10 = mat2[3],\n      b11 = mat2[4],\n      b20 = mat2[6],\n      b21 = mat2[7];\n\n    mat3[0] = b00 * a00 + b01 * a10;\n    mat3[1] = b00 * a01 + b01 * a11;\n    mat3[2] = a02 * b02;\n    mat3[3] = b10 * a00 + b11 * a10;\n    mat3[4] = b10 * a01 + b11 * a11;\n    mat3[6] = b20 * a00 + b21 * a10 + a20;\n    mat3[7] = b20 * a01 + b21 * a11 + a21;\n\n    return mat3;\n  },\n\n  inverse(mat, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b01 = a11,\n      b11 = -a10,\n      b21 = a21 * a10 - a11 * a20,\n      d = a00 * b01 + a01 * b11,\n      id;\n\n    id = 1 / d;\n    mat3[0] = b01 * id;\n    mat3[1] = -a01 * id;\n    mat3[3] = b11 * id;\n    mat3[4] = a00 * id;\n    mat3[6] = b21 * id;\n    mat3[7] = (-a21 * a00 + a01 * a20) * id;\n\n    return mat3;\n  },\n\n  multiplyVec2(m, vec, mat3) {\n    let x = vec[0],\n      y = vec[1];\n\n    mat3[0] = x * m[0] + y * m[3] + m[6];\n    mat3[1] = x * m[1] + y * m[4] + m[7];\n\n    return mat3;\n  }\n};\n\nexport default Mat3;\n","import Span from \"./Span\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"./MathUtil\";\n\nexport default class ArraySpan extends Span {\n  constructor(color) {\n    super();\n    this._arr = Util.toArray(color);\n  }\n\n  getValue() {\n    const val = Util.getRandFromArray(this._arr);\n    return val === \"random\" || val === \"Random\" ? MathUtil.randomColor() : val;\n  }\n\n  /**\n   * Make sure that the color is an instance of Proton.ArraySpan, if not it makes a new instance\n   *\n   * @method setSpanValue\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  static createArraySpan(arr) {\n    if (!arr) return null;\n\n    if (arr instanceof ArraySpan) return arr;\n    else return new ArraySpan(arr);\n  }\n}\n","export default class Rectangle {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n\n    this.width = w;\n    this.height = h;\n\n    this.bottom = this.y + this.height;\n    this.right = this.x + this.width;\n  }\n\n  contains(x, y) {\n    if (x <= this.right && x >= this.x && y <= this.bottom && y >= this.y)\n      return true;\n    else return false;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\n\nexport default class Rate {\n  /**\n   * The number of particles per second emission (a [particle]/b [s]);\n   * @namespace\n   * @memberof! Proton#\n   * @constructor\n   * @alias Rate\n   *\n   * @param {Array | Number | Span} numpan the number of each emission;\n   * @param {Array | Number | Span} timepan the time of each emission;\n   * for example: new Rate(new Span(10, 20), new Span(.1, .25));\n   */\n  constructor(numpan, timepan) {\n    this.numPan = Span.setSpanValue(Util.initValue(numpan, 1));\n    this.timePan = Span.setSpanValue(Util.initValue(timepan, 1));\n\n    this.startTime = 0;\n    this.nextTime = 0;\n    this.init();\n  }\n\n  init() {\n    this.startTime = 0;\n    this.nextTime = this.timePan.getValue();\n  }\n\n  getValue(time) {\n    this.startTime += time;\n\n    if (this.startTime >= this.nextTime) {\n      this.startTime = 0;\n      this.nextTime = this.timePan.getValue();\n\n      if (this.numPan.b === 1) {\n        if (this.numPan.getValue(false) > 0.5) return 1;\n        else return 0;\n      } else {\n        return this.numPan.getValue(true);\n      }\n    }\n\n    return 0;\n  }\n}\n","export default class Initialize {\n  reset() {}\n\n  init(emitter, particle) {\n    if (particle) {\n      this.initialize(particle);\n    } else {\n      this.initialize(emitter);\n    }\n  }\n\n  // sub class init\n  initialize(target) {}\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Life extends Initialize {\n  constructor(a, b, c) {\n    super();\n\n    this.lifePan = Span.setSpanValue(a, b, c);\n    this.name = \"Life\";\n  }\n\n  initialize(target) {\n    if (this.lifePan.a === Infinity) target.life = Infinity;\n    else target.life = this.lifePan.getValue();\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\n\nexport default class Zone {\n  constructor() {\n    this.vector = new Vector2D(0, 0);\n    this.random = 0;\n    this.crossType = \"dead\";\n    this.alert = true;\n  }\n\n  getPosition() {}\n\n  crossing(particle) {}\n}\n","import Zone from \"./Zone\";\n\nexport default class PointZone extends Zone {\n  constructor(x, y) {\n    super();\n\n    this.x = x;\n    this.y = y;\n  }\n\n  getPosition() {\n    this.vector.x = this.x;\n    this.vector.y = this.y;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    if (this.alert) {\n      console.error(\"Sorry, PointZone does not support crossing method!\");\n      this.alert = false;\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport PointZone from \"../zone/PointZone\";\nimport Initialize from \"./Initialize\";\n\nexport default class Position extends Initialize {\n  constructor(zone) {\n    super();\n    this.zone = Util.initValue(zone, new PointZone());\n    this.name = \"Position\";\n  }\n\n  reset(zone) {\n    this.zone = Util.initValue(zone, new PointZone());\n  }\n\n  initialize(target) {\n    this.zone.getPosition();\n\n    target.p.x = this.zone.vector.x;\n    target.p.y = this.zone.vector.y;\n  }\n}\n","import Proton from \"../core/Proton\";\nimport Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport Polar2D from \"../math/Polar2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Velocity extends Initialize {\n  constructor(rpan, thapan, type) {\n    super();\n\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n\n    this.name = \"Velocity\";\n  }\n\n  reset(rpan, thapan, type) {\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n  }\n\n  normalizeVelocity(vr) {\n    return vr * Proton.MEASURE;\n  }\n\n  initialize(target) {\n    if (this.type === \"p\" || this.type === \"P\" || this.type === \"polar\") {\n      const polar2d = new Polar2D(\n        this.normalizeVelocity(this.rPan.getValue()),\n        this.thaPan.getValue() * MathUtil.PI_180\n      );\n\n      target.v.x = polar2d.getX();\n      target.v.y = polar2d.getY();\n    } else {\n      target.v.x = this.normalizeVelocity(this.rPan.getValue());\n      target.v.y = this.normalizeVelocity(this.thaPan.getValue());\n    }\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Mass extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.massPan = Span.setSpanValue(a, b, c);\n    this.name = \"Mass\";\n  }\n\n  initialize(target) {\n    target.mass = this.massPan.getValue();\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Radius extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.radius = Span.setSpanValue(a, b, c);\n\n    this.name = \"Radius\";\n  }\n\n  reset(a, b, c) {\n    this.radius = Span.setSpanValue(a, b, c);\n  }\n\n  initialize(particle) {\n    particle.radius = this.radius.getValue();\n    particle.data.oldRadius = particle.radius;\n  }\n}\n","import Util from \"../utils/Util\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Initialize from \"./Initialize\";\n\nexport default class Body extends Initialize {\n  constructor(image, w, h) {\n    super();\n\n    this.image = this.setSpanValue(image);\n    this.w = Util.initValue(w, 20);\n    this.h = Util.initValue(h, this.w);\n    this.name = \"Body\";\n  }\n\n  initialize(particle) {\n    const imageTarget = this.image.getValue();\n\n    if (typeof imageTarget === \"string\") {\n      particle.body = {\n        width: this.w,\n        height: this.h,\n        src: imageTarget,\n        isInner: true,\n        inner: true\n      };\n    } else {\n      particle.body = imageTarget;\n    }\n  }\n\n  setSpanValue(image) {\n    return image instanceof ArraySpan ? image : new ArraySpan(image);\n  }\n}\n","import Proton from '../core/Proton';\nimport Util from '../utils/Util';\nimport ease from '../math/ease';\n\nexport default class Behaviour {\n    static id = 0;\n\n    /**\n     * The Behaviour class is the base for the other Behaviour\n     *\n     * @memberof! -\n     * @interface\n     * @alias Proton.Behaviour\n     *\n     * @param {Number} life \tthe behaviours life\n     * @param {String} easing \tThe behaviour's decaying trend, for example ease.easeOutQuart\n     *\n     * @property {String}  id \t\tThe behaviours id\n     * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n     * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n     * @property {Number}  age=0 \tHow long the particle should be 'alife'\n     * @property {Number}  energy=1\n     * @property {Boolean} dead=false The particle is dead at first\n     * @property {Array}   parents \tThe behaviour's parents array\n     * @property {String}  name \tThe behaviour name\n     */\n    constructor(life, easing) {\n\n        this.life = Util.initValue(life, Infinity);\n        this.easing = ease.getEasing(easing);\n\n        this.age = 0;\n        this.energy = 1;\n        this.dead = false;\n        this.parents = [];\n\n        this.id = `Behaviour_${Behaviour.id++}`;\n        this.name = 'Behaviour';\n    }\n\n    /**\n     * Reset this behaviour's parameters\n     *\n     * @method reset\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Number} [life=Infinity] \t\tthis behaviour's life\n     * @param {String} [easing=easeLinear] \tthis behaviour's easing\n     */\n    reset(life, easing) {\n        this.life = Util.initValue(life, Infinity);\n        this.easing = ease.getEasing(easing);\n    }\n\n    /**\n     * Normalize a force by 1:100;\n     *\n     * @method normalizeForce\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Vector2D} force\n     */\n    normalizeForce(force) {\n        return force.multiplyScalar(Proton.MEASURE);\n    }\n\n    /**\n     * Normalize a value by 1:100;\n     *\n     * @method normalizeValue\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Number} value\n     */\n    normalizeValue(value) {\n        return value * Proton.MEASURE;\n    }\n\n    /**\n     * Initialize the behaviour's parameters for all particles\n     *\n     * @method initialize\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     */\n    initialize(particle) {}\n\n    /**\n     * Apply this behaviour for all particles every time\n     *\n     * @method applyBehaviour\n     * @memberof Proton.Behaviour\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     * @param {Number} \t\t\ttime the integrate time 1/ms\n     * @param {Int} \t\t\tindex the particle index\n     */\n    calculate(particle, time, index) {\n        this.age += time;\n\n        if (this.age >= this.life || this.dead) {\n            this.energy = 0;\n            this.dead = true;\n            this.destroy();\n        } else {\n            const scale = this.easing(particle.age / particle.life);\n            this.energy = Math.max(1 - scale, 0);\n        }\n    }\n\n    /**\n     * Destory this behaviour\n     *\n     * @method destroy\n     * @memberof Proton.Behaviour\n     * @instance\n     */\n    destroy() {\n        let i = this.parents.length;\n        while (i--) {\n            this.parents[i].removeBehaviour(this);\n        }\n\n        this.parents.length = 0;\n    }\n}\n","import Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class Force extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Force\n\t *\n\t * @param {Number} fx\n\t * @param {Number} fy\n\t * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(fx, fy, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.force = this.normalizeForce(new Vector2D(fx, fy));\n\t\tthis.name = 'Force';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Force\n\t * @instance\n\t *\n\t * @param {Number} fx\n\t * @param {Number} fy\n\t * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(fx, fy, life, easing) {\n\t\tthis.force = this.normalizeForce(new Vector2D(fx, fy));\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Force\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} the integrate time 1/ms\n\t * @param {Int} the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\t\tparticle.a.add(this.force);\n\t}\n}","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Attraction extends Behaviour {\n  /**\n   * This behaviour let the particles follow one specific Proton.Vector2D\n   *\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Attraction\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {Proton.Vector2D} targetPosition\n   * @property {Number} radius\n   * @property {Number} force\n   * @property {Number} radiusSq\n   * @property {Proton.Vector2D} attractionForce\n   * @property {Number} lengthSq\n   * @property {String} name The Behaviour name\n   */\n  constructor(targetPosition, force, radius, life, easing) {\n    super(life, easing);\n\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    this.name = \"Attraction\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Attraction\n   * @instance\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @memberof Proton#Proton.Attraction\n   * @method applyBehaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    this.attractionForce.copy(this.targetPosition);\n    this.attractionForce.sub(particle.p);\n    this.lengthSq = this.attractionForce.lengthSq();\n\n    if (this.lengthSq > 0.00004 && this.lengthSq < this.radiusSq) {\n      this.attractionForce.normalize();\n      this.attractionForce.multiplyScalar(1 - this.lengthSq / this.radiusSq);\n      this.attractionForce.multiplyScalar(this.force);\n\n      particle.a.add(this.attractionForce);\n    }\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class RandomDrift extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Behaviour\n   * @constructor\n   * @alias RandomDrift\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {Number} time The time of the drift\n   * @property {String} name The Behaviour name\n   */\n  constructor(driftX, driftY, delay, life, easing) {\n    super(life, easing);\n\n    this.reset(driftX, driftY, delay);\n    this.time = 0;\n    this.name = \"RandomDrift\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(driftX, driftY, delay, life, easing) {\n    this.panFoce = new Vector2D(driftX, driftY);\n    this.panFoce = this.normalizeForce(this.panFoce);\n    this.delay = delay;\n\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    particle.data.time = 0;\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.data.time += time;\n\n    if (particle.data.time >= this.delay) {\n      particle.a.addXY(\n        MathUtil.randomAToB(-this.panFoce.x, this.panFoce.x),\n        MathUtil.randomAToB(-this.panFoce.y, this.panFoce.y)\n      );\n\n      particle.data.time = 0;\n    }\n  }\n}\n","import Force from './Force';\n\nexport default class Gravity extends Force {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton#Proton.Force\n\t * @constructor\n\t * @alias Proton.Gravity\n\t *\n\t * @param {Number} g \t\t\t\t\t\t\tGravity\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(g, life, easing) {\n\t\tsuper(0, g, life, easing);\n\t\tthis.name = 'Gravity';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Gravity\n\t * @instance\n\t *\n\t * @param {Number} g \t\t\t\t\t\t\tGravity\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(g, life, easing) {\n\t\tsuper.reset(0, g, life, easing);\n\t}\n}","import Util from '../utils/Util';\nimport Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class Collision extends Behaviour {\n\n\t/**\n\t * The callback after collision\n\t *\n\t * @callback Callback\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Proton.Paritcle} otherParticle\n\t */\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Collision\n\t *\n\t * @todo add description to mass\n\t *\n\t * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n\t * @param {Boolean} \t\t[mass=true]\n\t * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(emitter, mass, callback, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(emitter, mass, callback);\n\t\tthis.name = 'Collision';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @memberof Proton#Proton.Collision\n\t * @method reset\n\t * @instance\n\t *\n\t * @todo add description to mass\n\t *\n\t * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n\t * @param {Boolean} \t\t[mass=true]\n\t * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n\t * @param {Number} \t\t\t[life=Infinity] \tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(emitter, mass, callback, life, easing) {\n\t\tthis.emitter = Util.initValue(emitter, null);\n\t\tthis.mass = Util.initValue(mass, true);\n\t\tthis.callback = Util.initValue(callback, null);\n\n\t\tthis.collisionPool = [];\n\t\tthis.delta = new Vector2D();\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @memberof Proton#Proton.Collision\n\t * @method applyBehaviour\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tconst newPool = this.emitter ? this.emitter.particles.slice(index) : this.pool.slice(index);\n\t\tconst length = newPool.length;\n\n\t\tlet otherParticle;\n\t\tlet lengthSq;\n\t\tlet overlap;\n\t\tlet totalMass;\n\t\tlet averageMass1, averageMass2;\n\t\tlet i;\n\n\t\tfor (i = 0; i < length; i++) {\n\t\t\totherParticle = newPool[i];\n\n\t\t\tif (otherParticle !== particle) {\n\t\t\t\tthis.delta.copy(otherParticle.p);\n\t\t\t\tthis.delta.sub(particle.p);\n\n\t\t\t\tlengthSq = this.delta.lengthSq();\n\t\t\t\tconst distance = particle.radius + otherParticle.radius;\n\n\t\t\t\tif (lengthSq <= distance * distance) {\n\t\t\t\t\toverlap = distance - Math.sqrt(lengthSq);\n\t\t\t\t\toverlap += 0.5;\n\n\t\t\t\t\ttotalMass = particle.mass + otherParticle.mass;\n\t\t\t\t\taverageMass1 = this.mass ? otherParticle.mass / totalMass : 0.5;\n\t\t\t\t\taverageMass2 = this.mass ? particle.mass / totalMass : 0.5;\n\n\t\t\t\t\tparticle.p.add(this.delta.clone().normalize().multiplyScalar(overlap * -averageMass1));\n\t\t\t\t\totherParticle.p.add(this.delta.normalize().multiplyScalar(overlap * averageMass2));\n\n\t\t\t\t\tthis.callback && this.callback(particle, otherParticle);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","import Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class CrossZone extends Behaviour {\n\n    /**\n     * Defines what happens if the particles come to the end of the specified zone\n     *\n     * @memberof! Proton#\n     * @augments Proton.Behaviour\n     * @constructor\n     * @alias Proton.CrossZone\n     *\n     * @param {Proton.Zone} zone \t\t\t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n     * @param {String} \t\t[crossType=dead] \t\t\twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n     * @param {Number} \t\t[life=Infinity] \t\t\tthis behaviour's life\n     * @param {String} \t\t[easing=ease.easeLinear] \tthis behaviour's easing\n     *\n     * @property {String} name The Behaviour name\n     */\n    constructor(zone, crossType, life, easing) {\n        super(life, easing);\n\n        this.reset(zone, crossType);\n        this.name = 'CrossZone';\n    }\n\n    /**\n     * Reset this behaviour's parameters\n     *\n     * @method reset\n     * @memberof Proton#Proton.CrossZone\n     * @instance\n     *\n     * @param {Proton.Zone} zone \t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n     * @param {String} \t\t[crossType=dead] \twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n     * @param {Number} \t\t[life=Infinity] \tthis behaviour's life\n     * @param {String} \t\t[easing=easeLinear]\tthis behaviour's easing\n     */\n    reset(zone, crossType, life, easing) {\n        this.zone = zone;\n        this.zone.crossType = Util.initValue(crossType, 'dead');\n\n        life && super.reset(life, easing);\n    }\n\n    /**\n     * Apply this behaviour for all particles every time\n     *\n     * @method applyBehaviour\n     * @memberof Proton#Proton.CrossZone\n     * @instance\n     *\n     * @param {Proton.Particle} particle\n     * @param {Number} the integrate time 1/ms\n     * @param {Int} the particle index\n     */\n    applyBehaviour(particle, time, index) {\n        this.calculate(particle, time, index);\n        this.zone.crossing(particle);\n    };\n}","import Util from \"../utils/Util\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Alpha extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Alpha\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Alpha\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.same = b === null || b === undefined ? true : false;\n    this.a = Span.setSpanValue(Util.initValue(a, 1));\n    this.b = Span.setSpanValue(b);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Sets the new alpha value of the particle\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle A single Proton generated particle\n   */\n  initialize(particle) {\n    particle.data.alphaA = this.a.getValue();\n\n    if (this.same) particle.data.alphaB = particle.data.alphaA;\n    else particle.data.alphaB = this.b.getValue();\n  }\n\n  /**\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    particle.alpha =\n      particle.data.alphaB +\n      (particle.data.alphaA - particle.data.alphaB) * this.energy;\n\n    if (particle.alpha < 0.001) particle.alpha = 0;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class Scale extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Scale\n\t *\n\t * @todo add description for 'a' and 'b'\n\t *\n\t * @param {Number} a\n\t * @param {String} b\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(a, b, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(a, b);\n\t\tthis.name = 'Scale';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Number} a\n\t * @param {String} b\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(a, b, life, easing) {\n\t\tthis.same = b === null || b === undefined ? true : false;\n\t\tthis.a = Span.setSpanValue(Util.initValue(a, 1));\n\t\tthis.b = Span.setSpanValue(b);\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Initialize the behaviour's parameters for all particles\n\t *\n\t * @method initialize\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t */\n\tinitialize(particle) {\n\t\tparticle.data.scaleA = this.a.getValue();\n\t\tparticle.data.oldRadius = particle.radius;\n\t\tparticle.data.scaleB = this.same ? particle.data.scaleA : this.b.getValue();\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Scale\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\t\tparticle.scale = particle.data.scaleB + (particle.data.scaleA - particle.data.scaleB) * this.energy;\n\n\t\tif (particle.scale < 0.0001) particle.scale = 0;\n\t\tparticle.radius = particle.data.oldRadius * particle.scale;\n\t}\n}","import Span from \"../math/Span\";\nimport Util from '../utils/Util';\nimport Behaviour from './Behaviour';\n\nexport default class Rotate extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Proton.Behaviour\n\t * @constructor\n\t * @alias Proton.Rotate\n\t *\n\t * @todo add description for 'a', 'b' and 'style'\n\t *\n\t * @param {String} [influence=Velocity] The rotation's influence\n\t * @param {String} b\n\t * @param {String} [style=to]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(influence, b, style, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.reset(influence, b, style);\n\t\tthis.name = 'Rotate';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @todo add description for 'a', 'b' and 'style'\n\t *\n\t * @param {String} a\n\t * @param {String} b\n\t * @param {String} [style=to]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(a, b, style, life, easing) {\n\t\tthis.same = b === null || b === undefined ? true : false;\n\n\t\tthis.a = Span.setSpanValue(Util.initValue(a, 'Velocity'));\n\t\tthis.b = Span.setSpanValue(Util.initValue(b, 0));\n\t\tthis.style = Util.initValue(style, 'to');\n\n\t\tlife && super.reset(life, easing);\n\t}\n\n\t/**\n\t * Initialize the behaviour's parameters for all particles\n\t *\n\t * @method initialize\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t */\n\tinitialize(particle) {\n\t\tparticle.rotation = this.a.getValue();\n\t\tparticle.data.rotationA = this.a.getValue();\n\n\t\tif (!this.same) particle.data.rotationB = this.b.getValue();\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#Proton.Rotate\n\t * @instance\n\t *\n\t * @param {Proton.Particle} particle\n\t * @param {Number} \t\t\ttime the integrate time 1/ms\n\t * @param {Int} \t\t\tindex the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.calculate(particle, time, index);\n\n\t\tif (!this.same) {\n\t\t\tif (this.style === 'to' || this.style === 'TO' || this.style === '_') {\n\t\t\t\tparticle.rotation += particle.data.rotationB + (particle.data.rotationA - particle.data.rotationB) * this.energy\n\t\t\t} else {\n\t\t\t\tparticle.rotation += particle.data.rotationB;\n\t\t\t}\n\t\t} else if (this.a.a === 'V' || this.a.a === 'Velocity' || this.a.a === 'v') {\n\t\t\t// beta...\n\t\t\tparticle.rotation = particle.getDirection();\n\t\t}\n\t}\n\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Color extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Color\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Color\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.a = ArraySpan.createArraySpan(a);\n    this.b = ArraySpan.createArraySpan(b);\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {\n    particle.color = this.a.getValue();\n    particle.data.colorA = ColorUtil.hexToRgb(particle.color);\n\n    if (this.b) particle.data.colorB = ColorUtil.hexToRgb(this.b.getValue());\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    if (this.b) {\n      this.calculate(particle, time, index);\n\n      particle.rgb.r =\n        particle.data.colorB.r +\n        (particle.data.colorA.r - particle.data.colorB.r) * this.energy;\n      particle.rgb.g =\n        particle.data.colorB.g +\n        (particle.data.colorA.g - particle.data.colorB.g) * this.energy;\n      particle.rgb.b =\n        particle.data.colorB.b +\n        (particle.data.colorA.b - particle.data.colorB.b) * this.energy;\n\n      particle.rgb.r = Math.floor(particle.rgb.r);\n      particle.rgb.g = Math.floor(particle.rgb.g);\n      particle.rgb.b = Math.floor(particle.rgb.b);\n    } else {\n      particle.rgb.r = particle.data.colorA.r;\n      particle.rgb.g = particle.data.colorA.g;\n      particle.rgb.b = particle.data.colorA.b;\n    }\n  }\n}\n","import MathUtil from \"../math/MathUtil\";\nimport Vector2D from \"../math/Vector2D\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nconst CHANGING = \"changing\";\n\nexport default class Cyclone extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Cyclone\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(angle, force, life, easing) {\n    super(life, easing);\n    this.setAngleAndForce(angle, force);\n    this.name = \"Cyclone\";\n  }\n\n  setAngleAndForce(angle, force) {\n    this.force = CHANGING;\n    this.angle = MathUtil.PI / 2;\n\n    if (angle === \"right\") {\n      this.angle = MathUtil.PI / 2;\n    } else if (angle === \"left\") {\n      this.angle = -MathUtil.PI / 2;\n    } else if (angle === \"random\") {\n      this.angle = \"random\";\n    } else if (angle instanceof Span) {\n      this.angle = \"span\";\n      this.span = angle;\n    } else if (angle) {\n      this.angle = angle;\n    }\n\n    if (\n      String(force).toLowerCase() === \"changing\" ||\n      String(force).toLowerCase() === \"chang\" ||\n      String(force).toLowerCase() === \"auto\"\n    ) {\n      this.force = CHANGING;\n    } else if (force) {\n      this.force = force;\n    }\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(angle, force, life, easing) {\n    this.angle = MathUtil.PI / 2;\n    this.setAngleAndForce(angle, force);\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    if (this.angle === \"random\") {\n      particle.data.cangle = MathUtil.randomAToB(-MathUtil.PI, MathUtil.PI);\n    } else if (this.angle === \"span\") {\n      particle.data.cangle = this.span.getValue();\n    }\n\n    particle.data.cyclone = new Vector2D(0, 0);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    let length;\n    let gradient = particle.v.getGradient();\n    if (this.angle === \"random\" || this.angle === \"span\") {\n      gradient += particle.data.cangle;\n    } else {\n      gradient += this.angle;\n    }\n\n    if (this.force === CHANGING) {\n      length = particle.v.length() / 100;\n    } else {\n      length = this.force;\n    }\n\n    particle.data.cyclone.x = length * Math.cos(gradient);\n    particle.data.cyclone.y = length * Math.sin(gradient);\n    particle.data.cyclone = this.normalizeForce(particle.data.cyclone);\n    particle.a.add(particle.data.cyclone);\n  }\n}\n","import Attraction from './Attraction';\n\nexport default class Repulsion extends Attraction {\n\n\t/**\n\t * The oppisite of Proton.Attraction - turns the force\n\t *\n\t * @memberof! Proton#\n\t * @augments Proton#Proton.Attraction\n\t * @constructor\n\t * @alias Proton.Repulsion\n\t *\n\t * @todo add description for 'force' and 'radius'\n\t *\n\t * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n\t * @param {Number} [force=100]\n\t * @param {Number} [radius=1000]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t *\n\t * @property {Number} force\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(targetPosition, force, radius, life, easing) {\n\t\tsuper(targetPosition, force, radius, life, easing);\n\n\t\tthis.force *= -1;\n\t\tthis.name = 'Repulsion';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#Proton.Repulsion\n\t * @instance\n\t *\n\t * @todo add description for 'force' and 'radius'\n\t *\n\t * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n\t * @param {Number} [force=100]\n\t * @param {Number} [radius=1000]\n\t * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n\t * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n\t */\n\treset(targetPosition, force, radius, life, easing) {\n\t\tsuper.reset(targetPosition, force, radius, life, easing);\n\t\tthis.force *= -1;\n\t}\n}\n","import Util from '../utils/Util';\nimport Vector2D from '../math/Vector2D';\nimport Behaviour from './Behaviour';\n\nexport default class GravityWell extends Behaviour {\n\n\t/**\n\t * @memberof! Proton#\n\t * @augments Behaviour\n\t * @constructor\n\t * @alias GravityWell\n\t *\n\t * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n\t * @param {Number} [force=100]\t\t\t\t\tThe force\n\t * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n\t * @param {String} [easing=easeLinear]\tthis behaviour's easing\n\t *\n\t * @property {String} name The Behaviour name\n\t */\n\tconstructor(centerPoint, force, life, easing) {\n\t\tsuper(life, easing);\n\n\t\tthis.distanceVec = new Vector2D();\n\t\tthis.centerPoint = Util.initValue(centerPoint, new Vector2D);\n\t\tthis.force = Util.initValue(this.normalizeValue(force), 100);\n\n\t\tthis.name = 'GravityWell';\n\t}\n\n\t/**\n\t * Reset this behaviour's parameters\n\t *\n\t * @method reset\n\t * @memberof Proton#GravityWell\n\t * @instance\n\t *\n\t * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n\t * @param {Number} [force=100]\t\t\t\t\tThe force\n\t * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n\t * @param {String} [easing=easeLinear]\tthis behaviour's easing\n\t */\n\treset(centerPoint, force, life, easing) {\n\t\tthis.distanceVec = new Vector2D();\n\t\tthis.centerPoint = Util.initValue(centerPoint, new Vector2D);\n\t\tthis.force = Util.initValue(this.normalizeValue(force), 100);\n\n\t\tlife && super.reset(life, easing);\n\t};\n\n\t/**\n\t * @inheritdoc\n\t */\n\tinitialize(particle) {\n\t};\n\n\t/**\n\t * Apply this behaviour for all particles every time\n\t *\n\t * @method applyBehaviour\n\t * @memberof Proton#GravityWell\n\t * @instance\n\t *\n\t * @param {Particle} particle\n\t * @param {Number} the integrate time 1/ms\n\t * @param {Int} the particle index\n\t */\n\tapplyBehaviour(particle, time, index) {\n\t\tthis.distanceVec.set(this.centerPoint.x - particle.p.x, this.centerPoint.y - particle.p.y);\n\t\tconst distanceSq = this.distanceVec.lengthSq();\n\n\t\tif (distanceSq !== 0) {\n\t\t\tconst distance = this.distanceVec.length();\n\t\t\tconst factor = (this.force * time) / (distanceSq * distance);\n\n\t\t\tparticle.v.x += factor * this.distanceVec.x;\n\t\t\tparticle.v.y += factor * this.distanceVec.y;\n\t\t}\n\t}\n}","import Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default {\n  initialize(emitter, particle, initializes) {\n    const length = initializes.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      if (initializes[i] instanceof Initialize) {\n        initializes[i].init(emitter, particle);\n      } else {\n        this.init(emitter, particle, initializes[i]);\n      }\n    }\n\n    this.bindEmitter(emitter, particle);\n  },\n\n  // init\n  init(emitter, particle, initialize) {\n    Util.setProp(particle, initialize);\n    Util.setVectorVal(particle, initialize);\n  },\n\n  bindEmitter(emitter, particle) {\n    if (emitter.bindEmitter) {\n      particle.p.add(emitter.p);\n      particle.v.add(emitter.v);\n      particle.a.add(emitter.a);\n\n      particle.v.rotate(MathUtil.degreeTransform(emitter.rotation));\n    }\n  }\n};\n","import Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\nimport Particle from \"../core/Particle\";\nimport EventDispatcher from \"../events/EventDispatcher\";\n\nimport Rate from \"../initialize/Rate\";\nimport InitializeUtil from \"../initialize/InitializeUtil\";\n\nexport default class Emitter extends Particle {\n  /**\n   * You can use this emit particles.\n   *\n   * It will dispatch follow events:\n   * PARTICLE_CREATED\n   * PARTICLE_UPDATA\n   * PARTICLE_DEAD\n   *\n   * @class Emitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   * for example {damping:0.01,bindEmitter:false}\n   */\n  constructor(conf = {}) {\n    super(conf);\n\n    this.particles = [];\n    this.behaviours = [];\n    this.initializes = [];\n\n    this.emitTime = 0;\n    this.emitSpeed = 0;\n    this.totalTime = -1;\n\n    /**\n     * The friction coefficient for all particle emit by This;\n     * @property damping\n     * @type {Number}\n     * @default 0.006\n     */\n    this.damping = 0.006;\n\n    /**\n     * If bindEmitter the particles can bind this emitter's property;\n     * @property bindEmitter\n     * @type {Boolean}\n     * @default true\n     */\n    this.bindEmitter = true;\n\n    /**\n     * The number of particles per second emit (a [particle]/b [s]);\n     * @property rate\n     * @type {Rate}\n     * @default Rate(1, .1)\n     */\n    this.rate = new Rate(1, 0.1);\n\n    this.name = \"Emitter\";\n    this.id = Puid.id(this.name);\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   * @param {Number} emitTime begin emit time;\n   * @param {String} life the life of this emitter\n   */\n  emit(totalTime, life) {\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = Util.initValue(totalTime, Infinity);\n\n    if (life === true || life === \"life\" || life === \"destroy\") {\n      this.life = totalTime === \"once\" ? 1 : this.totalTime;\n    } else if (!isNaN(life)) {\n      this.life = life;\n    }\n\n    this.rate.init();\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this.totalTime = -1;\n    this.emitTime = 0;\n    this.stoped = true;\n  }\n\n  preEmit(time) {\n    let oldStoped = this.stoped;\n    let oldEmitTime = this.emitTime;\n    let oldTotalTime = this.totalTime;\n\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = time;\n    this.rate.init();\n\n    const step = 0.0167;\n    while (time > step) {\n      time -= step;\n      this.update(step);\n    }\n\n    this.stoped = oldStoped;\n    this.emitTime = oldEmitTime + Math.max(time, 0);\n    this.totalTime = oldTotalTime;\n  }\n\n  /**\n   * remove current all particles\n   * @method removeAllParticles\n   */\n  removeAllParticles() {\n    let i = this.particles.length;\n    while (i--) this.particles[i].dead = true;\n  }\n\n  /**\n   * add initialize to this emitter\n   * @method addSelfInitialize\n   */\n  addSelfInitialize(initialize) {\n    if (initialize[\"init\"]) {\n      initialize.init(this);\n    } else {\n      this.initAll();\n    }\n  }\n\n  /**\n   * add the Initialize to particles;\n   *\n   * you can use initializes array:for example emitter.addInitialize(initialize1,initialize2,initialize3);\n   * @method addInitialize\n   * @param {Initialize} initialize like this new Radius(1, 12)\n   */\n  addInitialize(...rest) {\n    let i = rest.length;\n    while (i--) this.initializes.push(rest[i]);\n  }\n\n  /**\n   * remove the Initialize\n   * @method removeInitialize\n   * @param {Initialize} initialize a initialize\n   */\n  removeInitialize(initializer) {\n    const index = this.initializes.indexOf(initializer);\n    if (index > -1) this.initializes.splice(index, 1);\n  }\n\n  /**\n   * remove all Initializes\n   * @method removeInitializers\n   */\n  removeAllInitializers() {\n    Util.emptyArray(this.initializes);\n  }\n\n  /**\n   * add the Behaviour to particles;\n   *\n   * you can use Behaviours array:emitter.addBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addBehaviour\n   * @param {Behaviour} behaviour like this new Color('random')\n   */\n  addBehaviour(...rest) {\n    let i = arguments.length;\n    while (i--) {\n      let behaviour = rest[i];\n      this.behaviours.push(behaviour);\n      if (behaviour.parents) behaviour.parents.push(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour\n   * @method removeBehaviour\n   * @param {Behaviour} behaviour a behaviour\n   */\n  removeBehaviour(behaviour) {\n    let index = this.behaviours.indexOf(behaviour);\n    this.behaviours.splice(index, 1);\n\n    if (behaviour.parents) {\n      index = behaviour.parents.indexOf(behaviour);\n      behaviour.parents.splice(index, 1);\n    }\n\n    return index;\n  }\n\n  /**\n   * remove all behaviours\n   * @method removeAllBehaviours\n   */\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  // emitter update\n  update(time) {\n    this.age += time;\n    if (this.age >= this.life || this.dead) this.destroy();\n\n    this.emitting(time);\n    this.integrate(time);\n  }\n\n  integrate(time) {\n    if (!this.parent) return;\n\n    const damping = 1 - this.damping;\n    this.parent.integrator.calculate(this, time, damping);\n\n    const length = this.particles.length;\n    let i, particle;\n\n    for (i = length - 1; i >= 0; i--) {\n      particle = this.particles[i];\n\n      // particle update\n      particle.update(time, i);\n      this.parent.integrator.calculate(particle, time, damping);\n      this.dispatch(\"PARTICLE_UPDATE\", particle);\n\n      // check dead\n      if (particle.dead) {\n        this.dispatch(\"PARTICLE_DEAD\", particle);\n\n        this.parent.pool.expire(particle);\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n\n  dispatch(event, target) {\n    this.parent && this.parent.dispatchEvent(event, target);\n    this.bindEvent && this.dispatchEvent(event, target);\n  }\n\n  emitting(time) {\n    if (this.totalTime === \"once\") {\n      let i;\n      const length = this.rate.getValue(99999);\n\n      if (length > 0) this.emitSpeed = length;\n      for (i = 0; i < length; i++) this.createParticle();\n      this.totalTime = \"none\";\n    } else {\n      this.emitTime += time;\n\n      if (this.emitTime < this.totalTime) {\n        const length = this.rate.getValue(time);\n        let i;\n\n        if (length > 0) this.emitSpeed = length;\n        for (i = 0; i < length; i++) this.createParticle();\n      }\n    }\n  }\n\n  /**\n   * create single particle;\n   *\n   * can use emit({x:10},new Gravity(10),{'particleUpdate',fun}) or emit([{x:10},new Initialize],new Gravity(10),{'particleUpdate',fun})\n   * @method removeAllParticles\n   */\n  createParticle(initialize, behaviour) {\n    const particle = this.parent.pool.get(Particle);\n    this.setupParticle(particle, initialize, behaviour);\n    this.dispatch(\"PARTICLE_CREATED\", particle);\n\n    return particle;\n  }\n\n  setupParticle(particle, initialize, behaviour) {\n    let initializes = this.initializes;\n    let behaviours = this.behaviours;\n\n    if (initialize) initializes = Util.toArray(initialize);\n    if (behaviour) behaviours = Util.toArray(behaviour);\n\n    particle.reset();\n    InitializeUtil.initialize(this, particle, initializes);\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n\n    this.particles.push(particle);\n  }\n\n  remove() {\n    this.stop();\n    Util.destroyAll(this.particles);\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    this.dead = true;\n    this.remove();\n    this.removeAllInitializers();\n    this.removeAllBehaviours();\n    this.parent && this.parent.removeEmitter(this);\n  }\n}\n\nEventDispatcher.bind(Emitter);\n","import Emitter from \"./Emitter\";\n\nexport default class BehaviourEmitter extends Emitter {\n  /**\n   * The BehaviourEmitter class inherits from Proton.Emitter\n   *\n   * use the BehaviourEmitter you can add behaviours to self;\n   * @class Proton.BehaviourEmitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   */\n  constructor(conf) {\n    super(conf);\n\n    this.selfBehaviours = [];\n  }\n\n  /**\n   * add the Behaviour to emitter;\n   *\n   * you can use Behaviours array:emitter.addSelfBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addSelfBehaviour\n   * @param {Proton.Behaviour} behaviour like this new Proton.Color('random')\n   */\n  addSelfBehaviour(...rest) {\n    let i,\n      length = rest.length;\n\n    for (i = 0; i < length; i++) {\n      let behaviour = rest[i];\n      this.selfBehaviours.push(behaviour);\n      behaviour.initialize(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour for self\n   * @method removeSelfBehaviour\n   * @param {Proton.Behaviour} behaviour a behaviour\n   */\n  removeSelfBehaviour(behaviour) {\n    const index = this.selfBehaviours.indexOf(behaviour);\n    if (index > -1) this.selfBehaviours.splice(index, 1);\n  }\n\n  update(time) {\n    super.update(time);\n\n    if (!this.sleep) {\n      const length = this.selfBehaviours.length;\n      let i;\n\n      for (i = 0; i < length; i++) {\n        this.selfBehaviours[i].applyBehaviour(this, time, i);\n      }\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport Emitter from \"./Emitter\";\n\nexport default class FollowEmitter extends Emitter {\n  /**\n   * The FollowEmitter class inherits from Proton.Emitter\n   *\n   * use the FollowEmitter will emit particle when mousemoving\n   *\n   * @class Proton.FollowEmitter\n   * @constructor\n   * @param {Element} mouseTarget mouseevent's target;\n   * @param {Number} ease the easing of following speed;\n   * @default 0.7\n   * @param {Object} conf the parameters object;\n   */\n  constructor(mouseTarget, ease, conf) {\n    super(conf);\n\n    this.mouseTarget = Util.initValue(mouseTarget, window);\n    this.ease = Util.initValue(ease, 0.7);\n\n    this._allowEmitting = false;\n    this.initEventHandler();\n  }\n\n  initEventHandler() {\n    this.mousemoveHandler = e => this.mousemove.call(this, e);\n    this.mousedownHandler = e => this.mousedown.call(this, e);\n    this.mouseupHandler = e => this.mouseup.call(this, e);\n\n    this.mouseTarget.addEventListener(\n      \"mousemove\",\n      this.mousemoveHandler,\n      false\n    );\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   */\n  emit() {\n    this._allowEmitting = true;\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this._allowEmitting = false;\n  }\n\n  mousemove(e) {\n    if (e.layerX || e.layerX === 0) {\n      this.p.x += (e.layerX - this.p.x) * this.ease;\n      this.p.y += (e.layerY - this.p.y) * this.ease;\n    } else if (e.offsetX || e.offsetX === 0) {\n      this.p.x += (e.offsetX - this.p.x) * this.ease;\n      this.p.y += (e.offsetY - this.p.y) * this.ease;\n    }\n\n    if (this._allowEmitting) super.emit(\"once\");\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.mouseTarget.removeEventListener(\n      \"mousemove\",\n      this.mousemoveHandler,\n      false\n    );\n  }\n}\n","import Pool from \"../core/Pool\";\n\nexport default class BaseRenderer {\n    constructor(element, stroke) {\n        this.pool = new Pool();\n        this.element = element;\n        this.stroke = stroke;\n        this.circleConf = { isCircle: true };\n\n        this.initHandler();\n        this.name = \"BaseRenderer\";\n    }\n\n    setStroke(color = \"#000000\", thinkness = 1) {\n        this.stroke = { color, thinkness };\n    }\n\n    initHandler() {\n        this._protonUpdateHandler = () => {\n            this.onProtonUpdate.call(this);\n        };\n\n        this._protonUpdateAfterHandler = () => {\n            this.onProtonUpdateAfter.call(this);\n        };\n\n        this._emitterAddedHandler = emitter => {\n            this.onEmitterAdded.call(this, emitter);\n        };\n\n        this._emitterRemovedHandler = emitter => {\n            this.onEmitterRemoved.call(this, emitter);\n        };\n\n        this._particleCreatedHandler = particle => {\n            this.onParticleCreated.call(this, particle);\n        };\n\n        this._particleUpdateHandler = particle => {\n            this.onParticleUpdate.call(this, particle);\n        };\n\n        this._particleDeadHandler = particle => {\n            this.onParticleDead.call(this, particle);\n        };\n    }\n\n    init(proton) {\n        this.parent = proton;\n\n        proton.addEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler);\n        proton.addEventListener(\n            \"PROTON_UPDATE_AFTER\",\n            this._protonUpdateAfterHandler\n        );\n\n        proton.addEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler);\n        proton.addEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler);\n\n        proton.addEventListener(\n            \"PARTICLE_CREATED\",\n            this._particleCreatedHandler\n        );\n        proton.addEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler);\n        proton.addEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n    }\n\n    resize(width, height) {}\n\n    destroy() {\n        this.remove();\n    }\n\n    remove(proton) {\n        this.parent.removeEventListener(\n            \"PROTON_UPDATE\",\n            this._protonUpdateHandler\n        );\n        this.parent.removeEventListener(\n            \"PROTON_UPDATE_AFTER\",\n            this._protonUpdateAfterHandler\n        );\n\n        this.parent.removeEventListener(\n            \"EMITTER_ADDED\",\n            this._emitterAddedHandler\n        );\n        this.parent.removeEventListener(\n            \"EMITTER_REMOVED\",\n            this._emitterRemovedHandler\n        );\n\n        this.parent.removeEventListener(\n            \"PARTICLE_CREATED\",\n            this._particleCreatedHandler\n        );\n        this.parent.removeEventListener(\n            \"PARTICLE_UPDATE\",\n            this._particleUpdateHandler\n        );\n        this.parent.removeEventListener(\n            \"PARTICLE_DEAD\",\n            this._particleDeadHandler\n        );\n\n        this.parent = null;\n    }\n\n    onProtonUpdate() {}\n    onProtonUpdateAfter() {}\n\n    onEmitterAdded(emitter) {}\n    onEmitterRemoved(emitter) {}\n\n    onParticleCreated(particle) {}\n    onParticleUpdate(particle) {}\n    onParticleDead(particle) {}\n}\n","import ImgUtil from \"../utils/ImgUtil\";\nimport ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class CanvasRenderer extends BaseRenderer {\n    constructor(element) {\n        super(element);\n\n        this.stroke = null;\n        this.context = this.element.getContext(\"2d\");\n        this.bufferCache = {};\n        this.name = \"CanvasRenderer\";\n    }\n\n    resize(width, height) {\n        this.element.width = width;\n        this.element.height = height;\n    }\n\n    onProtonUpdate() {\n        this.context.clearRect(0, 0, this.element.width, this.element.height);\n    }\n\n    onParticleCreated(particle) {\n        if (particle.body) {\n            ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n        } else {\n            particle.color = particle.color || \"#ff0000\";\n        }\n    }\n\n    onParticleUpdate(particle) {\n        if (particle.body) {\n            if (particle.body instanceof Image) this.drawImage(particle);\n        } else {\n            this.drawCircle(particle);\n        }\n    }\n\n    onParticleDead(particle) {\n        particle.body = null;\n    }\n\n    // private\n    addImg2Body(img, particle) {\n        particle.body = img;\n    }\n\n    // private drawCircle\n    drawImage(particle) {\n        const w = (particle.body.width * particle.scale) | 0;\n        const h = (particle.body.height * particle.scale) | 0;\n        const x = particle.p.x - w / 2;\n        const y = particle.p.y - h / 2;\n\n        if (!!particle.color) {\n            if (!particle.data[\"buffer\"])\n                particle.data.buffer = this.createBuffer(particle.body);\n\n            const bufContext = particle.data.buffer.getContext(\"2d\");\n            bufContext.clearRect(\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height\n            );\n            bufContext.globalAlpha = particle.alpha;\n            bufContext.drawImage(particle.body, 0, 0);\n\n            bufContext.globalCompositeOperation = \"source-atop\";\n            bufContext.fillStyle = ColorUtil.rgbToHex(particle.rgb);\n            bufContext.fillRect(\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height\n            );\n            bufContext.globalCompositeOperation = \"source-over\";\n            bufContext.globalAlpha = 1;\n\n            this.context.drawImage(\n                particle.data.buffer,\n                0,\n                0,\n                particle.data.buffer.width,\n                particle.data.buffer.height,\n                x,\n                y,\n                w,\n                h\n            );\n        } else {\n            this.context.save();\n\n            this.context.globalAlpha = particle.alpha;\n            this.context.translate(particle.p.x, particle.p.y);\n            this.context.rotate(MathUtil.degreeTransform(particle.rotation));\n            this.context.translate(-particle.p.x, -particle.p.y);\n            this.context.drawImage(\n                particle.body,\n                0,\n                0,\n                particle.body.width,\n                particle.body.height,\n                x,\n                y,\n                w,\n                h\n            );\n\n            this.context.globalAlpha = 1;\n            this.context.restore();\n        }\n    }\n\n    // private drawCircle --\n    drawCircle(particle) {\n        if (particle.rgb) {\n            this.context.fillStyle = `rgba(${particle.rgb.r},${particle.rgb.g},${particle.rgb.b},${particle.alpha})`;\n        } else {\n            this.context.fillStyle = particle.color;\n        }\n\n        // draw circle\n        this.context.beginPath();\n        this.context.arc(\n            particle.p.x,\n            particle.p.y,\n            particle.radius,\n            0,\n            Math.PI * 2,\n            true\n        );\n\n        if (this.stroke) {\n            this.context.strokeStyle = this.stroke.color;\n            this.context.lineWidth = this.stroke.thinkness;\n            this.context.stroke();\n        }\n\n        this.context.closePath();\n        this.context.fill();\n    }\n\n    // private createBuffer\n    createBuffer(image) {\n        if (image instanceof Image) {\n            const size = image.width + \"_\" + image.height;\n            let canvas = this.bufferCache[size];\n\n            if (!canvas) {\n                canvas = document.createElement(\"canvas\");\n                canvas.width = image.width;\n                canvas.height = image.height;\n                this.bufferCache[size] = canvas;\n            }\n\n            return canvas;\n        }\n    }\n}\n","import DomUtil from \"../utils/DomUtil\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class DomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.stroke = null;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.addImg2Body = this.addImg2Body.bind(this);\n\n    this.transform3d = false;\n    this.name = \"DomRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n      this.element.appendChild(particle.body);\n    }\n  }\n\n  onParticleUpdate(particle) {\n    if (this.bodyReady(particle)) {\n      if (this.transform3d)\n        DomUtil.transform3d(\n          particle.body,\n          particle.p.x,\n          particle.p.y,\n          particle.scale,\n          particle.rotation\n        );\n      else\n        DomUtil.transform(\n          particle.body,\n          particle.p.x,\n          particle.p.y,\n          particle.scale,\n          particle.rotation\n        );\n\n      particle.body.style.opacity = particle.alpha;\n      if (particle.body.isCircle) {\n        particle.body.style.backgroundColor = particle.color || \"#ff0000\";\n      }\n    }\n  }\n\n  onParticleDead(particle) {\n    if (this.bodyReady(particle)) {\n      this.element.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n  }\n\n  bodyReady(particle) {\n    return (\n      typeof particle.body === \"object\" &&\n      particle.body &&\n      !particle.body.isInner\n    );\n  }\n\n  // private\n  addImg2Body(img, particle) {\n    if (particle.dead) return;\n    particle.body = this.pool.get(img, particle);\n    DomUtil.resize(particle.body, img.width, img.height);\n\n    this.element.appendChild(particle.body);\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body, particle);\n  }\n\n  // private --\n  createCircle(particle) {\n    const dom = DomUtil.createDiv(\n      `${particle.id}_dom`,\n      2 * particle.radius,\n      2 * particle.radius\n    );\n    dom.style.borderRadius = `${particle.radius}px`;\n\n    if (this.stroke) {\n      dom.style.borderColor = this.stroke.color;\n      dom.style.borderWidth = `${this.stroke.thinkness}px`;\n    }\n    dom.isCircle = true;\n\n    return dom;\n  }\n\n  createSprite(body, particle) {\n    const url = typeof body === \"string\" ? body : body.src;\n    const dom = DomUtil.createDiv(\n      `${particle.id}_dom`,\n      body.width,\n      body.height\n    );\n    dom.style.backgroundImage = `url(${url})`;\n\n    return dom;\n  }\n}\n","import BaseRenderer from \"./BaseRenderer\";\n\nexport default class EaselRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.name = \"EaselRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      this.createSprite(particle);\n    } else {\n      this.createCircle(particle);\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.body) {\n      particle.body.x = particle.p.x;\n      particle.body.y = particle.p.y;\n\n      particle.body.alpha = particle.alpha;\n      particle.body.scaleX = particle.body.scaleY = particle.scale;\n      particle.body.rotation = particle.rotation;\n    }\n  }\n\n  onParticleDead(particle) {\n    if (particle.body) {\n      particle.body.parent && particle.body.parent.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n\n    if (particle.graphics) this.pool.expire(particle.graphics);\n  }\n\n  // private\n  createSprite(particle) {\n    particle.body = this.pool.get(particle.body);\n\n    if (particle.body.parent) return;\n    if (particle.body[\"image\"]) {\n      particle.body.regX = particle.body.image.width / 2;\n      particle.body.regY = particle.body.image.height / 2;\n    }\n  }\n\n  createCircle(particle) {\n    const graphics = this.pool.get(createjs.Graphics);\n\n    if (this.stroke) {\n      if (this.stroke instanceof String) graphics.beginStroke(this.stroke);\n      else graphics.beginStroke(\"#000000\");\n    }\n    graphics\n      .beginFill(particle.color || \"#ff0000\")\n      .drawCircle(0, 0, particle.radius);\n\n    const shape = this.pool.get(createjs.Shape, [graphics]);\n\n    particle.body = shape;\n    particle.graphics = graphics;\n  }\n}\n","import Rectangle from \"../math/Rectangle\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class PixelRenderer extends BaseRenderer {\n  constructor(element, rectangle) {\n    super(element);\n\n    this.context = this.element.getContext(\"2d\");\n    this.imageData = null;\n    this.rectangle = null;\n    this.rectangle = rectangle;\n    this.createImageData(rectangle);\n\n    this.name = \"PixelRenderer\";\n  }\n\n  resize(width, height) {\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  createImageData(rectangle) {\n    this.rectangle = rectangle\n      ? rectangle\n      : new Rectangle(0, 0, this.element.width, this.element.height);\n    this.imageData = this.context.createImageData(\n      this.rectangle.width,\n      this.rectangle.height\n    );\n    this.context.putImageData(\n      this.imageData,\n      this.rectangle.x,\n      this.rectangle.y\n    );\n  }\n\n  onProtonUpdate() {\n    this.context.clearRect(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n    this.imageData = this.context.getImageData(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n  }\n\n  onProtonUpdateAfter() {\n    this.context.putImageData(\n      this.imageData,\n      this.rectangle.x,\n      this.rectangle.y\n    );\n  }\n\n  onParticleCreated(particle) {}\n\n  onParticleUpdate(particle) {\n    if (this.imageData) {\n      this.setPixel(\n        this.imageData,\n        Math.floor(particle.p.x - this.rectangle.x),\n        Math.floor(particle.p.y - this.rectangle.y),\n        particle\n      );\n    }\n  }\n\n  setPixel(imagedata, x, y, particle) {\n    const rgb = particle.rgb;\n    if (x < 0 || x > this.element.width || y < 0 || y > this.elementwidth)\n      return;\n\n    const i = ((y >> 0) * imagedata.width + (x >> 0)) * 4;\n\n    imagedata.data[i] = rgb.r;\n    imagedata.data[i + 1] = rgb.g;\n    imagedata.data[i + 2] = rgb.b;\n    imagedata.data[i + 3] = particle.alpha * 255;\n  }\n\n  onParticleDead(particle) {}\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nlet PIXIClass;\nexport default class PixiRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.color = false;\n    this.setColor = false;\n    this.blendMode = null;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.setPIXI(window.PIXI);\n\n    this.name = \"PixiRenderer\";\n  }\n\n  setPIXI(PIXI) {\n    try {\n      PIXIClass = PIXI || { Sprite: {} };\n      this.createFromImage =\n        PIXIClass.Sprite.from || PIXIClass.Sprite.fromImage;\n    } catch (e) {}\n  }\n\n  onProtonUpdate() {}\n\n  /**\n   * @param particle\n   */\n  onParticleCreated(particle) {\n    if (particle.body) {\n      particle.body = this.pool.get(particle.body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n    }\n\n    if (this.blendMode) {\n      particle.body.blendMode = this.blendMode;\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleUpdate(particle) {\n    this.transform(particle, particle.body);\n\n    if (this.setColor === true || this.color === true) {\n      particle.body.tint = ColorUtil.getHex16FromParticle(particle);\n    }\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleDead(particle) {\n    this.element.removeChild(particle.body);\n    this.pool.expire(particle.body);\n    particle.body = null;\n  }\n\n  destroy(particles) {\n    super.destroy();\n    this.pool.destroy();\n\n    let i = particles.length;\n    while (i--) {\n      let particle = particles[i];\n      if (particle.body) {\n        this.element.removeChild(particle.body);\n      }\n    }\n  }\n\n  transform(particle, target) {\n    target.x = particle.p.x;\n    target.y = particle.p.y;\n\n    target.alpha = particle.alpha;\n\n    target.scale.x = particle.scale;\n    target.scale.y = particle.scale;\n\n    // using cached version of MathUtil.PI_180 for slight performance increase.\n    target.rotation = particle.rotation * MathUtil.PI_180; // MathUtil.PI_180;\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body);\n  }\n\n  createSprite(body) {\n    const sprite = body.isInner\n      ? this.createFromImage(body.src)\n      : new PIXIClass.Sprite(body);\n\n    sprite.anchor.x = 0.5;\n    sprite.anchor.y = 0.5;\n\n    return sprite;\n  }\n\n  createCircle(particle) {\n    const graphics = new PIXIClass.Graphics();\n\n    if (this.stroke) {\n      const stroke = this.stroke instanceof String ? this.stroke : 0x000000;\n      graphics.beginStroke(stroke);\n    }\n\n    graphics.beginFill(particle.color || 0x008ced);\n    graphics.drawCircle(0, 0, particle.radius);\n    graphics.endFill();\n\n    return graphics;\n  }\n}\n","import Mat3 from \"../math/Mat3\";\n\nexport default class MStack {\n  constructor() {\n    this.mats = [];\n    this.size = 0;\n\n    for (let i = 0; i < 20; i++)\n      this.mats.push(Mat3.create([0, 0, 0, 0, 0, 0, 0, 0, 0]));\n  }\n\n  set(m, i) {\n    if (i === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[i - 1], m, this.mats[i]);\n\n    this.size = Math.max(this.size, i + 1);\n  }\n\n  push(m) {\n    if (this.size === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[this.size - 1], m, this.mats[this.size]);\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size > 0) this.size--;\n  }\n\n  top() {\n    return this.mats[this.size - 1];\n  }\n}\n","import Mat3 from '../math/Mat3';\nimport BaseRenderer from './BaseRenderer';\n\nimport Util from '../utils/Util';\nimport ImgUtil from '../utils/ImgUtil';\nimport MStack from '../utils/MStack';\nimport DomUtil from '../utils/DomUtil';\nimport WebGLUtil from '../utils/WebGLUtil';\nimport MathUtil from '../math/MathUtil';\n\nexport default class WebGLRenderer extends BaseRenderer {\n\n    constructor(element) {\n        super(element);\n\n        this.gl = this.element.getContext('experimental-webgl', { antialias: true, stencil: false, depth: false });\n        if (!this.gl) alert('Sorry your browser do not suppest WebGL!');\n\n        this.initVar();\n        this.setMaxRadius();\n        this.initShaders();\n        this.initBuffers();\n\n        this.gl.blendEquation(this.gl.FUNC_ADD);\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        this.gl.enable(this.gl.BLEND);\n\n        this.addImg2Body = this.addImg2Body.bind(this);\n\n        this.name = 'WebGLRenderer';\n    }\n\n    init(proton) {\n        super.init(proton);\n        this.resize(this.element.width, this.element.height);\n    }\n\n    resize(width, height) {\n        this.umat[4] = -2;\n        this.umat[7] = 1;\n\n        this.smat[0] = 1 / width;\n        this.smat[4] = 1 / height;\n\n        this.mstack.set(this.umat, 0);\n        this.mstack.set(this.smat, 1);\n\n        this.gl.viewport(0, 0, width, height);\n        this.element.width = width;\n        this.element.height = height;\n    }\n\n    setMaxRadius(radius) {\n        this.circleCanvasURL = this.createCircle(radius);\n    }\n\n    getVertexShader() {\n        const vsSource = ['uniform vec2 viewport;', 'attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform mat3 tMat;', 'varying vec2 vTextureCoord;', 'varying float alpha;', 'void main() {', 'vec3 v = tMat * vec3(aVertexPosition, 1.0);', 'gl_Position = vec4(v.x, v.y, 0, 1);', 'vTextureCoord = aTextureCoord;', 'alpha = tMat[0][2];', '}'].join('\\n');\n        return vsSource;\n    }\n\n    getFragmentShader() {\n        const fsSource = ['precision mediump float;', 'varying vec2 vTextureCoord;', 'varying float alpha;', 'uniform sampler2D uSampler;', 'uniform vec4 color;', 'uniform bool useTexture;', 'uniform vec3 uColor;', 'void main() {', 'vec4 textureColor = texture2D(uSampler, vTextureCoord);', 'gl_FragColor = textureColor * vec4(uColor, 1.0);', 'gl_FragColor.w *= alpha;', '}'].join('\\n');\n        return fsSource;\n    }\n\n    initVar() {\n        this.mstack = new MStack();\n        this.umat = Mat3.create([2, 0, 1, 0, -2, 0, -1, 1, 1]);\n        this.smat = Mat3.create([1 / 100, 0, 1, 0, 1 / 100, 0, 0, 0, 1]);\n        this.texturebuffers = {};\n    }\n\n    blendEquation(A) {\n        this.gl.blendEquation(this.gl[A]);\n    }\n\n    blendFunc(A, B) {\n        this.gl.blendFunc(this.gl[A], this.gl[B]);\n    }\n\n    getShader(gl, str, fs) {\n        const shader = fs ? gl.createShader(gl.FRAGMENT_SHADER) : gl.createShader(gl.VERTEX_SHADER);\n\n        gl.shaderSource(shader, str);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            alert(gl.getShaderInfoLog(shader));\n            return null;\n        }\n\n        return shader;\n    }\n\n    initShaders() {\n        const fragmentShader = this.getShader(this.gl, this.getFragmentShader(), true);\n        const vertexShader = this.getShader(this.gl, this.getVertexShader(), false);\n\n        this.sprogram = this.gl.createProgram();\n        this.gl.attachShader(this.sprogram, vertexShader);\n        this.gl.attachShader(this.sprogram, fragmentShader);\n        this.gl.linkProgram(this.sprogram);\n\n        if (!this.gl.getProgramParameter(this.sprogram, this.gl.LINK_STATUS))\n            alert('Could not initialise shaders');\n\n        this.gl.useProgram(this.sprogram);\n        this.sprogram.vpa = this.gl.getAttribLocation(this.sprogram, 'aVertexPosition');\n        this.sprogram.tca = this.gl.getAttribLocation(this.sprogram, 'aTextureCoord');\n        this.gl.enableVertexAttribArray(this.sprogram.tca);\n        this.gl.enableVertexAttribArray(this.sprogram.vpa);\n\n        this.sprogram.tMatUniform = this.gl.getUniformLocation(this.sprogram, 'tMat');\n        this.sprogram.samplerUniform = this.gl.getUniformLocation(this.sprogram, 'uSampler');\n        this.sprogram.useTex = this.gl.getUniformLocation(this.sprogram, 'useTexture');\n        this.sprogram.color = this.gl.getUniformLocation(this.sprogram, 'uColor');\n        this.gl.uniform1i(this.sprogram.useTex, 1);\n    };\n\n    initBuffers() {\n        const vs = [0, 3, 1, 0, 2, 3];\n        let idx;\n\n        this.unitIBuffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vs), this.gl.STATIC_DRAW);\n\n        let i;\n        let ids = [];\n        for (i = 0; i < 100; i++) ids.push(i);\n        idx = new Uint16Array(ids);\n\n        this.unitI33 = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitI33);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n\n        ids = [];\n        for (i = 0; i < 100; i++) ids.push(i, i + 1, i + 2);\n        idx = new Uint16Array(ids);\n\n        this.stripBuffer = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.stripBuffer);\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n    };\n\n    createCircle(raidus) {\n        this.circleCanvasRadius = WebGLUtil.nhpot(Util.initValue(raidus, 32));\n        const canvas = DomUtil.createCanvas('circle_canvas', this.circleCanvasRadius * 2, this.circleCanvasRadius * 2);\n        const context = canvas.getContext('2d');\n\n        context.beginPath();\n        context.arc(this.circleCanvasRadius, this.circleCanvasRadius, this.circleCanvasRadius, 0, Math.PI * 2, true);\n        context.closePath();\n        context.fillStyle = '#FFF';\n        context.fill();\n\n        return canvas.toDataURL();\n    };\n\n    drawImg2Canvas(particle) {\n        const _w = particle.body.width;\n        const _h = particle.body.height;\n\n        const _width = WebGLUtil.nhpot(particle.body.width);\n        const _height = WebGLUtil.nhpot(particle.body.height);\n\n        const _scaleX = particle.body.width / _width;\n        const _scaleY = particle.body.height / _height;\n\n        if (!this.texturebuffers[particle.data.src])\n            this.texturebuffers[particle.data.src] = [this.gl.createTexture(), this.gl.createBuffer(), this.gl.createBuffer()];\n\n        particle.data.texture = this.texturebuffers[particle.data.src][0];\n        particle.data.vcBuffer = this.texturebuffers[particle.data.src][1];\n        particle.data.tcBuffer = this.texturebuffers[particle.data.src][2];\n\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, _scaleX, 0.0, 0.0, _scaleY, _scaleY, _scaleY]), this.gl.STATIC_DRAW);\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, _w, 0.0, 0.0, _h, _w, _h]), this.gl.STATIC_DRAW);\n\n        const context = particle.data.canvas.getContext('2d');\n        const data = context.getImageData(0, 0, _width, _height);\n\n        this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n        this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST);\n        this.gl.generateMipmap(this.gl.TEXTURE_2D);\n\n        particle.data.textureLoaded = true;\n        particle.data.textureWidth = _w;\n        particle.data.textureHeight = _h;\n    }\n\n    onProtonUpdate() {\n        // this.gl.clearColor(0, 0, 0, 1);\n        // this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n    }\n\n    onParticleCreated(particle) {\n        particle.data.textureLoaded = false;\n        particle.data.tmat = Mat3.create();\n        particle.data.tmat[8] = 1;\n        particle.data.imat = Mat3.create();\n        particle.data.imat[8] = 1;\n\n        if (particle.body) {\n            ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n        } else {\n            ImgUtil.getImgFromCache(this.circleCanvasURL, this.addImg2Body, particle);\n            particle.data.oldScale = particle.radius / this.circleCanvasRadius;\n        }\n    }\n\n    // private\n    addImg2Body(img, particle) {\n        if (particle.dead) return;\n        particle.body = img;\n        particle.data.src = img.src;\n        particle.data.canvas = ImgUtil.getCanvasFromCache(img);\n        particle.data.oldScale = 1;\n\n        this.drawImg2Canvas(particle);\n    }\n\n    onParticleUpdate(particle) {\n        if (particle.data.textureLoaded) {\n            this.updateMatrix(particle);\n\n            this.gl.uniform3f(this.sprogram.color, particle.rgb.r / 255, particle.rgb.g / 255, particle.rgb.b / 255);\n            this.gl.uniformMatrix3fv(this.sprogram.tMatUniform, false, this.mstack.top());\n\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n            this.gl.vertexAttribPointer(this.sprogram.vpa, 2, this.gl.FLOAT, false, 0, 0);\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n            this.gl.vertexAttribPointer(this.sprogram.tca, 2, this.gl.FLOAT, false, 0, 0);\n            this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n            this.gl.uniform1i(this.sprogram.samplerUniform, 0);\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n\n            this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0);\n\n            this.mstack.pop();\n        }\n    }\n\n    onParticleDead(particle) { }\n\n    updateMatrix(particle) {\n        const moveOriginMatrix = WebGLUtil.makeTranslation(-particle.data.textureWidth / 2, -particle.data.textureHeight / 2);\n        const translationMatrix = WebGLUtil.makeTranslation(particle.p.x, particle.p.y);\n\n        const angel = particle.rotation * (MathUtil.PI_180);\n        const rotationMatrix = WebGLUtil.makeRotation(angel);\n\n        const scale = particle.scale * particle.data.oldScale;\n        const scaleMatrix = WebGLUtil.makeScale(scale, scale);\n        let matrix = WebGLUtil.matrixMultiply(moveOriginMatrix, scaleMatrix);\n\n        matrix = WebGLUtil.matrixMultiply(matrix, rotationMatrix);\n        matrix = WebGLUtil.matrixMultiply(matrix, translationMatrix);\n\n        Mat3.inverse(matrix, particle.data.imat);\n        matrix[2] = particle.alpha;\n\n        this.mstack.push(matrix);\n    }\n}","import BaseRenderer from \"./BaseRenderer\";\n\nexport default class CustomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.name = \"CustomRenderer\";\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class LineZone extends Zone {\n  constructor(x1, y1, x2, y2, direction) {\n    super();\n\n    if (x2 - x1 >= 0) {\n      this.x1 = x1;\n      this.y1 = y1;\n      this.x2 = x2;\n      this.y2 = y2;\n    } else {\n      this.x1 = x2;\n      this.y1 = y2;\n      this.x2 = x1;\n      this.y2 = y1;\n    }\n\n    this.dx = this.x2 - this.x1;\n    this.dy = this.y2 - this.y1;\n\n    this.minx = Math.min(this.x1, this.x2);\n    this.miny = Math.min(this.y1, this.y2);\n    this.maxx = Math.max(this.x1, this.x2);\n    this.maxy = Math.max(this.y1, this.y2);\n\n    this.dot = this.x2 * this.y1 - this.x1 * this.y2;\n    this.xxyy = this.dx * this.dx + this.dy * this.dy;\n\n    this.gradient = this.getGradient();\n    this.length = this.getLength();\n    this.direction = Util.initValue(direction, \">\");\n  }\n\n  getPosition() {\n    this.random = Math.random();\n\n    this.vector.x =\n      this.x1 + this.random * this.length * Math.cos(this.gradient);\n    this.vector.y =\n      this.y1 + this.random * this.length * Math.sin(this.gradient);\n\n    return this.vector;\n  }\n\n  getDirection(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = B === 0 ? 1 : B;\n\n    if ((A * x + B * y + C) * D > 0) return true;\n    else return false;\n  }\n\n  getDistance(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = A * x + B * y + C;\n\n    return D / Math.sqrt(this.xxyy);\n  }\n\n  getSymmetric(v) {\n    const tha2 = v.getGradient();\n    const tha1 = this.getGradient();\n    const tha = 2 * (tha1 - tha2);\n\n    const oldx = v.x;\n    const oldy = v.y;\n\n    v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n\n    return v;\n  }\n\n  getGradient() {\n    return Math.atan2(this.dy, this.dx);\n  }\n\n  rangeOut(particle) {\n    const angle = Math.abs(this.getGradient());\n\n    if (angle <= MathUtil.PI / 4) {\n      if (particle.p.x <= this.maxx && particle.p.x >= this.minx) return true;\n    } else {\n      if (particle.p.y <= this.maxy && particle.p.y >= this.miny) return true;\n    }\n\n    return false;\n  }\n\n  getLength() {\n    return Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (\n        this.direction === \">\" ||\n        this.direction === \"R\" ||\n        this.direction === \"right\" ||\n        this.direction === \"down\"\n      ) {\n        if (!this.rangeOut(particle)) return;\n        if (this.getDirection(particle.p.x, particle.p.y)) particle.dead = true;\n      } else {\n        if (!this.rangeOut(particle)) return;\n        if (!this.getDirection(particle.p.x, particle.p.y))\n          particle.dead = true;\n      }\n    } else if (this.crossType === \"bound\") {\n      if (!this.rangeOut(particle)) return;\n\n      if (this.getDistance(particle.p.x, particle.p.y) <= particle.radius) {\n        if (this.dx === 0) {\n          particle.v.x *= -1;\n        } else if (this.dy === 0) {\n          particle.v.y *= -1;\n        } else {\n          this.getSymmetric(particle.v);\n        }\n      }\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, LineZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class CircleZone extends Zone {\n  constructor(x, y, radius) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n\n    this.angle = 0;\n    this.center = { x, y };\n  }\n\n  getPosition() {\n    this.angle = MathUtil.PIx2 * Math.random();\n    this.randomRadius = Math.random() * this.radius;\n\n    this.vector.x = this.x + this.randomRadius * Math.cos(this.angle);\n    this.vector.y = this.y + this.randomRadius * Math.sin(this.angle);\n\n    return this.vector;\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n  crossing(particle) {\n    const d = particle.p.distanceTo(this.center);\n\n    if (this.crossType === \"dead\") {\n      if (d - particle.radius > this.radius) particle.dead = true;\n    } else if (this.crossType === \"bound\") {\n      if (d + particle.radius >= this.radius) this.getSymmetric(particle);\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, CircleZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n\n  getSymmetric(particle) {\n    let tha2 = particle.v.getGradient();\n    let tha1 = this.getGradient(particle);\n\n    let tha = 2 * (tha1 - tha2);\n    let oldx = particle.v.x;\n    let oldy = particle.v.y;\n\n    particle.v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    particle.v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n  }\n\n  getGradient(particle) {\n    return (\n      -MathUtil.PI_2 +\n      Math.atan2(particle.p.y - this.center.y, particle.p.x - this.center.x)\n    );\n  }\n}\n","import Zone from \"./Zone\";\n\nexport default class RectZone extends Zone {\n  constructor(x, y, width, height) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  getPosition() {\n    this.vector.x = this.x + Math.random() * this.width;\n    this.vector.y = this.y + Math.random() * this.height;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    // particle dead zone\n    if (this.crossType === \"dead\") {\n      if (particle.p.x + particle.radius < this.x) particle.dead = true;\n      else if (particle.p.x - particle.radius > this.x + this.width)\n        particle.dead = true;\n\n      if (particle.p.y + particle.radius < this.y) particle.dead = true;\n      else if (particle.p.y - particle.radius > this.y + this.height)\n        particle.dead = true;\n    }\n\n    // particle bound zone\n    else if (this.crossType === \"bound\") {\n      if (particle.p.x - particle.radius < this.x) {\n        particle.p.x = this.x + particle.radius;\n        particle.v.x *= -1;\n      } else if (particle.p.x + particle.radius > this.x + this.width) {\n        particle.p.x = this.x + this.width - particle.radius;\n        particle.v.x *= -1;\n      }\n\n      if (particle.p.y - particle.radius < this.y) {\n        particle.p.y = this.y + particle.radius;\n        particle.v.y *= -1;\n      } else if (particle.p.y + particle.radius > this.y + this.height) {\n        particle.p.y = this.y + this.height - particle.radius;\n        particle.v.y *= -1;\n      }\n    }\n\n    // particle cross zone\n    else if (this.crossType === \"cross\") {\n      if (particle.p.x + particle.radius < this.x && particle.v.x <= 0)\n        particle.p.x = this.x + this.width + particle.radius;\n      else if (\n        particle.p.x - particle.radius > this.x + this.width &&\n        particle.v.x >= 0\n      )\n        particle.p.x = this.x - particle.radius;\n\n      if (particle.p.y + particle.radius < this.y && particle.v.y <= 0)\n        particle.p.y = this.y + this.height + particle.radius;\n      else if (\n        particle.p.y - particle.radius > this.y + this.height &&\n        particle.v.y >= 0\n      )\n        particle.p.y = this.y - particle.radius;\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\n\nexport default class ImageZone extends Zone {\n  constructor(imageData, x, y, d) {\n    super();\n\n    this.reset(imageData, x, y, d);\n  }\n\n  reset(imageData, x, y, d) {\n    this.imageData = imageData;\n    this.x = Util.initValue(x, 0);\n    this.y = Util.initValue(y, 0);\n    this.d = Util.initValue(d, 2);\n\n    this.vectors = [];\n    this.setVectors();\n  }\n\n  setVectors() {\n    let i, j;\n    const length1 = this.imageData.width;\n    const length2 = this.imageData.height;\n\n    for (i = 0; i < length1; i += this.d) {\n      for (j = 0; j < length2; j += this.d) {\n        let index = ((j >> 0) * length1 + (i >> 0)) * 4;\n\n        if (this.imageData.data[index + 3] > 0) {\n          this.vectors.push({ x: i + this.x, y: j + this.y });\n        }\n      }\n    }\n\n    return this.vector;\n  }\n\n  getBound(x, y) {\n    var index = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n    if (this.imageData.data[index + 3] > 0) return true;\n    else return false;\n  }\n\n  getPosition() {\n    const vector = Util.getRandFromArray(this.vectors);\n    return this.vector.copy(vector);\n  }\n\n  getColor(x, y) {\n    x -= this.x;\n    y -= this.y;\n    var i = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n\n    return {\n      r: this.imageData.data[i],\n      g: this.imageData.data[i + 1],\n      b: this.imageData.data[i + 2],\n      a: this.imageData.data[i + 3]\n    };\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (this.getBound(particle.p.x - this.x, particle.p.y - this.y))\n        particle.dead = true;\n      else particle.dead = false;\n    } else if (this.crossType === \"bound\") {\n      if (!this.getBound(particle.p.x - this.x, particle.p.y - this.y))\n        particle.v.negate();\n    }\n  }\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport CircleZone from \"../zone/CircleZone\";\nimport PointZone from \"../zone/PointZone\";\nimport LineZone from \"../zone/LineZone\";\nimport RectZone from \"../zone/RectZone\";\n\nexport default {\n  addEventListener(proton, func) {\n    proton.addEventListener(\"PROTON_UPDATE_AFTER\", () => func());\n  },\n\n  getStyle(color = \"#ff0000\") {\n    const rgb = ColorUtil.hexToRgb(color);\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.5)`;\n  },\n\n  drawZone(proton, canvas, zone, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      if (zone instanceof PointZone) {\n        context.beginPath();\n        context.fillStyle = style;\n        context.arc(zone.x, zone.y, 10, 0, Math.PI * 2, true);\n        context.fill();\n        context.closePath();\n      } else if (zone instanceof LineZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.moveTo(zone.x1, zone.y1);\n        context.lineTo(zone.x2, zone.y2);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof RectZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.drawRect(zone.x, zone.y, zone.width, zone.height);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof CircleZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.arc(zone.x, zone.y, zone.radius, 0, Math.PI * 2, true);\n        context.stroke();\n        context.closePath();\n      }\n    });\n  },\n\n  drawEmitter(proton, canvas, emitter, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      context.beginPath();\n      context.fillStyle = style;\n      context.arc(emitter.p.x, emitter.p.y, 10, 0, Math.PI * 2, true);\n      context.fill();\n      context.closePath();\n    });\n  }\n};\n","import Proton from \"./core/Proton\";\nimport Particle from \"./core/Particle\";\nimport Pool from \"./core/Pool\";\n\nimport Util from \"./utils/Util\";\nimport ColorUtil from \"./utils/ColorUtil\";\nimport MathUtil from \"./math/MathUtil\";\nimport Vector2D from \"./math/Vector2D\";\nimport Polar2D from \"./math/Polar2D\";\nimport Mat3 from \"./math/Mat3\";\nimport Span from \"./math/Span\";\nimport ArraySpan from \"./math/ArraySpan\";\nimport Rectangle from \"./math/Rectangle\";\nimport ease from \"./math/ease\";\n\nimport Rate from \"./initialize/Rate\";\nimport Initialize from \"./initialize/Initialize\";\nimport Life from \"./initialize/Life\";\nimport Position from \"./initialize/Position\";\nimport Velocity from \"./initialize/Velocity\";\nimport Mass from \"./initialize/Mass\";\nimport Radius from \"./initialize/Radius\";\nimport Body from \"./initialize/Body\";\n\nimport Behaviour from \"./behaviour/Behaviour\";\nimport Force from \"./behaviour/Force\";\nimport Attraction from \"./behaviour/Attraction\";\nimport RandomDrift from \"./behaviour/RandomDrift\";\nimport Gravity from \"./behaviour/Gravity\";\nimport Collision from \"./behaviour/Collision\";\nimport CrossZone from \"./behaviour/CrossZone\";\nimport Alpha from \"./behaviour/Alpha\";\nimport Scale from \"./behaviour/Scale\";\nimport Rotate from \"./behaviour/Rotate\";\nimport Color from \"./behaviour/Color\";\nimport Cyclone from \"./behaviour/Cyclone\";\nimport Repulsion from \"./behaviour/Repulsion\";\nimport GravityWell from \"./behaviour/GravityWell\";\n\nimport Emitter from \"./emitter/Emitter\";\nimport BehaviourEmitter from \"./emitter/BehaviourEmitter\";\nimport FollowEmitter from \"./emitter/FollowEmitter\";\n\nimport CanvasRenderer from \"./render/CanvasRenderer\";\nimport DomRenderer from \"./render/DomRenderer\";\nimport EaselRenderer from \"./render/EaselRenderer\";\nimport PixelRenderer from \"./render/PixelRenderer\";\nimport PixiRenderer from \"./render/PixiRenderer\";\nimport WebGLRenderer from \"./render/WebGLRenderer\";\nimport CustomRenderer from \"./render/CustomRenderer\";\n\nimport Zone from \"./zone/Zone\";\nimport LineZone from \"./zone/LineZone\";\nimport CircleZone from \"./zone/CircleZone\";\nimport PointZone from \"./zone/PointZone\";\nimport RectZone from \"./zone/RectZone\";\nimport ImageZone from \"./zone/ImageZone\";\n\nimport Debug from \"./debug/Debug\";\n\n// namespace\nProton.Particle = Particle;\nProton.Pool = Pool;\n\nProton.Util = Util;\nProton.ColorUtil = ColorUtil;\nProton.MathUtil = MathUtil;\nProton.Vector2D = Proton.Vector = Vector2D;\nProton.Polar2D = Proton.Polar = Polar2D;\nProton.ArraySpan = ArraySpan;\nProton.Rectangle = Rectangle;\nProton.Rate = Rate;\nProton.ease = ease;\nProton.Span = Span;\nProton.Mat3 = Mat3;\nProton.getSpan = (a, b, center) => new Span(a, b, center);\nProton.createArraySpan = ArraySpan.createArraySpan;\n\nProton.Initialize = Proton.Init = Initialize;\nProton.Life = Proton.L = Life;\nProton.Position = Proton.P = Position;\nProton.Velocity = Proton.V = Velocity;\nProton.Mass = Proton.M = Mass;\nProton.Radius = Proton.R = Radius;\nProton.Body = Proton.B = Body;\n\nProton.Behaviour = Behaviour;\nProton.Force = Proton.F = Force;\nProton.Attraction = Proton.A = Attraction;\nProton.RandomDrift = Proton.RD = RandomDrift;\nProton.Gravity = Proton.G = Gravity;\nProton.Collision = Collision;\nProton.CrossZone = CrossZone;\nProton.Alpha = Alpha;\nProton.Scale = Proton.S = Scale;\nProton.Rotate = Rotate;\nProton.Color = Color;\nProton.Repulsion = Repulsion;\nProton.Cyclone = Cyclone;\nProton.GravityWell = GravityWell;\n\nProton.Emitter = Emitter;\nProton.BehaviourEmitter = BehaviourEmitter;\nProton.FollowEmitter = FollowEmitter;\n\nProton.Zone = Zone;\nProton.LineZone = LineZone;\nProton.CircleZone = CircleZone;\nProton.PointZone = PointZone;\nProton.RectZone = RectZone;\nProton.ImageZone = ImageZone;\n\nProton.CanvasRenderer = CanvasRenderer;\nProton.DomRenderer = DomRenderer;\nProton.EaselRenderer = EaselRenderer;\nProton.PixiRenderer = PixiRenderer;\nProton.PixelRenderer = PixelRenderer;\nProton.WebGLRenderer = Proton.WebGlRenderer = WebGLRenderer;\nProton.CustomRenderer = CustomRenderer;\n\nProton.Debug = Debug;\nUtil.assign(Proton, ease);\n\n// export\nexport default Proton;\n","/**\n *  RAFManager requestAnimationFrame Manager\n * \n *  Simple package\n * \n *  CODE:\n * \n * \t\t// Add to\n *  \t-- RAFManager.add(func);\n * \n *   \t// Add and carry parameters\n *  \t-- const func = data =>{ console.log(data) };\n *  \t-- RAFManager.add(func, 25, { msg:'hello world!' }); \n * \t\t\n * \t\t// remove\n *  \t-- RAFManager.remove(func);\n *  \t-- RAFManager.stop();\t\n*/\n\n// simple polyfill by https://gist.github.com/paulirish/1579671\n(function () {\n\tlet lastTime = 0;\n\tlet vendors = ['ms', 'moz', 'webkit', 'o'];\n\tfor (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t\twindow.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n\t\twindow.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']\n\t\t\t|| window[vendors[x] + 'CancelRequestAnimationFrame'];\n\t}\n}());\n\nconst RAFManager = {\n\ttimer: 0,\n\tstate: 'stop',\n\tanimations: [],\n\n\tadd(callback, fps = 60, param = null) {\n\t\tconst n = 60 / fps;\n\t\tconst aniData = { callback, fps, n, param, i: 0 };\n\t\tthis.animations.push(aniData);\n\t\tif (this.animations.length >= 1) this.start();\n\n\t\treturn this;\n\t},\n\n\tgetIndex(callback) {\n\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\tconst aniData = this.animations[i];\n\t\t\tif (aniData.callback === callback) return i;\n\t\t}\n\n\t\treturn -1;\n\t},\n\n\tremove(callback) {\n\t\tconst index = this.getIndex(callback);\n\t\tif (index < 0) return;\n\n\t\tthis.deleteMap(callback);\n\t\tif (this.animations.length === 0) this.stop();\n\n\t\treturn this;\n\t},\n\n\tdeleteMap(callback) {\n\t\tconst index = this.getIndex(callback);\n\t\tconst aniData = this.animations[index];\n\t\tfor (let key in aniData) delete aniData[key];\n\n\t\tthis.animations.splice(index, 1);\n\t},\n\n\tstart() {\n\t\tif (this.state === 'start') return;\n\n\t\tthis.state = 'start';\n\t\tthis.tick();\n\t\treturn this;\n\t},\n\n\tstop() {\n\t\tif (this.state === 'stop') return;\n\n\t\tthis.state = 'stop';\n\t\tcancelAnimationFrame(this.timer);\n\t\treturn this;\n\t},\n\n\ttick() {\n\t\tthis.timer = requestAnimationFrame(() => { this.tick(); });\n\n\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\tconst aniData = this.animations[i];\n\t\t\tconst callback = aniData.callback;\n\t\t\tconst param = aniData.param;\n\n\t\t\taniData.i++;\n\t\t\tif (aniData.i >= aniData.n) {\n\t\t\t\tcallback(param);\n\t\t\t\taniData.i = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default RAFManager;","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.act = function () {\n  throw Error(\"act(...) is not supported in production builds of React.\");\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = \"\" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.0.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n"],"names":["Rand","list","probability","target","push","calculation","total","i","this","length","_i","obj","val","a","b","Math","random","Canvas","_React$Component","props","_iid","_oid","size","width","height","canvasRef","React","setTimeout","initCanvas","resize","_this2","bind","addEventListener","canvas","getCanvas","onCanvasDidMount","globalCompositeOperation","getContext","setCanvasSize","_setCanvasSize","heartbeatDetectionCanvasSize","onCanvasInited","current","setInterval","_this3","clientHeight","_setCanvasSize2","onResize","removeEventListener","e","_setCanvasSize3","clientWidth","bg","style","Object","assign","_typeof","onMouseDown","className","handleMouseDown","getStyle","getColor","color","c","hex","result","exec","parseInt","hexToRgb","r","g","Ball","renderProton","_this","createProton","createMiniEmitter","proton","destroy","context","Proton","emitter","rate","num","addInitialize","addBehaviour","customDeadBehaviour","p","x","min","max","y","emit","addEmitter","renderer","onProtonUpdate","fillStyle","fillRect","addRenderer","particle","radius","miniEmitteing","dead","miniEmitter","radiusInitialize","colorBehaviour","reset","update","Color","colors","Infinity","Color$1","crossZoneBehaviour","zone","renderers","key","defaultVal","config","Array","isArray","getProp","rps","mass","life","body","position","v","tha","alpha","getArrProp","scale","cross","rotate","f","emitterV","pos","alphaB","scaleB","colorB","createRenderer","onUpdate","onParticleCreated","onParticleUpdate","operation","Lines","backgroundColor","damping","mouseObj","attractionBehaviour","beginPath","strokeStyle","lineWidth","moveTo","old","lineTo","closePath","stroke","Thick","hue","index","colorTemplate","repulsion","attraction","data","begin","randomAToB","PI","replace","cos","arc","fill","targetPosition","Square","preEmit","clearRect","w","h","save","globalAlpha","translate","degreeTransform","rotation","rect","restore","Cobweb","pointZone","onProtonUpdateAfter","particles","j","pA","pB","dis","distanceTo","Circle","Tadpole","mouseInfo","points","fillPointsData","unshift","pop","drawTadpoleHead","drawTadpoleTail","l","linearEvaluation","A","COLOR","Polygon","createEmitter","count","onParticleDead","drawPolygon","sin","mainEmitter","_ref","undefined","_ref$color","_ref$zone","once","_ref$once","_ref$alpha","gravity","_ref$gravity","pool","get","completed","radiusInit","expire","removeEmitter","oldRadius","emitterCount","Fountain","createCustomBehaviour","gradient","getGradient","add","_Component","_props","set","getResult","type","_props2","String","toLowerCase","getRandom","getBgParticles","Component","s","PIx2","PI_2","PI_180","N180_PI","isInfinity","t","arguments","floor","randomFloating","randomColor","toString","slice","randomZone","pow","toColor16","Symbol","iterator","constructor","prototype","o","TypeError","enumerable","configurable","writable","defineProperty","n","Function","getOwnPropertyDescriptor","value","call","getPrototypeOf","create","setPrototypeOf","__proto__","ReferenceError","u","P","getRandFromArray","center","getValue","initValue","d","createCanvas","document","createElement","id","opacity","transform","createDiv","marginLeft","marginTop","willChange","css3","transform3d","charAt","toUpperCase","substr","m","_","drawImage","getImageData","src","Image","onload","k","emptyArray","toArray","emptyObject","indexOf","classApply","apply","concat","setVectorVal","hasProp","vx","vy","ax","ay","copy","velocity","accelerate","setProp","hasOwnProperty","getSpanValue","destroyAll","E","_index","_cache","getId","getIdFromCache","isBody","isInner","getTarget","T","R","__puid","cache","createOrClone","getCache","clone","O","getEmitter","getRenderer","emitters","emitSpeed","getEmitterPos","initializes","concatArr","behaviours","name","getCreatedNumber","getCount","container","innerHTML","cssText","join","parentNode","appendChild","emitterIndex","rendererIndex","cpool","round","C","S","_listeners","splice","dispatchEvent","hasEventListener","removeAllEventListeners","I","D","eulerIntegrate","sleep","multiplyScalar","clear","V","M","init","remove","parent","EMITTER_ADDED","EMITTER_REMOVED","_fps","PROTON_UPDATE","USE_CLOCK","then","Date","getTime","now","elapsed","amendChangeTabsBug","emittersUpdate","DEFAULT_INTERVAL","PROTON_UPDATE_AFTER","_interval","time","getAllParticles","stats","integrationType","EULER","integrator","MEASURE","RK2","PARTICLE_CREATED","PARTICLE_UPDATE","PARTICLE_SLEEP","PARTICLE_DEAD","B","L","U","easeLinear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","getEasing","F","z","atan2","addVectors","subVectors","divideScalar","distanceToSquared","N","age","sprite","energy","easing","rgb","removeAllBehaviours","applyBehaviours","applyBehaviour","parents","initialize","H","substring","rgbToHex","getHex16FromParticle","Number","q","G","getX","getY","abs","X","Float32Array","multiply","inverse","multiplyVec2","Y","W","_arr","Z","Q","right","bottom","K","J","startTime","nextTime","timePan","numPan","setSpanValue","$","tt","et","it","lifePan","at","rt","vector","crossType","alert","nt","st","console","error","ot","ht","getPosition","lt","ut","rPan","thaPan","normalizeVelocity","ct","dt","massPan","yt","pt","ft","vt","image","inner","gt","mt","removeBehaviour","bt","_t","force","normalizeForce","calculate","xt","kt","normalizeValue","radiusSq","attractionForce","lengthSq","sub","normalize","Pt","Et","panFoce","delay","addXY","At","Tt","Rt","Ot","callback","collisionPool","delta","wt","Ct","crossing","St","It","same","alphaA","Dt","Vt","scaleA","Mt","Bt","rotationA","rotationB","getDirection","Lt","Ut","createArraySpan","colorA","Ft","zt","jt","angle","span","setAngleAndForce","cangle","cyclone","Nt","Ht","qt","Gt","distanceVec","centerPoint","Xt","bindEmitter","Yt","Wt","stoped","emitTime","totalTime","isNaN","initAll","emitting","integrate","dispatch","bindEvent","createParticle","setupParticle","addBehaviours","stop","removeAllInitializers","Zt","Qt","selfBehaviours","Kt","Jt","mousemoveHandler","mousemove","mousedownHandler","mousedown","mouseupHandler","mouseup","mouseTarget","_allowEmitting","layerX","ease","layerY","offsetX","offsetY","window","initEventHandler","$t","te","thinkness","_protonUpdateHandler","_protonUpdateAfterHandler","_emitterAddedHandler","onEmitterAdded","_emitterRemovedHandler","onEmitterRemoved","_particleCreatedHandler","_particleUpdateHandler","_particleDeadHandler","element","circleConf","isCircle","initHandler","ee","ie","addImg2Body","drawCircle","buffer","createBuffer","bufferCache","ae","re","bodyReady","removeChild","createCircle","createSprite","borderRadius","borderColor","borderWidth","backgroundImage","createBody","ne","se","addChild","scaleX","scaleY","graphics","regX","regY","createjs","Graphics","beginStroke","beginFill","Shape","oe","he","rectangle","imageData","createImageData","putImageData","setPixel","elementwidth","le","ue","ce","Sprite","createFromImage","from","fromImage","blendMode","setColor","tint","anchor","endFill","setPIXI","PIXI","de","ye","mats","pe","gl","antialias","stencil","depth","initVar","setMaxRadius","initShaders","initBuffers","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","fe","umat","smat","mstack","viewport","circleCanvasURL","texturebuffers","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getShader","getFragmentShader","getVertexShader","sprogram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","vpa","getAttribLocation","tca","enableVertexAttribArray","tMatUniform","getUniformLocation","samplerUniform","useTex","uniform1i","unitIBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","Uint16Array","STATIC_DRAW","unitI33","stripBuffer","circleCanvasRadius","toDataURL","createTexture","texture","vcBuffer","tcBuffer","ARRAY_BUFFER","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","textureLoaded","textureWidth","textureHeight","tmat","imat","oldScale","drawImg2Canvas","updateMatrix","uniform3f","uniformMatrix3fv","top","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","ve","ge","x1","y1","dy","dx","dot","xxyy","maxx","minx","maxy","miny","direction","rangeOut","getDistance","getSymmetric","x2","y2","getLength","me","be","randomRadius","_e","xe","ke","vectors","setVectors","getBound","negate","drawZone","drawRect","drawEmitter","Particle","Pool","Util","ColorUtil","MathUtil","Vector2D","Vector","Polar2D","Polar","ArraySpan","Rectangle","Rate","Span","Mat3","getSpan","Initialize","Init","Life","Position","Velocity","Mass","Radius","Body","Behaviour","Force","Attraction","RandomDrift","RD","Gravity","Collision","CrossZone","Alpha","Scale","Rotate","Repulsion","Cyclone","GravityWell","Emitter","BehaviourEmitter","FollowEmitter","Zone","LineZone","CircleZone","PointZone","RectZone","ImageZone","CanvasRenderer","DomRenderer","EaselRenderer","PixiRenderer","PixelRenderer","WebGLRenderer","WebGlRenderer","CustomRenderer","Debug","requestAnimationFrame","cancelAnimationFrame","timer","state","animations","fps","param","start","getIndex","deleteMap","tick","REACT_ELEMENT_TYPE","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","MAYBE_ITERATOR_SYMBOL","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","updater","refs","ComponentDummy","PureComponent","isReactComponent","setState","partialState","Error","forceUpdate","pureComponentPrototype","isPureReactComponent","isArrayImpl","ReactSharedInternals","ReactElement","self","source","owner","ref","$$typeof","isValidElement","object","userProvidedKeyEscapeRegex","getElementKey","escaperLookup","match","escape","noop$1","mapIntoArray","children","array","escapedPrefix","nameSoFar","oldElement","newKey","invokeCallback","_init","_payload","maybeIterable","nextNamePrefix","next","done","thenable","status","reason","fulfilledValue","resolveThenable","keys","mapChildren","func","child","lazyInitializer","payload","_status","ctor","_result","moduleObject","default","reportGlobalError","reportError","ErrorEvent","event","bubbles","cancelable","message","process","noop","exports","Children","map","forEach","forEachFunc","forEachContext","only","Fragment","Profiler","StrictMode","Suspense","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","act","fn","cloneElement","propName","childArray","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","childrenLength","defaultProps","createRef","forwardRef","render","lazy","memo","compare","startTransition","scope","prevTransition","currentTransition","returnValue","onStartTransitionFinish","unstable_useCacheRefresh","useCacheRefresh","use","usable","useActionState","action","initialState","permalink","useCallback","deps","useContext","Context","useDebugValue","useDeferredValue","initialValue","useEffect","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useOptimistic","passthrough","reducer","useReducer","initialArg","useRef","useState","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useTransition","version","module"],"sourceRoot":""}