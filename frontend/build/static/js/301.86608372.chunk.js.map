{"version":3,"file":"static/js/301.86608372.chunk.js","mappings":"kKAIA,MAkGA,EAlGwBA,KAEtB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,SAAU,GACVC,MAAO,GACPC,SAAU,MAGLC,EAAUC,IAAeL,EAAAA,EAAAA,UAAS,IAGnCM,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BX,GAAaY,IAAQ,IAChBA,EACH,CAACH,GAAOC,KACP,EA4BL,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJF,EAAAA,EAAAA,MAAA,QAAMI,SA3BWC,UACnBV,EAAEW,iBACF,IACE,MAAMC,EAAQC,aAAaC,QAAQ,SAWX,aAVDC,EAAAA,EAAMC,IAC3B,2CACAzB,EACA,CACE0B,QAAS,CACPC,cAAe,UAAUN,QAKlBO,QACXrB,EAAY,gCAGhB,CAAE,MAAOsB,GAAQ,IAADC,EACdC,QAAQF,MAAM,2BAAyC,QAAdC,EAAAD,EAAMG,gBAAQ,IAAAF,OAAA,EAAdA,EAAgBG,OAAQJ,EAAMK,SACvE3B,EAAY,8CACd,GAM+BS,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAOkB,QAAQ,WAAUnB,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SACEmB,KAAK,OACLC,GAAG,WACH3B,KAAK,WACLC,MAAOX,EAASG,SAChBmC,SAAU9B,EACV+B,YAAY,4BAIhBzB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAOkB,QAAQ,QAAOnB,SAAC,WACvBC,EAAAA,EAAAA,KAAA,SACEmB,KAAK,QACLC,GAAG,QACH3B,KAAK,QACLC,MAAOX,EAASI,MAChBkC,SAAU9B,EACV+B,YAAY,yBAIhBzB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAOkB,QAAQ,WAAUnB,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SACEmB,KAAK,WACLC,GAAG,WACH3B,KAAK,WACLC,MAAOX,EAASK,SAChBiC,SAAU9B,EACV+B,YAAY,4BAIhBtB,EAAAA,EAAAA,KAAA,UAAQmB,KAAK,SAASrB,UAAU,gBAAeC,SAAC,sBAKjDV,IACCW,EAAAA,EAAAA,KAAA,KAAGF,UAAW,aAAYT,EAASkC,SAAS,UAAY,QAAU,IAAKxB,SACpEV,MAGD,C","sources":["Settings/AccountSettings.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./AccountSettings.css\";\n\nconst AccountSettings = () => {\n  // State to hold user details\n  const [userData, setUserData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [feedback, setFeedback] = useState(\"\"); // For success or error messages\n\n  // Handle input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUserData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  // Handle form submission\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem(\"token\"); // Assuming you're storing JWT in localStorage\n      const response = await axios.put(\n        \"http://localhost:5000/api/profile/update\", // Adjust to your backend API endpoint\n        userData,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`, // Include JWT for authentication\n          },\n        }\n      );\n\n      if (response.status === 200) {\n        setFeedback(\"Profile updated successfully!\");\n        // Optionally refresh user data here\n      }\n    } catch (error) {\n      console.error(\"Error updating profile:\", error.response?.data || error.message);\n      setFeedback(\"Failed to update profile. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"account-settings-container\">\n      <h2>Account Settings</h2>\n      <form onSubmit={handleUpdate}>\n        <div className=\"input-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={userData.username}\n            onChange={handleInputChange}\n            placeholder=\"Enter your username\"\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={userData.email}\n            onChange={handleInputChange}\n            placeholder=\"Enter your email\"\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={userData.password}\n            onChange={handleInputChange}\n            placeholder=\"Enter your password\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"update-button\">\n          Update Profile\n        </button>\n      </form>\n\n      {feedback && (\n        <p className={`feedback ${feedback.includes(\"Failed\") ? \"error\" : \"\"}`}>\n          {feedback}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default AccountSettings;\n"],"names":["AccountSettings","userData","setUserData","useState","username","email","password","feedback","setFeedback","handleInputChange","e","name","value","target","prevData","_jsxs","className","children","_jsx","onSubmit","async","preventDefault","token","localStorage","getItem","axios","put","headers","Authorization","status","error","_error$response","console","response","data","message","htmlFor","type","id","onChange","placeholder","includes"],"sourceRoot":""}