{"version":3,"file":"static/js/433.7b75892a.chunk.js","mappings":"kKAIA,MAiGA,EAjGaA,KACX,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,QAAS,MAEJC,EAAUC,IAAeL,EAAAA,EAAAA,UAAS,KAClCM,EAAWC,IAAgBP,EAAAA,EAAAA,WAAS,GAGrCQ,EAAgBC,IACpBV,EAAY,IACPD,EACH,CAACW,EAAEC,OAAOT,MAAOQ,EAAEC,OAAOC,OAC1B,EAuBJ,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBAEJF,EAAAA,EAAAA,MAAA,WAASC,UAAU,cAAaC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gCACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iCAAqC,uFACjDF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,+CAAmD,yGAC/DF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAAIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,8BAAkC,wDAKlDF,EAAAA,EAAAA,MAAA,WAASC,UAAU,kBAAiBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJF,EAAAA,EAAAA,MAAA,QAAMI,SAnCSC,UACnBR,EAAES,iBACFX,GAAa,GACb,IAE0B,aADDY,EAAAA,EAAMC,KAAK,yCAA0CtB,IAC/DuB,QACXhB,EAAY,6DACZN,EAAY,CAAEE,KAAM,GAAIC,MAAO,GAAIC,QAAS,MAE5CE,EAAY,4CAEhB,CAAE,MAAOiB,GACPC,QAAQD,MAAM,yBAA0BA,GACxCjB,EAAY,6CACd,CAAC,QACCE,GAAa,EACf,GAmBiCO,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,UACPC,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLvB,KAAK,OACLU,MAAOb,EAASG,KAChBwB,SAAUjB,EACVkB,UAAQ,QAIZd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,WACPC,EAAAA,EAAAA,KAAA,SACES,KAAK,QACLvB,KAAK,QACLU,MAAOb,EAASI,MAChBuB,SAAUjB,EACVkB,UAAQ,QAIZd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aACPC,EAAAA,EAAAA,KAAA,YACEd,KAAK,UACLU,MAAOb,EAASK,QAChBsB,SAAUjB,EACVkB,UAAQ,QAIZX,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASX,UAAU,gBAAgBc,SAAUrB,EAAUQ,SACjER,EAAY,aAAe,oBAI/BF,IAAYW,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAEV,SAEpC,C","sources":["Settings/Help.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Help.css';\n\nconst Help = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: '',\n  });\n  const [feedback, setFeedback] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Handle input change\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5002/api/help/contact', formData);\n      if (response.status === 200) {\n        setFeedback('Thank you for your message! We will get back to you soon.');\n        setFormData({ name: '', email: '', message: '' });\n      } else {\n        setFeedback('Failed to send message. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setFeedback('An error occurred. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"help-container\">\n      <h2>Help & Support</h2>\n\n      <section className=\"faq-section\">\n        <h3>Frequently Asked Questions</h3>\n        <ul>\n          <li><strong>How can I reset my password?</strong> - Go to the settings page and follow the instructions under \"Account Security.\"</li>\n          <li><strong>How can I change my notification settings?</strong> - You can modify your notification preferences in the notifications section of the settings page.</li>\n          <li><strong>How do I contact support?</strong> - Use the form below to send us a message.</li>\n          {/* Add more FAQs as needed */}\n        </ul>\n      </section>\n\n      <section className=\"contact-section\">\n        <h3>Contact Support</h3>\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-group\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              required\n            />\n          </div>\n\n          <div className=\"input-group\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              required\n            />\n          </div>\n\n          <div className=\"input-group\">\n            <label>Message</label>\n            <textarea\n              name=\"message\"\n              value={formData.message}\n              onChange={handleChange}\n              required\n            ></textarea>\n          </div>\n\n          <button type=\"submit\" className=\"submit-button\" disabled={isLoading}>\n            {isLoading ? 'Sending...' : 'Send Message'}\n          </button>\n        </form>\n\n        {feedback && <p className=\"feedback\">{feedback}</p>}\n      </section>\n    </div>\n  );\n};\n\nexport default Help;\n"],"names":["Help","formData","setFormData","useState","name","email","message","feedback","setFeedback","isLoading","setIsLoading","handleChange","e","target","value","_jsxs","className","children","_jsx","onSubmit","async","preventDefault","axios","post","status","error","console","type","onChange","required","disabled"],"sourceRoot":""}