{"version":3,"file":"static/js/477.2bf6dbd0.chunk.js","mappings":"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","sources":["Search/Searchpage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './SearchPage.css';\n\nconst Search = () => {\n  const [query, setQuery] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const searchContainerRef = useRef(null);\n  const searchBarRef = useRef(null);\n\n  // Initialize page load animations\n  useEffect(() => {\n    const container = searchContainerRef.current;\n    container.classList.add('fade-in');\n    \n    // Initialize particle effects\n    const particles = Array.from({ length: 50 }, () => {\n      const particle = document.createElement('div');\n      particle.className = 'particle';\n      container.appendChild(particle);\n      return particle;\n    });\n\n    particles.forEach(particle => {\n      animateParticle(particle);\n    });\n\n    // Slide in search bar\n    searchBarRef.current.classList.add('slide-in');\n\n    return () => {\n      particles.forEach(particle => particle.remove());\n    };\n  }, []);\n\n  // Fetch current user data on mount\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const response = await fetch('/api/user/current');\n        const data = await response.json();\n        setCurrentUser(data);\n      } catch (error) {\n        console.error('Error fetching current user:', error);\n      }\n    };\n    fetchCurrentUser();\n  }, []);\n\n  // Handle search suggestions with debouncing\n  useEffect(() => {\n    const fetchSuggestions = async () => {\n      if (query.length > 0) {\n        setLoading(true);\n        try {\n          const response = await fetch(`/api/users/search?query=${encodeURIComponent(query)}`);\n          const users = await response.json();\n          \n          const usersWithMutuals = await Promise.all(\n            users.map(async (user) => {\n              const mutualsResponse = await fetch(`/api/users/${user.id}/mutuals`);\n              const mutualsData = await mutualsResponse.json();\n              return {\n                ...user,\n                mutualConnections: mutualsData.mutuals,\n                mutualCount: mutualsData.count\n              };\n            })\n          );\n          \n          setSuggestions(usersWithMutuals);\n        } catch (error) {\n          console.error('Error fetching suggestions:', error);\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    };\n\n    const debounceTimer = setTimeout(fetchSuggestions, 300);\n    return () => clearTimeout(debounceTimer);\n  }, [query]);\n\n  const animateParticle = (particle) => {\n    const animation = particle.animate([\n      { \n        transform: `translate(${Math.random() * 100}vw, ${Math.random() * 100}vh)`,\n        opacity: 0\n      },\n      {\n        transform: `translate(${Math.random() * 100}vw, ${Math.random() * 100}vh)`,\n        opacity: 0.5\n      }\n    ], {\n      duration: 3000 + Math.random() * 2000,\n      iterations: Infinity\n    });\n    return animation;\n  };\n\n  const triggerSearchAnimation = () => {\n    const container = searchContainerRef.current;\n    const rocket = document.createElement('div');\n    rocket.className = 'rocket';\n    container.appendChild(rocket);\n\n    setTimeout(() => {\n      rocket.remove();\n      setShowResults(true);\n    }, 2000);\n  };\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (query) {\n      setLoading(true);\n      setShowResults(false);\n      triggerSearchAnimation();\n\n      try {\n        const response = await fetch(`/api/users/search?query=${encodeURIComponent(query)}&detailed=true`);\n        const results = await response.json();\n        \n        // Delay results to sync with animation\n        setTimeout(() => {\n          setSearchResults(results);\n          setLoading(false);\n        }, 2000);\n      } catch (error) {\n        console.error('Error performing search:', error);\n        setLoading(false);\n      }\n    }\n  };\n\n  const handleSuggestionClick = async (userId) => {\n    try {\n      const response = await fetch(`/api/users/${userId}`);\n      const userData = await response.json();\n      setQuery(userData.name);\n      setSearchResults([userData]);\n      setSuggestions([]);\n    } catch (error) {\n      console.error('Error fetching user details:', error);\n    }\n  };\n\n  return (\n    <div className=\"search-container\" ref={searchContainerRef}>\n      <form onSubmit={handleSearch} className=\"search-bar\" ref={searchBarRef}>\n        <input\n          type=\"text\"\n          placeholder=\"Search for people...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          onFocus={(e) => e.target.classList.add('focused')}\n          onBlur={(e) => e.target.classList.remove('focused')}\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Searching...' : 'Search'}\n        </button>\n      </form>\n\n      {loading && <div className=\"loading-spinner\">Loading...</div>}\n\n      {suggestions.length > 0 && (\n        <ul className=\"suggestions-list\">\n          {suggestions.map((user) => (\n            <li key={user.id} onClick={() => handleSuggestionClick(user.id)} className=\"suggestion-item\">\n              <img src={user.profileImage} alt={user.name} className=\"user-avatar\" />\n              <div className=\"user-info\">\n                <h4>{user.name}</h4>\n                <p className=\"user-title\">{user.title}</p>\n                <div className=\"mutual-connections\">\n                  {user.mutualCount > 0 && (\n                    <>\n                      <span className=\"mutual-count\">{user.mutualCount} mutual connections</span>\n                      <div className=\"mutual-preview\">\n                        {user.mutualConnections.slice(0, 3).map(mutual => (\n                          <span key={mutual.id} className=\"mutual-name\">{mutual.name}</span>\n                        ))}\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {showResults && searchResults.length > 0 && (\n        <div className=\"search-results\">\n          <h3>Search Results</h3>\n          <ul>\n            {searchResults.map((user, index) => (\n              <li \n                key={user.id} \n                className=\"result-item\"\n                style={{animationDelay: `${index * 0.1}s`}}\n                onClick={() => {\n                  const card = document.querySelector(`[data-user-id=\"${user.id}\"]`);\n                  card.classList.add('expanded');\n                }}\n                data-user-id={user.id}\n              >\n                <img src={user.profileImage} alt={user.name} className=\"user-avatar\" />\n                <div className=\"user-info\">\n                  <h4>{user.name}</h4>\n                  <p className=\"user-title\">{user.title}</p>\n                  <p className=\"user-location\">{user.location}</p>\n                  {user.mutualCount > 0 && (\n                    <div className=\"mutual-connections\">\n                      <h5>Mutual Connections ({user.mutualCount})</h5>\n                      <ul className=\"mutual-list\">\n                        {user.mutualConnections.map(mutual => (\n                          <li key={mutual.id}>{mutual.name}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n"],"names":["Search","query","setQuery","useState","suggestions","setSuggestions","searchResults","setSearchResults","currentUser","setCurrentUser","loading","setLoading","showResults","setShowResults","searchContainerRef","useRef","searchBarRef","useEffect","container","current","classList","add","particles","Array","from","length","particle","document","createElement","className","appendChild","forEach","animateParticle","remove","async","response","fetch","data","json","error","console","fetchCurrentUser","debounceTimer","setTimeout","encodeURIComponent","users","usersWithMutuals","Promise","all","map","mutualsResponse","user","id","mutualsData","mutualConnections","mutuals","mutualCount","count","clearTimeout","animate","transform","Math","random","opacity","duration","iterations","Infinity","_jsxs","ref","children","onSubmit","e","preventDefault","triggerSearchAnimation","rocket","results","_jsx","type","placeholder","value","onChange","target","onFocus","onBlur","autoComplete","disabled","onClick","userId","userData","name","handleSuggestionClick","src","profileImage","alt","title","_Fragment","slice","mutual","index","style","animationDelay","querySelector","location"],"sourceRoot":""}