{"version":3,"file":"static/js/891.0dd27368.chunk.js","mappings":"kKAIA,MA4GA,EA5GeA,KACb,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAAgBC,IAAqBN,EAAAA,EAAAA,UAAS,KAErDO,EAAAA,EAAAA,YAAU,KACRC,GAAa,GACZ,IAGH,MAAMA,EAAcC,UAClB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,WAAY,CAC3CC,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,cAGlDjB,EAAUW,EAASO,KAAKnB,QAAU,GACpC,CAAE,MAAOK,GACPe,QAAQf,MAAM,yBAA0BA,EAC1C,GAoDF,OACEgB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YAEJF,EAAAA,EAAAA,MAAA,QAAMI,SArDad,UAKrB,GAJAe,EAAEC,iBACFrB,EAAS,IACTE,EAAkB,IAEbL,EAASyB,OAKd,IACE,MAAMhB,QAAiBC,EAAAA,EAAMgB,KAC3B,aACA,CAAEC,MAAO3B,GACT,CACEY,QAAS,CACPC,cAAe,UAAUC,aAAaC,QAAQ,cAMpDjB,EAAUW,EAASO,KAAKnB,QACxBI,EAAY,IACZI,EAAkB,4BACpB,CAAE,MAAOH,GACPe,QAAQf,MAAM,sBAAuBA,GAGjCA,EAAMO,UAAYP,EAAMO,SAASO,MAAQd,EAAMO,SAASO,KAAKd,MAC/DC,EAASD,EAAMO,SAASO,KAAKd,OAE7BC,EAAS,8DAEb,MA5BEA,EAAS,wBA4BX,EAmBiCiB,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SACEO,KAAK,OACLC,MAAO7B,EACP8B,SAAWP,GAAMtB,EAAYsB,EAAEQ,OAAOF,OACtCG,YAAY,mBAEdX,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAAST,UAAU,aAAYC,SAAC,iBAE9ClB,IAASmB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,aAAYC,SAAElB,IACpCE,IAAkBiB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,eAAcC,SAAEhB,QAGlDiB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SACzBvB,EAAOoC,KAAI,CAACN,EAAOO,KAClBhB,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,aAAYC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,QAAAD,SAAOO,KACPN,EAAAA,EAAAA,KAAA,UACEF,UAAU,gBACVgB,QAASA,IAnCK3B,WACxB,IAEEV,EAAUD,EAAOuC,QAAOT,GAASA,IAAUU,KAC3ChC,EAAkB,8BACpB,CAAE,MAAOH,GACPe,QAAQf,MAAM,wBAAyBA,GACvCC,EAAS,gEACX,GA2ByBmC,CAAkBX,GAAOP,SACzC,aALOc,SAWV,C","sources":["EditProfile/Skills.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Skills.css';\n\nconst Skills = () => {\n  const [skills, setSkills] = useState([]);\n  const [newSkill, setNewSkill] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  useEffect(() => {\n    fetchSkills();\n  }, []);\n\n  // Function to fetch existing skills from the backend\n  const fetchSkills = async () => {\n    try {\n      const response = await axios.get('/profile', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setSkills(response.data.skills || []);\n    } catch (error) {\n      console.error('Error fetching skills:', error);\n    }\n  };\n\n  const handleAddSkill = async (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccessMessage('');\n  \n    if (!newSkill.trim()) {\n      setError('Please enter a skill.');\n      return;\n    }\n  \n    try {\n      const response = await axios.post(\n        '/add_skill',\n        { skill: newSkill },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        }\n      );\n  \n      // Update the skills list on success\n      setSkills(response.data.skills);\n      setNewSkill('');\n      setSuccessMessage('Skill added successfully!');\n    } catch (error) {\n      console.error('Error adding skill:', error);\n  \n      // Capture specific backend error messages if available\n      if (error.response && error.response.data && error.response.data.error) {\n        setError(error.response.data.error);\n      } else {\n        setError('An error occurred while adding the skill. Please try again.');\n      }\n    }\n  };\n  \n\n  const handleDeleteSkill = async (skillToDelete) => {\n    try {\n      // Replace with your delete endpoint if available\n      setSkills(skills.filter(skill => skill !== skillToDelete));\n      setSuccessMessage('Skill removed successfully!');\n    } catch (error) {\n      console.error('Error deleting skill:', error);\n      setError('An error occurred while deleting the skill. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"skills-container\">\n      <h2>Skills</h2>\n\n      <form onSubmit={handleAddSkill}>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            value={newSkill}\n            onChange={(e) => setNewSkill(e.target.value)}\n            placeholder=\"Enter a skill\"\n          />\n          <button type=\"submit\" className=\"add-button\">Add Skill</button>\n        </div>\n        {error && <p className=\"error-text\">{error}</p>}\n        {successMessage && <p className=\"success-text\">{successMessage}</p>}\n      </form>\n\n      <div className=\"skills-list\">\n        {skills.map((skill, index) => (\n          <div key={index} className=\"skill-item\">\n            <span>{skill}</span>\n            <button\n              className=\"delete-button\"\n              onClick={() => handleDeleteSkill(skill)}\n            >\n              Delete\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Skills;\n"],"names":["Skills","skills","setSkills","useState","newSkill","setNewSkill","error","setError","successMessage","setSuccessMessage","useEffect","fetchSkills","async","response","axios","get","headers","Authorization","localStorage","getItem","data","console","_jsxs","className","children","_jsx","onSubmit","e","preventDefault","trim","post","skill","type","value","onChange","target","placeholder","map","index","onClick","filter","skillToDelete","handleDeleteSkill"],"sourceRoot":""}