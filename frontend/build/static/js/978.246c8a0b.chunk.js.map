{"version":3,"file":"static/js/978.246c8a0b.chunk.js","mappings":"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","sources":["EditProfile/EditProfile.js","EditProfile/Education.js","EditProfile/Experience.js","EditProfile/Licenses.js","EditProfile/Projects.js","EditProfile/Skills.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Experience from './Experience';\nimport Education from './Education';\nimport Licenses from './Licenses';\nimport Projects from './Projects';\nimport Skills from './Skills'; // Import Skills\nimport './EditProfile.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBriefcase, faGraduationCap, faLightbulb, faCertificate, faProjectDiagram, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nconst EditProfile = () => {\n  const [activeSection, setActiveSection] = useState(null);\n\n  const handleOpenModal = (section) => {\n    setActiveSection(section);\n  };\n\n  const handleCloseModal = () => {\n    setActiveSection(null);\n  };\n\n  return (\n    <div className={`edit-profile-container ${activeSection ? 'sidebar-active' : ''}`}>\n      <nav className={`edit-profile-nav ${activeSection ? 'sidebar' : ''}`}>\n        {activeSection && (\n          <div className=\"back-button\" onClick={handleCloseModal}>\n            <FontAwesomeIcon icon={faArrowLeft} className=\"icon\" />\n            <span>Back</span>\n          </div>\n        )}\n        <div className=\"nav-item\" onClick={() => handleOpenModal('experience')}>\n          <FontAwesomeIcon icon={faBriefcase} className=\"icon\" />\n          <span>Experience</span>\n        </div>\n        <div className=\"nav-item\" onClick={() => handleOpenModal('education')}>\n          <FontAwesomeIcon icon={faGraduationCap} className=\"icon\" />\n          <span>Education</span>\n        </div>\n        <div className=\"nav-item\" onClick={() => handleOpenModal('skills')}>\n          <FontAwesomeIcon icon={faLightbulb} className=\"icon\" />\n          <span>Skills</span>\n        </div>\n        <div className=\"nav-item\" onClick={() => handleOpenModal('licenses')}>\n          <FontAwesomeIcon icon={faCertificate} className=\"icon\" />\n          <span>Licenses/Certifications</span>\n        </div>\n        <div className=\"nav-item\" onClick={() => handleOpenModal('projects')}>\n          <FontAwesomeIcon icon={faProjectDiagram} className=\"icon\" />\n          <span>Projects/Research</span>\n        </div>\n      </nav>\n\n      <div className=\"edit-profile-content\">\n        {activeSection === 'experience' && <Experience />}\n        {activeSection === 'education' && <Education />}\n        {activeSection === 'skills' && <Skills />}\n        {activeSection === 'licenses' && <Licenses />}\n        {activeSection === 'projects' && <Projects />}\n      </div>\n    </div>\n  );\n};\n\nexport default EditProfile;\n","import React, { useState, useEffect } from 'react';\nimport './Education.css';\n\nconst Education = () => {\n  const [educationEntries, setEducationEntries] = useState([\n    {\n      university: '',\n      degree: '',\n      major: '',\n      startDate: '',\n      endDate: '',\n      bio: '',\n    },\n  ]);\n\n  const degreeOptions = [\n    'Associate of Arts (A.A.)',\n    'Associate of Science (A.S.)',\n    'Bachelor of Arts (B.A.)',\n    'Bachelor of Science (B.S.)',\n    'Master of Arts (M.A.)',\n    'Master of Science (M.S.)',\n    'Doctor of Philosophy (Ph.D.)',\n    'Doctor of Education (Ed.D.)',\n    'Juris Doctor (J.D.)',\n    'Doctor of Medicine (M.D.)',\n  ];\n\n  const majorOptions = [\n    'Accounting',\n    'Aerospace Engineering',\n    'Anthropology',\n    'Architecture',\n    'Art History',\n    'Biology',\n    'Business Administration',\n    'Chemical Engineering',\n    'Chemistry',\n    'Civil Engineering',\n    'Computer Science',\n    'Criminal Justice',\n    'Economics',\n    'Education',\n    'Electrical Engineering',\n    'English Literature',\n    'Environmental Science',\n    'Finance',\n    'History',\n    'Information Technology',\n    'Journalism',\n    'Marketing',\n    'Mathematics',\n    'Mechanical Engineering',\n    'Nursing',\n    'Philosophy',\n    'Physics',\n    'Political Science',\n    'Psychology',\n    'Sociology',\n    'Software Engineering',\n    'Theater Arts',\n  ];\n\n  // Load data from local storage on component mount\n  useEffect(() => {\n    const storedEducation = localStorage.getItem('education');\n    if (storedEducation) {\n      setEducationEntries(JSON.parse(storedEducation));\n    }\n  }, []);\n\n  const handleChange = (index, event) => {\n    const { name, value } = event.target;\n    const updatedEntries = [...educationEntries];\n    updatedEntries[index][name] = value;\n    setEducationEntries(updatedEntries);\n  };\n\n  const handleAddEntry = async () => {\n    // Send the new education entry to the backend\n    const newEntry = {\n      university: '',\n      degree: '',\n      major: '',\n      startDate: '',\n      endDate: '',\n      bio: '',\n    };\n    try {\n      const response = await fetch('https://your-backend-api.com/education', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newEntry),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save to server.');\n      }\n\n      const savedEntry = await response.json();\n\n      const updatedEducationList = [...educationEntries, savedEntry];\n      setEducationEntries(updatedEducationList);\n      localStorage.setItem('education', JSON.stringify(updatedEducationList));\n    } catch (error) {\n      console.error('Error adding education entry:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n\n  const handleRemoveEntry = async (index) => {\n    const entryToDelete = educationEntries[index];\n\n    try {\n      await fetch(`https://your-backend-api.com/education/${entryToDelete.id}`, {\n        method: 'DELETE',\n      });\n\n      const updatedEntries = educationEntries.filter((_, i) => i !== index);\n      setEducationEntries(updatedEntries);\n      localStorage.setItem('education', JSON.stringify(updatedEntries));\n    } catch (error) {\n      console.error('Error deleting entry:', error);\n      alert('Error deleting entry. Please try again.');\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await fetch('https://your-backend-api.com/education/batch', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(educationEntries),\n      });\n      localStorage.setItem('education', JSON.stringify(educationEntries));\n      alert('Education history saved successfully.');\n    } catch (error) {\n      console.error('Error saving data:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"education-container\">\n      <h2>Education History</h2>\n      <form onSubmit={handleSubmit}>\n        {educationEntries.map((entry, index) => (\n          <div key={index} className=\"education-entry\">\n            <div className=\"input-group\">\n              <label>University</label>\n              <input\n                type=\"text\"\n                name=\"university\"\n                value={entry.university}\n                onChange={(e) => handleChange(index, e)}\n                placeholder=\"Enter university name\"\n                required\n              />\n            </div>\n            <div className=\"input-group\">\n              <label>Degree</label>\n              <select\n                name=\"degree\"\n                value={entry.degree}\n                onChange={(e) => handleChange(index, e)}\n                required\n              >\n                <option value=\"\">Select degree</option>\n                {degreeOptions.map((degree, idx) => (\n                  <option key={idx} value={degree}>\n                    {degree}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label>Major</label>\n              <select\n                name=\"major\"\n                value={entry.major}\n                onChange={(e) => handleChange(index, e)}\n                required\n              >\n                <option value=\"\">Select major</option>\n                {majorOptions.map((major, idx) => (\n                  <option key={idx} value={major}>\n                    {major}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label>Start Date</label>\n              <input\n                type=\"date\"\n                name=\"startDate\"\n                value={entry.startDate}\n                onChange={(e) => handleChange(index, e)}\n                required\n              />\n            </div>\n            <div className=\"input-group\">\n              <label>End Date</label>\n              <input\n                type=\"date\"\n                name=\"endDate\"\n                value={entry.endDate}\n                onChange={(e) => handleChange(index, e)}\n                required\n              />\n            </div>\n            <div className=\"input-group\">\n              <label>Bio/Description (optional)</label>\n              <textarea\n                name=\"bio\"\n                value={entry.bio}\n                onChange={(e) => handleChange(index, e)}\n                placeholder=\"Describe your experience\"\n              />\n            </div>\n            {educationEntries.length > 1 && (\n              <button\n                type=\"button\"\n                onClick={() => handleRemoveEntry(index)}\n                className=\"remove-button\"\n              >\n                Remove Entry\n              </button>\n            )}\n          </div>\n        ))}\n        <button\n          type=\"button\"\n          onClick={handleAddEntry}\n          className=\"add-button\"\n        >\n          Add Another Education Entry\n        </button>\n        <button type=\"submit\" className=\"submit-button\">\n          Save Education History\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Education;\n","import React, { useState } from 'react';\nimport './Experience.css';\n\nconst Experience = () => {\n  const [experiences, setExperiences] = useState([\n    {\n      companyName: '',\n      location: '',\n      workMode: '',\n      startDate: '',\n      endDate: '',\n      currentlyWorking: false,\n    },\n  ]);\n\n  const handleChange = (index, event) => {\n    const { name, value, type, checked } = event.target;\n    const updatedExperiences = [...experiences];\n    updatedExperiences[index][name] = type === 'checkbox' ? checked : value;\n    setExperiences(updatedExperiences);\n  };\n\n  const handleAddExperience = () => {\n    setExperiences([\n      ...experiences,\n      {\n        companyName: '',\n        location: '',\n        workMode: '',\n        startDate: '',\n        endDate: '',\n        currentlyWorking: false,\n      },\n    ]);\n  };\n\n  const handleDeleteExperience = (index) => {\n    const updatedExperiences = experiences.filter((_, i) => i !== index);\n    setExperiences(updatedExperiences);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log('Submitted Experiences:', experiences);\n    // Add backend submission logic here if needed\n  };\n\n  return (\n    <div className=\"experience-container\">\n      <h2>Professional Experience</h2>\n      <form onSubmit={handleSubmit}>\n        {experiences.map((experience, index) => (\n          <div key={index} className=\"experience-item\">\n            <div className=\"input-group\">\n              <label>Company Name</label>\n              <input\n                type=\"text\"\n                name=\"companyName\"\n                value={experience.companyName}\n                onChange={(e) => handleChange(index, e)}\n                placeholder=\"Company Name\"\n                required\n              />\n            </div>\n            <div className=\"input-group\">\n              <label>Location</label>\n              <input\n                type=\"text\"\n                name=\"location\"\n                value={experience.location}\n                onChange={(e) => handleChange(index, e)}\n                placeholder=\"Location\"\n                required\n              />\n            </div>\n            <div className=\"input-group\">\n              <label>Work Mode</label>\n              <select\n                name=\"workMode\"\n                value={experience.workMode}\n                onChange={(e) => handleChange(index, e)}\n                required\n              >\n                <option value=\"\">Select...</option>\n                <option value=\"On-site\">On-site</option>\n                <option value=\"Hybrid\">Hybrid</option>\n                <option value=\"Remote\">Remote</option>\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <label>Start Date</label>\n              <input\n                type=\"date\"\n                name=\"startDate\"\n                value={experience.startDate}\n                onChange={(e) => handleChange(index, e)}\n                required\n              />\n            </div>\n            <div className=\"input-group\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  name=\"currentlyWorking\"\n                  checked={experience.currentlyWorking}\n                  onChange={(e) => handleChange(index, e)}\n                />\n                Currently Working Here\n              </label>\n            </div>\n            {!experience.currentlyWorking && (\n              <div className=\"input-group\">\n                <label>End Date</label>\n                <input\n                  type=\"date\"\n                  name=\"endDate\"\n                  value={experience.endDate}\n                  onChange={(e) => handleChange(index, e)}\n                  min={experience.startDate}\n                  required\n                />\n              </div>\n            )}\n            <button\n              type=\"button\"\n              onClick={() => handleDeleteExperience(index)}\n              className=\"delete-button\"\n            >\n              Delete\n            </button>\n          </div>\n        ))}\n        <button\n          type=\"button\"\n          onClick={handleAddExperience}\n          className=\"add-button\"\n        >\n          Add Experience\n        </button>\n        <button type=\"submit\" className=\"submit-button\">\n          Save Experiences\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Experience;\n","import React, { useState } from 'react';\nimport './Licenses.css';\n\nconst Licenses = () => {\n  const [licenses, setLicenses] = useState([\n    {\n      name: '',\n      organization: '',\n      issueDate: '',\n      expirationDate: '',\n      credentialId: '',\n      credentialUrl: '',\n    },\n  ]);\n\n  const handleChange = (index, event) => {\n    const { name, value } = event.target;\n    const updatedLicenses = [...licenses];\n    updatedLicenses[index][name] = value;\n    setLicenses(updatedLicenses);\n  };\n\n  const addLicense = () => {\n    setLicenses([\n      ...licenses,\n      {\n        name: '',\n        organization: '',\n        issueDate: '',\n        expirationDate: '',\n        credentialId: '',\n        credentialUrl: '',\n      },\n    ]);\n  };\n\n  const removeLicense = (index) => {\n    const updatedLicenses = licenses.filter((_, i) => i !== index);\n    setLicenses(updatedLicenses);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Handle form submission, e.g., send data to the backend\n    console.log('Licenses:', licenses);\n  };\n\n  return (\n    <div className=\"licenses-container\">\n      <h2>Licenses & Certifications</h2>\n      <form onSubmit={handleSubmit}>\n        {licenses.map((license, index) => (\n          <div key={index} className=\"license-item\">\n            <div className=\"input-group\">\n              <label htmlFor={`name-${index}`}>Name</label>\n              <input\n                type=\"text\"\n                id={`name-${index}`}\n                name=\"name\"\n                value={license.name}\n                onChange={(e) => handleChange(index, e)}\n                required\n              />\n            </div>\n            <div className=\"input-group\">\n              <label htmlFor={`organization-${index}`}>Issuing Organization</label>\n              <input\n                type=\"text\"\n                id={`organization-${index}`}\n                name=\"organization\"\n                value={license.organization}\n                onChange={(e) => handleChange(index, e)}\n                required\n              />\n            </div>\n            <div className=\"input-group\">\n              <label htmlFor={`issueDate-${index}`}>Issue Date</label>\n              <input\n                type=\"date\"\n                id={`issueDate-${index}`}\n                name=\"issueDate\"\n                value={license.issueDate}\n                onChange={(e) => handleChange(index, e)}\n                required\n              />\n            </div>\n            <div className=\"input-group\">\n              <label htmlFor={`expirationDate-${index}`}>Expiration Date</label>\n              <input\n                type=\"date\"\n                id={`expirationDate-${index}`}\n                name=\"expirationDate\"\n                value={license.expirationDate}\n                onChange={(e) => handleChange(index, e)}\n              />\n            </div>\n            <div className=\"input-group\">\n              <label htmlFor={`credentialId-${index}`}>Credential ID</label>\n              <input\n                type=\"text\"\n                id={`credentialId-${index}`}\n                name=\"credentialId\"\n                value={license.credentialId}\n                onChange={(e) => handleChange(index, e)}\n              />\n            </div>\n            <div className=\"input-group\">\n              <label htmlFor={`credentialUrl-${index}`}>Credential URL</label>\n              <input\n                type=\"url\"\n                id={`credentialUrl-${index}`}\n                name=\"credentialUrl\"\n                value={license.credentialUrl}\n                onChange={(e) => handleChange(index, e)}\n              />\n            </div>\n            <button\n              type=\"button\"\n              className=\"remove-button\"\n              onClick={() => removeLicense(index)}\n            >\n              Remove\n            </button>\n          </div>\n        ))}\n        <button\n          type=\"button\"\n          className=\"add-button\"\n          onClick={addLicense}\n        >\n          Add Another License/Certification\n        </button>\n        <button type=\"submit\" className=\"submit-button\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Licenses;\n","import React, { useState } from 'react';\nimport './Projects.css';\n\nconst Projects = () => {\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState({\n    title: '',\n    description: '',\n    technologies: '',\n    startDate: '',\n    endDate: '',\n    link: '',\n  });\n\n  const handleChange = (e) => {\n    setNewProject({ ...newProject, [e.target.name]: e.target.value });\n  };\n\n  const handleAddProject = () => {\n    setProjects([...projects, newProject]);\n    setNewProject({\n      title: '',\n      description: '',\n      technologies: '',\n      startDate: '',\n      endDate: '',\n      link: '',\n    });\n  };\n\n  const handleDeleteProject = (index) => {\n    const updatedProjects = projects.filter((_, i) => i !== index);\n    setProjects(updatedProjects);\n  };\n\n  return (\n    <div className=\"projects-container\">\n      <h2>Projects & Research</h2>\n      <div className=\"project-form\">\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={newProject.title}\n          onChange={handleChange}\n          placeholder=\"Project Title\"\n        />\n        <textarea\n          name=\"description\"\n          value={newProject.description}\n          onChange={handleChange}\n          placeholder=\"Project Description\"\n        />\n        <input\n          type=\"text\"\n          name=\"technologies\"\n          value={newProject.technologies}\n          onChange={handleChange}\n          placeholder=\"Technologies Used (comma-separated)\"\n        />\n        <input\n          type=\"date\"\n          name=\"startDate\"\n          value={newProject.startDate}\n          onChange={handleChange}\n        />\n        <input\n          type=\"date\"\n          name=\"endDate\"\n          value={newProject.endDate}\n          onChange={handleChange}\n        />\n        <input\n          type=\"url\"\n          name=\"link\"\n          value={newProject.link}\n          onChange={handleChange}\n          placeholder=\"Project Link (optional)\"\n        />\n        <button onClick={handleAddProject}>Add Project</button>\n      </div>\n      <div className=\"projects-list\">\n        {projects.map((project, index) => (\n          <div key={index} className=\"project-item\">\n            <h3>{project.title}</h3>\n            <p>{project.description}</p>\n            <p><strong>Technologies:</strong> {project.technologies}</p>\n            <p>\n              <strong>Duration:</strong> {project.startDate} to {project.endDate}\n            </p>\n            {project.link && (\n              <p>\n                <strong>Link:</strong> <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">{project.link}</a>\n              </p>\n            )}\n            <button onClick={() => handleDeleteProject(index)}>Delete</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Skills.css';\n\nconst Skills = () => {\n  const [skills, setSkills] = useState([]);\n  const [newSkill, setNewSkill] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  useEffect(() => {\n    fetchSkills();\n  }, []);\n\n  // Function to fetch existing skills from the backend\n  const fetchSkills = async () => {\n    try {\n      const response = await axios.get('/profile', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      setSkills(response.data.skills || []);\n    } catch (error) {\n      console.error('Error fetching skills:', error);\n    }\n  };\n\n  const handleAddSkill = async (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccessMessage('');\n  \n    if (!newSkill.trim()) {\n      setError('Please enter a skill.');\n      return;\n    }\n  \n    try {\n      const response = await axios.post(\n        '/add_skill',\n        { skill: newSkill },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        }\n      );\n  \n      // Update the skills list on success\n      setSkills(response.data.skills);\n      setNewSkill('');\n      setSuccessMessage('Skill added successfully!');\n    } catch (error) {\n      console.error('Error adding skill:', error);\n  \n      // Capture specific backend error messages if available\n      if (error.response && error.response.data && error.response.data.error) {\n        setError(error.response.data.error);\n      } else {\n        setError('An error occurred while adding the skill. Please try again.');\n      }\n    }\n  };\n  \n\n  const handleDeleteSkill = async (skillToDelete) => {\n    try {\n      // Replace with your delete endpoint if available\n      setSkills(skills.filter(skill => skill !== skillToDelete));\n      setSuccessMessage('Skill removed successfully!');\n    } catch (error) {\n      console.error('Error deleting skill:', error);\n      setError('An error occurred while deleting the skill. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"skills-container\">\n      <h2>Skills</h2>\n\n      <form onSubmit={handleAddSkill}>\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            value={newSkill}\n            onChange={(e) => setNewSkill(e.target.value)}\n            placeholder=\"Enter a skill\"\n          />\n          <button type=\"submit\" className=\"add-button\">Add Skill</button>\n        </div>\n        {error && <p className=\"error-text\">{error}</p>}\n        {successMessage && <p className=\"success-text\">{successMessage}</p>}\n      </form>\n\n      <div className=\"skills-list\">\n        {skills.map((skill, index) => (\n          <div key={index} className=\"skill-item\">\n            <span>{skill}</span>\n            <button\n              className=\"delete-button\"\n              onClick={() => handleDeleteSkill(skill)}\n            >\n              Delete\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Skills;\n"],"names":["EditProfile","activeSection","setActiveSection","useState","handleOpenModal","section","_jsxs","className","children","onClick","handleCloseModal","_jsx","FontAwesomeIcon","icon","faArrowLeft","faBriefcase","faGraduationCap","faLightbulb","faCertificate","faProjectDiagram","Experience","Education","Skills","Licenses","Projects","educationEntries","setEducationEntries","university","degree","major","startDate","endDate","bio","degreeOptions","majorOptions","useEffect","storedEducation","localStorage","getItem","JSON","parse","handleChange","index","event","name","value","target","updatedEntries","onSubmit","async","preventDefault","fetch","method","headers","body","stringify","setItem","alert","error","console","map","entry","type","onChange","e","placeholder","required","idx","length","entryToDelete","id","filter","_","i","handleRemoveEntry","newEntry","response","ok","Error","savedEntry","json","updatedEducationList","experiences","setExperiences","companyName","location","workMode","currentlyWorking","checked","updatedExperiences","log","experience","min","handleDeleteExperience","handleAddExperience","licenses","setLicenses","organization","issueDate","expirationDate","credentialId","credentialUrl","updatedLicenses","license","htmlFor","removeLicense","addLicense","projects","setProjects","newProject","setNewProject","title","description","technologies","link","handleAddProject","project","href","rel","updatedProjects","handleDeleteProject","skills","setSkills","newSkill","setNewSkill","setError","successMessage","setSuccessMessage","fetchSkills","axios","get","Authorization","data","trim","post","skill","skillToDelete","handleDeleteSkill"],"sourceRoot":""}