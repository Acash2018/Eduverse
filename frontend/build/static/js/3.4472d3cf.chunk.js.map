{"version":3,"file":"static/js/3.4472d3cf.chunk.js","mappings":"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","sources":["Settings/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, Outlet, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { FaUserShield, FaBell, FaLock, FaBan, FaQuestionCircle } from 'react-icons/fa';\nimport './Settings.css';\n\nconst Settings = () => {\n  const [originalSettings, setOriginalSettings] = useState(null); // Store the initial settings fetched from the backend\n  const [currentSettings, setCurrentSettings] = useState({}); // Track current settings being edited\n  const [feedback, setFeedback] = useState(''); // Display feedback messages for user actions\n  const navigate = useNavigate(); // Navigate to different routes\n\n  // Fetch user settings when the component is mounted\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Retrieve JWT token from localStorage\n        const response = await axios.get('http://localhost:5000/api/settings', {\n          headers: {\n            Authorization: `Bearer ${token}`, // Include token in request headers\n          },\n        });\n        setOriginalSettings(response.data); // Set original settings for resetting\n        setCurrentSettings(response.data); // Populate current settings with fetched data\n      } catch (error) {\n        if (error.response?.status === 404) {\n          setFeedback('Settings not found. Please check the URL or try again.');\n        } else {\n          console.error('Error fetching settings:', error.response?.data || error.message);\n          setFeedback('Failed to load settings. Please try again later.');\n        }\n      }\n    };\n\n    fetchSettings();\n  }, []);\n\n  // Save updated settings to the backend\n  const handleSaveChanges = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.put(\n        'http://localhost:5000/api/settings/update',\n        currentSettings,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`, // Include token in request headers\n          },\n        }\n      );\n\n      if (response.status === 200) {\n        setFeedback('Settings updated successfully!');\n        setOriginalSettings(currentSettings); // Update original settings after save\n        navigate('/dashboard'); // Redirect to the dashboard after saving\n      }\n    } catch (error) {\n      setFeedback('Failed to update settings. Please try again.');\n      console.error('Error updating settings:', error.response?.data || error.message);\n    }\n  };\n\n  // Reset settings to their original state\n  const handleResetToOriginal = () => {\n    setCurrentSettings(originalSettings);\n    setFeedback('Changes have been reset.');\n  };\n\n  // Handle user logout\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Clear token from localStorage\n    setFeedback('You have been logged out.');\n    navigate('/login'); // Redirect to login page\n  };\n\n  return (\n    <div className=\"settings-container\">\n      <h2>Settings</h2>\n\n      {/* Icon-based grid for different setting options */}\n      <div className=\"settings-grid\">\n        <Link to=\"/settings/profile-privacy\" className=\"settings-link\">\n          <FaUserShield size={50} />\n          <span>Profile Privacy</span>\n        </Link>\n\n        <Link to=\"/settings/notifications\" className=\"settings-link\">\n          <FaBell size={50} />\n          <span>Notification Preferences</span>\n        </Link>\n\n        <Link to=\"/settings/account-security\" className=\"settings-link\">\n          <FaLock size={50} />\n          <span>Account Security</span>\n        </Link>\n\n        <Link to=\"/settings/blocked\" className=\"settings-link\">\n          <FaBan size={50} />\n          <span>Blocked Users</span>\n        </Link>\n\n        <Link to=\"/settings/help\" className=\"settings-link\">\n          <FaQuestionCircle size={50} />\n          <span>Help & Support</span>\n        </Link>\n      </div>\n\n      {/* Content section to render nested routes */}\n      <div className=\"settings-content\">\n        <Outlet />\n\n        {/* Buttons to Save Changes, Reset, and Logout */}\n        <div className=\"settings-actions\">\n          <button className=\"save-button\" onClick={handleSaveChanges}>\n            Save Changes\n          </button>\n          <button className=\"reset-button\" onClick={handleResetToOriginal}>\n            Back to Original Settings\n          </button>\n          <button className=\"logout-button\" onClick={handleLogout}>\n            Logout\n          </button>\n        </div>\n\n        {/* Feedback Section */}\n        {feedback && <p className=\"feedback\">{feedback}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n"],"names":["Settings","originalSettings","setOriginalSettings","useState","currentSettings","setCurrentSettings","feedback","setFeedback","navigate","useNavigate","useEffect","async","token","localStorage","getItem","response","axios","get","headers","Authorization","data","error","_error$response","_error$response2","status","console","message","fetchSettings","_jsxs","className","children","_jsx","Link","to","FaUserShield","size","FaBell","FaLock","FaBan","FaQuestionCircle","Outlet","onClick","put","_error$response3","handleResetToOriginal","handleLogout","removeItem"],"sourceRoot":""}